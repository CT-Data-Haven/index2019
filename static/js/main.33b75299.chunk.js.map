{"version":3,"sources":["utils/utils.js","utils/NoteContext.js","components/Intro.jsx","components/Footer.jsx","components/Dash.jsx","components/Stage.jsx","components/Legend.jsx","components/Tip.jsx","components/Scatterplot.jsx","components/BarChart.jsx","components/Controls.jsx","components/DataTable.jsx","pages/Scores.jsx","components/Profile.jsx","pages/Survey.jsx","components/Choropleth.jsx","pages/Risks.jsx","pages/Chime.jsx","pages/Internet.jsx","components/Header.jsx","App.js","serviceWorker.js","index.js"],"names":["_filterByKey","data","key","value","first","_","cleanHdrLabels","lbl","hdr","cleanIdxLabels","fmt","fmtStr","d","undefined","format","getProfile","filterBy","filterVal","meta","profData","variable","compareCt","level","length","wide","m","val","indicator","display","filterForScatter","filterForBar","region","out","getMapData","vals","map","name","keyBy","getQMeta","getRegions","filter","uniq","RegExp","test","filterByString","string","matchKeys","keys","indexOf","compact","createScales","pals","rev","pal","n","groups","reverse","colorscale","scaleOrdinal","sizescale","makeChoroScale","scheme","nBrks","mapValues","values","sort","brks","ckmeans","slice","scaleThreshold","domain","range","makeTooltip","min","NoteContext","React","createContext","noteOpen","handleClose","Intro","props","Consumer","className","Alert","variant","Heading","Button","data-dismiss","aria-label","aria-controls","aria-expanded","onClick","Collapse","in","source","note","escapeHtml","id","text","href","Footer","footerTxt","urls","dl","slug","toLowerCase","dw","github","Container","Row","Col","Dash","intro","headline","children","download","location","Stage","type","versus","colon","comma","lblBy","lblBy2","Card","Header","as","hdrComponents","Body","flush","axisLbl","legendTypes","threshold","LegendThreshold","ordinal","LegendOrdinal","Legend","LegendByType","labelFormat","label","style","scale","Tip","lbls","tipLblr","vs","content","i","numFmt","hover","x","y","color","cx","cy","r","fillOpacity","strokeOpacity","stroke","fill","Scatterplot","xAccess","yAccess","palette","xRange","yRange","points","margin","top","right","bottom","left","size","xAccessor","yAccessor","pointStyle","opacity","xExtent","yExtent","axes","orient","baseline","tickFormat","responsiveWidth","hoverAnnotation","svgAnnotationRules","screenCoordinates","tooltipContent","match","join","substring","titleLabel","BarChart","rAccess","colorVar","labels","oAccess","oAccessor","rAccessor","oPadding","oLabel","projection","strokeWidth","renderKey","annotations","lblRules","pieceHoverAnnotation","customClickBehavior","IdxBarChart","QBarChart","coords","isNaN","small","transform","dx","dy","ControlHolder","Form","Ctrl","register","useFormContext","Group","controlId","Label","Control","ref","onChange","NestedCtrl","Object","e","SurveyMainControls","Fragment","regions","topics","GroupControls","ScoreMainControls","variables","ScoreCompareControls","concat","v1","SparkControls","Check","inline","custom","checked","RiskMainControls","indicators","ChimeMainControls","ages","InternetMainControls","makeSpark","col","maxes","cell","row","rowIndex","extraData","max","w","width","DataTable","spark","isCommunity","omit","colNames","difference","tblColumns","numberCols","pickBy","c","q","getMaxes","cols","formatter","isNumber","dataField","classes","headerClasses","formatExtraData","align","bootstrap4","condensed","bordered","keyField","columns","Scores","index_comps","formMethods","useForm","mode","flatMap","pull","getVariables","initValues","v2","useState","setV1","setV2","setRegion","setSpark","onFormChange","getValues","_v1","_v2","_region","md","handleSubmit","grouping","dataBy","target","Profile","headerStyle","Survey","topic","group","setTopic","setIndicator","setGroup","_topic","_indicator","_group","q0","g0","setValue","qDisplay","groupBy","getNestedGrps","profileData","denom","Choropleth","getStyle","feature","properties","fillColor","weight","handleFeature","layer","on","featureHilite","featureUnhilite","bindTooltip","direction","offset","setStyle","shp","bbox","geo","b","topojson","getBounds","this","shape","objects","town","Map","bounds","zoomSnap","zoomDelta","scrollWheelZoom","TileLayer","url","attribution","subdomains","minZoom","maxZoom","ext","GeoJSON","interactive","onEachFeature","Component","Risks","towns","setTown","mapData","Chime","age","setAge","filtered","nestedProf","k","ageData","toArray","getGrpProfile","_age","Internet","Navbar","expand","fixed","Toggle","Nav","hdrs","h","to","Link","title","survey","risks","scores","chime","internet","App","obj","useLocation","pathname","page_meta","useDownload","setNoteOpen","v","Provider","exact","path","render","bytown","omitBy","town_topo","Boolean","window","hostname","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kirGAQMA,EAAe,SAACC,EAAMC,EAAKC,GAAZ,IAAmBC,IAAnB,gEACnBA,EAAQC,OAAOJ,EAAP,eAAgBC,EAAMC,IAAWE,SAASJ,EAAT,eAAkBC,EAAMC,KAI7DG,EAAiB,SAACC,GAAuB,IAAlBH,IAAiB,yDACtCI,EAAMH,UAAUE,EAAK,KAAM,KACjC,OAAOH,EAAQC,aAAaG,GAAOH,YAAYG,IAG3CC,EAAiB,SAACF,GAAD,OACrBD,EAAeC,GAAK,GAAS,UA6BzBG,EAAM,SAACC,GAAD,OACV,SAACC,GAAD,OAAc,OAANA,QAAoBC,IAAND,EAAkB,MAAQE,YAAOH,EAAPG,CAAeF,KAK3DG,EAAa,SAACd,EAAMe,EAAUC,EAAWC,GAAiE,wDAAC,IAC3GC,EAD4DC,EAA8C,uDAAnC,YAAaC,EAAsB,wDAO9G,GAAwB,KAJtBF,EADEE,EACShB,SAASJ,GAAM,SAACW,GAAD,OAAOA,EAAEI,KAAcC,GAAyB,UAAZL,EAAEU,SAErDtB,EAAaC,EAAMe,EAAUC,GAAW,IAExCM,OACX,MAAO,GAEP,IAAMC,EAAOnB,MAAMa,GAAM,SAACO,GAC1B,IAAMX,EAASW,EAAEX,QAAU,OACrBY,EAAMhB,EAAII,EAAJJ,CAAYS,EAASM,EAAEL,KACnC,MAAO,CACLO,UAAWF,EAAEG,QACbzB,MAAOuB,MAGX,OAAOF,GA2BHK,EAAmB,SAAC5B,GAAD,OACvBD,EAAaC,EAAM,WAAY,SAAS,IAGpC6B,EAAe,SAAC7B,EAAM8B,EAAQX,GAClC,IAAIY,EAWJ,MAViB,cAAbZ,GAEAY,EADa,gBAAXD,EACI1B,SAASJ,GAAM,SAACW,GAAD,OAAOP,WAAW,CAAC,UAAW,YAAaO,EAAEU,UAE3DjB,SAASJ,GAAM,SAACW,GAAD,OAAOP,WAAW,CAAC0B,EAAQ,eAAgBnB,EAAEmB,WAErEC,EAAM3B,SAAS2B,EAAK,CAAE,SAAY,WAElCA,EAAM3B,SAASJ,EAAM,CAAE,KAAQ8B,IAE1BC,GAYHC,EAAa,SAAChC,EAAM0B,GACxB,IAAIO,EAMJ,OAJEA,EADEjC,EAAK,GAAGqB,MACHtB,EAAaC,EAAM,QAAS,QAAQ,GAEpCA,EAGPI,QAAQ6B,GACLC,KAAI,SAACvB,GAAD,MAAQ,CACXwB,KAAMxB,EAAEwB,KACRjC,MAAOS,EAAEe,OAEVU,MAAM,QACNlC,SA8BDmC,EAAW,SAACpB,EAAMS,GAAP,OACf3B,EAAakB,EAAM,YAAaS,GAAW,IAGvCY,EAAa,SAACtC,GAAD,OACjBI,QAAQJ,GACLuC,QAAO,SAAC5B,GAAD,OAAOP,WAAW,CAAC,UAAW,YAAaO,EAAEU,UACpDa,IAAI,QACJM,OAEAD,QAAO,SAAC5B,GAAD,OAAQ8B,OAAO,sBAAsBC,KAAK/B,MACjDT,SAwBCyC,EAAiB,SAAC1B,EAAM2B,GAC5B,IAAMC,EAAYzC,QAAQa,GACvB6B,OACAZ,KAAI,SAACvB,GAAD,OAAOA,EAAEoC,QAAQH,IAAW,GAAIjC,KACpCqC,UACA9C,QACH,OAAOE,OAAOa,EAAM4B,IAMhBI,EAAe,SAACjD,EAAMkD,EAAM/B,EAAUgC,GAC1C,IAKIC,EALEC,EAAIjD,OAAO8C,GACXI,EAASlD,QAAQJ,GACpBkC,IAAIf,GACJqB,OACAtC,QAUH,OAPEkD,EADED,EACI/C,YAAY8C,EAAKG,GAAIC,EAAOhC,QAAQiC,UAEpCnD,OAAO8C,EAAKG,GAAIC,EAAOhC,QAKxB,CAAEkC,WAFKC,YAAaH,EAAQF,GAEPM,UADhBD,YAAaH,EAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAoB7CK,EAAiB,SAAC3D,EAAM4D,EAAQC,GACpC,IAAM5B,EAAO7B,QAAQJ,GAClB8D,UAAU,SACVC,SACAf,UACAgB,OACA9D,QACH,GAAK+B,EAAKX,OAEH,CACL,IAAM2C,EAAOC,kBAAQjC,EAAM4B,GAAO3B,KAAI,SAACvB,GAAD,OAAOA,EAAE,MAAIwD,MAAM,GAEzD,OAAOC,cACJC,OAAOJ,GACPK,MAAMV,EAAOC,IANhB,OAAOO,cAAiBC,OAAO,CAAC,EAAG,IAAIC,MAAM,CAAC,UAU5CC,EAAc,SAACpC,EAAMjC,EAAOW,GAAwB,IAAhB2D,EAAe,uDAAT,KAC9C,GAAIA,EAAK,CACP,IAAM7C,EAAoB,IAAVzB,EAAc,IAAMO,EAAII,EAAJJ,CAAY+D,GAAO/D,EAAII,EAAJJ,CAAYP,GACnE,MAAM,GAAN,OAAWiC,EAAX,aAAsBR,GAEtB,MAAM,GAAN,OAAWQ,EAAX,aAAsB1B,EAAII,EAAJJ,CAAYP,K,sDCjRzBuE,EAAcC,IAAMC,cAAc,CAC7CC,UAAU,EACVC,YAAa,eCoCAC,G,OAjCD,SAACC,GAAD,OACZ,kBAACN,EAAYO,SAAb,MAEI,gBAAGJ,EAAH,EAAGA,SAAUC,EAAb,EAAaA,YAAb,OACE,yBAAKI,UAAU,SACb,kBAACC,EAAA,EAAD,CAAOC,QAAQ,UAAUF,UAAU,+BACjC,kBAACC,EAAA,EAAME,QAAP,6BAEE,kBAACC,EAAA,EAAD,CAAQF,QAAQ,OACdF,UAAU,uBACVK,eAAa,QACbC,aAAW,aACXC,gBAAc,gBACdC,gBAAgBb,EAChBc,QAAUb,GAERD,EAAW,OAAS,SAG1B,kBAACe,EAAA,EAAD,CAAUC,GAAKhB,GACb,kBAAC,IAAD,CAAeiB,OAASd,EAAMe,KAAOC,YAAa,EAAQC,GAAG,oBAIjE,kBAACd,EAAA,EAAD,CAAOC,QAAQ,QAAQF,UAAU,4BAC/B,kBAAC,IAAD,CAAeY,OAASd,EAAMkB,OAC9B,gHAAqF,uBAAGC,KAAK,0CAAR,eAArF,YAA8J,uBAAGA,KAAK,8BAAR,gBAA9J,Y,kBCEGC,G,OA/BA,SAACpB,GACd,IAAIqB,EACJ,QAAmBxF,IAAfmE,EAAMsB,KACRD,EAAY,SACP,CACL,IAAME,EAAE,qCAAkCvB,EAAMsB,KAAKE,MACrDH,EACE,8CACgBrB,EAAMpD,QAAQ6E,cAD9B,aACqD,uBAAGN,KAAOI,GAAV,QADrD,uCACgH,uBAAGJ,KAAOnB,EAAM0B,IAAhB,cADhH,oDACoM,uBAAGP,KAAOnB,EAAMsB,KAAKK,QAArB,UADpM,sBAKJ,OACE,yBAAKzB,UAAU,UACb,kBAAC0B,EAAA,EAAD,KACE,6BACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC3B,EAAA,EAAD,CAAOC,QAAQ,QAAQF,UAAU,UAC/B,kBAACC,EAAA,EAAME,QAAP,2BACEgB,EAEF,8EAAmD,uBAAGF,KAAK,mCAAR,mDCHlDY,G,OAhBF,SAAC/B,GAAD,OACX,yBAAKE,UAAU,QACb,kBAAC0B,EAAA,EAAD,KACE,gCACE,yEACA,4BAAM5B,EAAMgC,MAAMC,WAEpB,kBAAC,EAAD,eAAOlB,KAAOf,EAAMe,MAAYf,EAAMgC,QAEpChC,EAAMkC,SAENlC,EAAMmC,SAASC,SAAW,kBAAC,EAAYpC,EAAMmC,UAAgB,S,mCCOtDE,G,OAnBD,SAACrC,GACb,IL8BqBsC,EK9Bf9G,GL8Be8G,EK9BKtC,EAAMsC,KLsCzBjH,WAPS,CACdkH,OAAQ,oCACRC,MAAO,6CACPC,MAAO,8BACPC,MAAO,8BACPC,OAAQ,gDAEgBL,KKtCd,eAA+BtC,IAE3C,OACE,yBAAKE,UAAU,SACb,kBAAC0C,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,OAAN,CAAaC,GAAG,MACZtH,EACAwE,EAAM+C,eAAiB,MAE3B,kBAACH,EAAA,EAAKI,KAAN,CAAW9C,UAAYF,EAAMiD,OAAS,OAClCjD,EAAMkC,UAEV,kBAACU,EAAA,EAAKxB,OAAN,CAAalB,UAAU,yBAA0BF,EAAMkD,SAAW,U,oCCbpEC,G,OAAc,CAClBC,UAAWC,IACXC,QAASC,MAkBIC,EAfA,SAACxD,GACd,IAAMyD,EAAeN,EAAYnD,EAAMsC,MACjCxG,EAASkE,EAAM0D,aAAgB,SAACC,GAAD,OAAWA,EAAQjI,EAAIsE,EAAMlE,OAAVJ,CAAkBiI,GAAS,IACnF,OACE,yBAAKzD,UAAU,SAAS0D,MAAQ5D,EAAM4D,OACpC,kBAACH,EAAD,CACEC,YAAc5H,EACd+H,MAAQ7D,EAAM6D,UCEPC,G,OAhBH,SAAC9D,GACX,IAAM+D,EAAO/D,EAAMgE,QAAUhE,EAAMiE,GAAG9G,IAAI6C,EAAMgE,SAAWhE,EAAMiE,GAC3DC,EAAUlE,EAAMiE,GAAG9G,KAAI,SAACvB,EAAGuI,GAAJ,OAC3B,yBAAKjJ,IAAG,iBAAciJ,IACpB,uBAAGjJ,IAAG,eAAYiJ,IAAO,0BAAMjJ,IAAG,aAAUiJ,IAASJ,EAAKI,GAAG5H,OAAR,UAAqBwH,EAAKI,GAA1B,MAAoC,GAAhE,KAA8EnE,EAAMoE,OAAOpE,EAAM/E,KAAKW,SAInI,OACE,yBAAKsE,UAAU,WACb,4BAAMF,EAAM/E,KAAK+E,EAAMxE,MACrB0I,KCwDFG,I,OAAQ,SAARA,EAASzI,EAAG0I,EAAGC,EAAGC,GAAV,OACZ,uBAAGtJ,IAAG,UAAOmJ,EAAP,QAAsBnE,UAAU,gBACpC,4BACEuE,GAAKH,EACLI,GAAKH,EACLI,EAAI,GACJC,YAAc,EACdC,cAAgB,EAChBC,OAASN,EAAM5I,EAAEU,OACjByI,KAAOP,EAAM5I,EAAEU,YAKN0I,GA1EK,SAAChF,GAAW,IAAD,cACFA,EAAMiE,GADJ,GACtBgB,EADsB,KACbC,EADa,OAEKhH,EAAa8B,EAAM/E,KAAMkK,QAAS,SAAS,GAArE1G,EAFqB,EAErBA,WAAYE,EAFS,EAETA,UAEdyG,EAAS,CAAC/J,MAAMA,MAAM2E,EAAM/E,KAAMgK,IAAW5J,MAAMA,MAAM2E,EAAM/E,KAAMgK,KACrEI,EAAS,CAAChK,MAAMA,MAAM2E,EAAM/E,KAAMiK,IAAW7J,MAAMA,MAAM2E,EAAM/E,KAAMiK,KAGrExJ,EAAMsE,EAAMoE,QAAW,SAACxI,GAAD,OAAOA,GAEpC,OACE,yBAAKsE,UAAU,qBACb,kBAAC,oBAAD,CACEoF,OAAStF,EAAM/E,KACfsK,OAPS,CAAEC,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAQjDC,KAAO,CAAC,IAAK,KACbC,UAAYZ,EACZa,UAAYZ,EACZa,WAAa,SAACnK,GAAD,MAAQ,CACnBmJ,KAAMtG,EAAW7C,EAAEU,OACnBwI,OAAQrG,EAAW7C,EAAEU,OACrBqI,EAAGhG,EAAU/C,EAAEU,OACf0J,QAAS,KAEXC,QAAU,CAAC,IAAAb,EAAO,GAAgB,KAAAA,EAAO,IACzCc,QAAU,CAAC,IAAAb,EAAO,GAAgB,KAAAA,EAAO,IACzCc,KAAM,CACJ,CAAEC,OAAQ,OAAQzC,MAAOlI,EAAeyJ,GAAUmB,SAAU,QAASC,WAAY5K,GACjF,CAAE0K,OAAQ,SAAUzC,MAAOlI,EAAewJ,GAAUoB,SAAU,QAASC,WAAY5K,IAErF6K,iBAAkB,EAElBC,gBAAkB,CAAC,SAAC5K,GAAD,MAAQ,CACzB0G,KAAM,cACNkC,MAAO/F,EAAW7C,EAAEU,UAEtBmK,mBAAqB,gBAAGC,EAAH,EAAGA,kBAAmB9K,EAAtB,EAAsBA,EAAtB,OAA+BA,GAAgB,gBAAXA,EAAE0G,KAA0B+B,GAAMzI,EAAG8K,EAAkB,GAAIA,EAAkB,GAAIjI,GAAc,MACxJkI,eAAiB,SAAC/K,GAAD,OACf,kBAAC,EAAD,CAAKX,KAAOW,EAAEX,KAAOqH,KAAK,UACxB2B,GAAKjE,EAAMiE,GACXzI,IAAI,OACJwI,QAAU,SAACpI,GAAD,OAAOH,EAAeG,GAAGgL,MAAM,UAAUC,KAAK,KACxDzC,OAAS1I,OAIf,kBAAC,EAAD,CACE4G,KAAK,UACLuB,MAAQpF,EACRiF,YAAc,SAAC9H,GAAD,OR/BH,SAACL,GAAD,IAAM+C,EAAN,uDAAU,EAAV,OACjBjD,aAAaE,EAAIuL,UAAUxI,IQ8BAyI,CAAWnL,IAChCgI,MAAO,CACL6B,MAAO,MACPC,OAAQ,YCvDZsB,GAAW,SAAChH,GT8GE,IAAC/E,EAAMmB,EAANnB,ES7GP+E,EAAM/E,KT6GOmB,ES7GD4D,EAAMiH,QT8G9B5L,MAAMJ,GAAM,SAACW,GAIX,OAHqC,IAAjCP,OAAOO,GAAGoC,QAAQ5B,KACpBR,EAAEQ,GAAY,MAETR,KSnHiB,IAElB6C,EAAeP,EAAa8B,EAAM/E,KAAMkK,QAASnF,EAAMkH,SAA6B,aAAnBlH,EAAMkH,UAAvEzI,WACF/C,EAAMsE,EAAMoE,QAAW,SAACxI,GAAD,OAAOA,GAE9BuL,EAASnH,EAAM/E,KAAKkC,KAAI,SAACvB,GAAD,gBAC5B+H,MAAOjI,EAAIE,EAAEoE,EAAMiH,WADS,cAE3BjH,EAAMoH,QAAUxL,EAAEoE,EAAMoH,UAFG,cAG3BpH,EAAMiH,QAAUrL,EAAEoE,EAAMiH,UAHG,qBAItB,aAJsB,KAO9B,OACE,yBAAK/G,UAAU,SACb,kBAAC,yBAAD,CACEjF,KAAO+E,EAAM/E,KACbsK,OAAS,CAAEC,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,KACjD0B,UAAYrH,EAAMoH,QAClBE,UAAYtH,EAAMiH,QAClB3E,KAAK,MACLiF,SAAW,EACXC,QAAS,EACTC,WAAW,aACX7D,MAAQ,SAAChI,GAAD,MAAQ,CACdmJ,KAAMtG,EAAW7C,EAAEoE,EAAMkH,WACzBpC,OAAQ,QACR4C,YAAa,MACb1B,QAAS,KAEX2B,UAAY,SAAC/L,EAAGuI,GAAJ,OAAUA,GACtByD,YAAcT,EACdV,mBAAqB,SAAC7K,GAAD,OAAOiM,GAASjM,EAAGoE,EAAMoH,QAASpH,EAAMiH,QAASvL,IACtE6K,iBAAkB,EAClBuB,qBAAuB,CAAC,GAErB,CACDxF,KAAM,YACNsB,MAAO,SAAChI,GAAD,MAAQ,CACboK,QAAS,EACTlB,OAAQ,WAGZiD,oBAAsB,SAACnM,GAAD,OAAOoE,EAAMW,QAAQ/E,QAO7CoM,GAAc,SAAChI,GAEnB,IAAMoH,EAA4B,cAAlBpH,EAAMiH,QAA0B,OAAQ,QAClDC,EAA6B,cAAlBlH,EAAMiH,QAA0B,QAAU,WAE3D,OACE,kBAAC,GAAD,CACEhM,KAAO+E,EAAM/E,KACbmM,QAAUA,EACVH,QAAUjH,EAAMiH,QAChBC,SAAWA,KAKXe,GAAY,SAACjI,GACjB,OACE,kBAAC,GAAD,CACE/E,KAAO+E,EAAM/E,KACbmM,QAAU,QACVH,QAAUjH,EAAMiH,QAChBC,SAAW,WACX9C,OAASpE,EAAMoE,OACfzD,QAAUX,EAAMW,WAQhBkH,GAAW,SAAC,EAA0BT,EAASH,EAASvL,GAAS,IAAnDgL,EAAkD,EAAlDA,kBAAmB9K,EAA+B,EAA/BA,EACrC,GAAe,cAAXA,EAAE0G,KAAsB,CAC1B,IACM4F,EADUC,MAAMzB,EAAkB,IACf,CAAC,EAAGA,EAAkB,IAAMA,EAC/C0B,EAAQF,EAAO,GAAK,GAC1B,OACE,uBACEhI,UAAS,uBAAoBkI,EAAQ,OAAS,SAC9ClN,IAAG,cAAWU,EAAEwL,IAChBiB,UAAS,oBAAiBH,EAAjB,MAET,0BAAM5D,EAAI,EAAIC,EAAI,EAAI+D,GAAKF,EAAQ,QAAU,SAAWG,GAAK,GAAM7M,EAAIE,EAAEqL,MAI7E,OAAO,M,UCtFLuB,I,OAAgB,SAACxI,GACrB,OACE,yBAAKE,UAAU,YACb,kBAACuI,GAAA,EAAD,KACE,kBAAC5G,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACI9B,EAAMkC,eAQdwG,GAAO,SAAC1I,GAAW,IACf2I,EAAaC,cAAbD,SAER,OACE,kBAACF,GAAA,EAAKI,MAAN,CAAYC,UAAY9I,EAAM5C,MAC5B,kBAACqL,GAAA,EAAKM,MAAN,KAAc/I,EAAM2D,OAAS,YAAc3D,EAAM5C,KAAK0J,UAAU,IAChE,kBAAC2B,GAAA,EAAKO,QAAN,CACElG,GAAG,SACH1F,KAAO4C,EAAM5C,KACb8C,UAAU,gBACV+I,IAAMN,EACNO,SAAWlJ,EAAMkJ,UAEflJ,EAAMjC,KAAKZ,KAAI,SAACvB,GAAD,OACf,4BAAQV,KAAOU,EAAET,OAASS,GAAKoE,EAAM5C,KAAOjC,MAAQS,EAAET,OAASS,GAC3DA,EAAEgB,SAAWtB,EAAeM,UAQpCuN,GAAa,SAACnJ,GAAW,IACrB2I,EAAaC,cAAbD,SAER,OACE,kBAACF,GAAA,EAAKI,MAAN,CAAYC,UAAY9I,EAAM5C,MAC5B,kBAACqL,GAAA,EAAKM,MAAN,KAAc/I,EAAM2D,OAAS,YAAc3D,EAAM5C,KAAK0J,UAAU,IAChE,kBAAC2B,GAAA,EAAKO,QAAN,CACElG,GAAG,SACH1F,KAAO4C,EAAM5C,KACb8C,UAAU,gBACV+I,IAAMN,EACNO,SAAWlJ,EAAMkJ,UAEfE,OAAOrL,KAAKiC,EAAMjC,MAAMZ,KAAI,SAACvB,EAAGuI,GAAJ,OAC5B,8BAAUR,MAAQ/H,EAAIV,IAAMiJ,EAAI,UAC5BnE,EAAMjC,KAAKnC,GAAGuB,KAAI,SAACkM,GAAD,OAClB,4BAAQlO,MAAQkO,EAAInO,IAAMmO,EAAI,OAAUA,aAShDC,GAAqB,SAACtJ,GAAD,OACzB,kBAAC,IAAMuJ,SAAP,KAEE,kBAAC,GAAD,CAAMnM,KAAK,UAAUW,KAAOiC,EAAMwJ,QAAUN,SAAWlJ,EAAMkJ,WAE7D,kBAAC,GAAD,CAAM9L,KAAK,SAASW,KAAOiC,EAAMyJ,OAASP,SAAWlJ,EAAMkJ,WAE3D,kBAAC,GAAD,CAAM9L,KAAK,aACTW,KAAOiC,EAAM9D,KAAKiB,KAAI,SAACvB,GAAD,MAAQ,CAAET,MAAOS,EAAEe,UAAWC,QAAShB,EAAEgB,YAC/DsM,SAAWlJ,EAAMkJ,SACjBvF,MAAM,+BAKN+F,GAAgB,SAAC1J,GAAD,OACpB,kBAAC,GAAD,CAAY5C,KAAK,SAASW,KAAOiC,EAAMzB,OAAS2K,SAAWlJ,EAAMkJ,YAG7DS,GAAoB,SAAC3J,GAAD,OACxB,kBAAC,IAAMuJ,SAAP,KAEE,kBAAC,GAAD,CAAMnM,KAAK,UAAUW,KAAOiC,EAAMwJ,QAAUN,SAAWlJ,EAAMkJ,WAE7D,kBAAC,GAAD,CAAM9L,KAAK,MAAMW,KAAOiC,EAAM4J,UAAYV,SAAWlJ,EAAMkJ,SAAWvF,MAAM,sBAI1EkG,GAAuB,SAAC7J,GAAD,OAC3B,kBAAC,GAAD,CAAM5C,KAAK,MACTW,MV0DoB6L,EU1DE5J,EAAM4J,UV2D9BvO,OAAOuO,EAAW,GAAGE,OAAOzO,OAAOuO,EAAW,KU3DLzM,KAAI,SAACvB,GAAD,MAAQ,CACjDT,MAAOS,EAAGgB,QAASnB,EAAeG,OAEpCsN,SAAWlJ,EAAMkJ,SACjBvF,MAAK,kBAAerI,EAAe0E,EAAM+J,IAAI,GAAxC,wBVsDc,IAACH,GUlDlBI,GAAgB,SAAChK,GAAD,OACpB,yBAAKE,UAAU,sCACb,kBAACuI,GAAA,EAAKwB,MAAN,CACEC,QAAM,EACNC,QAAM,EACNC,QAAUpK,EAAMoK,QAChBnJ,GAAG,kBACH7D,KAAK,cACL8L,SAAWlJ,EAAMkJ,SACjBvF,MAAM,qBAKN0G,GAAmB,SAACrK,GAAD,OACvB,kBAAC,IAAMuJ,SAAP,KAEE,kBAAC,GAAD,CAAMnM,KAAK,SAASW,KAAOiC,EAAMyJ,OAASP,SAAWlJ,EAAMkJ,WAE3D,kBAAC,GAAD,CAAM9L,KAAK,aACTW,KAAOiC,EAAMsK,WAAWnN,KAAI,SAACvB,GAAD,MAAQ,CAAET,MAAOS,EAAEe,UAAWC,QAAShB,EAAEgB,YACrEsM,SAAWlJ,EAAMkJ,SACjBvF,MAAM,+BAKN4G,GAAoB,SAACvK,GAAD,OACxB,kBAAC,IAAMuJ,SAAP,KAEE,kBAAC,GAAD,CAAMnM,KAAK,aACTW,KAAOiC,EAAMsK,WAAWnN,KAAI,SAACvB,GAAD,MAAQ,CAAET,MAAOS,EAAEe,UAAWC,QAAShB,EAAEgB,YACrEsM,SAAWlJ,EAAMkJ,SACjBvF,MAAM,uBAGR,kBAAC,GAAD,CAAMvG,KAAK,OAAOW,KAAOiC,EAAMwK,KAAOtB,SAAWlJ,EAAMkJ,SAAWvF,MAAM,0BAItE8G,GAAuB,SAACzK,GAAD,OAC3B,kBAAC,IAAMuJ,SAAP,KAEE,kBAAC,GAAD,CAAMnM,KAAK,aACTW,KAAOiC,EAAMsK,WAAWnN,KAAI,SAACvB,GAAD,MAAQ,CAAET,MAAOS,EAAEe,UAAWC,QAAShB,EAAEgB,YACrEsM,SAAWlJ,EAAMkJ,a,qBCvGjBwB,I,OAAY,SAAC5O,EAAQ6O,EAAKC,GAAd,OAAwB,SAACC,EAAMC,EAAKC,EAAUC,GAC9D,IAAMC,EAAML,EAAMD,GAEZO,EAAIL,EADMA,EAAOI,EAAO,IACH,IAAO,EAClC,OACE,yBAAK/K,UAAU,QAAQ0D,MAAO,CAAEuH,MAAOD,IACrC,0BAAMhL,UAAU,aAAcxE,EAAII,EAAJJ,CAAYmP,QAKjCO,GA/DG,SAAC,GAAqC,IAAnCnQ,EAAkC,EAAlCA,KAAM8O,EAA4B,EAA5BA,GAAI7N,EAAwB,EAAxBA,KAAMmP,EAAkB,EAAlBA,MAAOpM,EAAW,EAAXA,KACpCqM,EAAqB,cAAPvB,EAEdwB,EAAI,CAAI,QAAS,WAAY,UAAzB,OADQD,EAAc,CAAC,SAAW,CAAC,SAIvCE,EXmLW,SAACV,EAAKS,GAAN,OACjBlQ,QAAQyP,GACL/M,OACA0N,WAAWF,GACXpQ,QWvLcuQ,CAAWzQ,EAAK,GAAIsQ,GAC/BX,EX8NS,SAAC3P,GAEhB,IAAM0Q,EAAatQ,QAAQJ,EAAK,IAC7B2Q,OAAOvQ,YACP0C,OACA5C,QACH,OAAOE,QAAQsQ,GACZxO,KAAI,SAAC0O,GAAD,MAAQ,CACXC,EAAGD,EACHZ,IAAK5P,QAAQJ,GAAMkC,IAAI0O,GAAGZ,MAAM9P,YAEjCkC,MAAM,KACN0B,UAAU,OACV5D,QW3OW4Q,CAAS9Q,GAEjB+Q,EAAOR,EAASrO,KAAI,SAACwN,EAAKxG,GAC9B,IAAI8H,EACEC,OAAyBrQ,IAAdK,EAAKyO,GAUtB,OAPIsB,EAFAC,EACEb,EACUX,GAAUxO,EAAKyO,GAAK7O,OAAQ6O,EAAKC,GAEjClP,EAAIQ,EAAKyO,GAAK7O,QAGhB,KAEP,CACLqQ,UAAWxB,EACXzJ,KAAM5F,EAAeqP,GACrB1L,KAAMA,EACNqD,KAAO4J,EAAW,SAAW,SAC7BE,QAAWF,EAA+B,KAApB,kBACtBG,cAAiBH,EAA+B,KAApB,kBAC5BD,UAAWA,EACXK,gBAAiBjB,EACjBkB,MAAQlB,IAAUa,EAAW,OAAS,YAI1C,OACE,yBAAKhM,UAAU,YAAYe,GAAG,aAC5B,kBAAC,KAAD,CACEuL,YAAU,EACVnI,OAAK,EACLoI,WAAS,EACTL,QAAQ,sBACRC,cAAc,cACdK,UAAW,EACXC,SAAWrB,EAAc,OAAS,QAClCrQ,KAAOA,EACP2R,QAAUZ,MC4EHa,GAjHA,SAAC,GAAwC,IAAtC5R,EAAqC,EAArCA,KAAM6R,EAA+B,EAA/BA,YAAa5Q,EAAkB,EAAlBA,KAC7B6Q,GAD+C,EAAZ/K,MACrBgL,YAAQ,CAC1BC,KAAM,cAEFrD,EZsIa,SAAC3O,GAAD,OACnBI,QAAQJ,GACLiS,QAAQ7R,QACRoC,OACA0P,KAAK,OAAQ,WAAY,QAAS,QAAS,UAC3ClO,OACAT,UACArD,QY7IeiS,CAAanS,GACzBoS,EAAa,CACjBtD,GAAIH,EAAU,GACd0D,GAAI1D,EAAU,GACd7M,OAAQ,eAR2C,EAYjCwQ,mBAASF,EAAWtD,IAZa,mBAY9CA,EAZ8C,KAY1CyD,EAZ0C,OAajCD,mBAASF,EAAWC,IAba,mBAa9CA,EAb8C,KAa1CG,EAb0C,OAczBF,mBAASF,EAAWtQ,QAdK,mBAc9CA,EAd8C,KActC2Q,EAdsC,OAe3BH,oBAAS,GAfkB,mBAe9ClC,EAf8C,KAevCsC,EAfuC,KAkB/CC,EAAe,SAAC3S,EAAMoO,GAAO,IAAD,EACF0D,EAAYc,YAAlCC,EADwB,EACxBA,IAAKC,EADmB,EACnBA,IAAKC,EADc,EACdA,QAClBR,EAAMM,GACNL,EAAMM,GACNL,EAAUM,IAOZ,OACE,yBAAK9N,UAAU,UACb,kBAAC2B,EAAA,EAAD,CAAK3B,UAAU,mBACb,kBAAC4B,EAAA,EAAD,CAAKmM,GAAK,GACR,kBAAC,IAAiBlB,EAChB,kBAAC,GAAD,KACE,kBAAC,GAAD,CACE7D,SAAW6D,EAAYmB,aAAaN,GACpChE,UAAYA,EACZJ,QAAUjM,EAAWtC,OAO3B,kBAAC,EAAD,CACEqH,KAAK,SACL/G,IAAME,EAAesO,GACrBoE,SAAWpR,EACXqR,OAAgB,cAAPrE,EAAqB,WAAa,QAC3C7G,QAAU,2CAEV,kBAAC,GAAD,CACEjI,KAAO6B,EAAa7B,EAAM8B,EAAQgN,GAClC9C,QAAU8C,MAKhB,kBAACjI,EAAA,EAAD,CAAKmM,GAAK,EAAI/N,UAAU,UACtB,kBAAC,IAAiB6M,EAChB,kBAAC,GAAD,KACE,kBAAC,GAAD,CACE7D,SAAW6D,EAAYmB,aAAaN,GACpChE,UAAYA,EACZG,GAAKA,EACLuD,GAAKA,MAMX,kBAAC,EAAD,CACEvJ,KAAO,CAACgG,EAAIuD,GAAInQ,KAAI,SAACvB,GAAD,OAAOH,EAAeG,MAC1C0G,KAAK,SACLY,QAAU,2CAEV,kBAAC,GAAD,CACEjI,KAAO4B,EAAiB5B,GACxBgJ,GAAK,CAAC8F,EAAIuD,QAMlB,6BAEA,kBAACzL,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,8DAEA,kBAAC,EAAD,CACEqM,SAAWpR,EACXuF,KAAK,SACL/G,IAAM,qBAAuBE,EAAesO,GAC5CqE,OAAgB,cAAPrE,EAAqB,WAAa,QAC3C7G,QAAiB,cAAP6G,EAAqB,GAAK,kBACpC9G,OAAK,EACLF,cAAgB,kBAAC,GAAD,CAAeqH,QAAUiB,EAAQnC,SAzEpC,SAACG,GACtBsE,EAAStE,EAAEgF,OAAOjE,aA0EV,kBAAC,GAAD,CAAWL,GAAKA,EACd7N,KAAOA,EAAK6N,GACZ9O,KAAO6B,EAAagQ,EAAY/C,GAAKhN,EAAQgN,GAC7CsB,MAAQA,EACRpM,MAAO,SClFNqP,I,OAhCC,SAACtO,GACf,IAAMgM,EAAOhM,EAAMgM,MAAQ,CAAC,YAAa,SACnCY,EAAU,CAAC,CACfT,UAAW,YACXjL,KAAM8K,EAAK,GACX/M,MAAM,EACNsP,YAAa,iBAAO,CAAEpD,MAAO,SAC5B,CACDgB,UAAW,QACXjL,KAAM8K,EAAK,GACX/M,MAAM,EACNsN,MAAO,QAEPH,QAAS,aACTmC,YAAa,iBAAO,CAAEpD,MAAO,UAG/B,OACE,yBAAKjL,UAAU,oBAAoBe,GAAG,WACpC,kBAAC,KAAD,CACEuL,YAAU,EACVJ,QAAQ,sBACRC,cAAc,cACdK,UAAW,EACXC,SAAW,YACX1R,KAAO+E,EAAM/E,KACb2R,QAAUA,OCiGH4B,GArHA,SAAC,GAA2B,IAAzBvT,EAAwB,EAAxBA,KAAMiB,EAAkB,EAAlBA,KAChB6Q,GADkC,EAAZ/K,MACRgL,YAAQ,CAC1BC,KAAM,cAEFxD,EAASL,OAAOrL,KAAK7B,GACrBsN,EAAUJ,OAAOrL,KAAK9C,GAEtBoS,EAAa,CACjBtQ,OAAQyM,EAAQ,GAChBiF,MAAOhF,EAAO,GACd9M,UAAWT,EAAKuN,EAAO,IAAI,GAAG9M,UAC9B+R,MAAO,SAX+B,EAeZnB,mBAASF,EAAWtQ,QAfR,mBAejCA,EAfiC,KAezB2Q,EAfyB,OAgBdH,mBAASF,EAAWoB,OAhBN,mBAgBjCA,EAhBiC,KAgB1BE,EAhB0B,OAiBNpB,mBAASF,EAAW1Q,WAjBd,mBAiBjCA,EAjBiC,KAiBtBiS,EAjBsB,OAkBdrB,mBAASF,EAAWqB,OAlBN,mBAkBjCA,EAlBiC,KAkB1BG,EAlB0B,KAqBlC3F,EAAW,SAACjO,EAAMoO,GAAO,IAAD,EACoB0D,EAAYc,YAApDG,EADoB,EACpBA,QAASc,EADW,EACXA,OAAQC,EADG,EACHA,WAAYC,EADT,EACSA,OAG/BC,EAAK/S,EAAK4S,GAAQ,GAAGnS,UACrBuS,EAAK7B,EAAWqB,MACA,WAAlBrF,EAAEgF,OAAOjR,MAAuC,YAAlBiM,EAAEgF,OAAOjR,MACzC2P,EAAYoC,SAAS,aAAcF,GACnClC,EAAYoC,SAAS,SAAUD,GAC/BN,EAAaK,GACbJ,EAASK,KAETN,EAAaG,GACbF,EAASG,IAEXtB,EAAUM,GACVW,EAASG,IAOLM,EAAW9R,EAASpB,EAAKuS,GAAQ9R,IAAc,GAC/C4B,EdiIc,SAACtD,GAAD,OACpBI,QAAQJ,GACLoU,QAAQ,YACRtQ,WAAU,SAACnD,GAAD,OAAOP,MAAMO,EAAG,YAC1BT,QcrIYmU,CAAcrU,EAAK8B,GAAQ0R,IACpCc,EAAcxT,EAAWd,EAAK8B,GAAQ0R,GAAQ,QAASC,EAAOxS,EAAKuS,IAEzE,OACE,yBAAKvO,UAAU,UACb,kBAAC2B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKmM,GAAK,GACR,kBAAC,IAAiBlB,EAChB,kBAAC,GAAD,KACE,kBAAC,GAAD,CACE7D,SAAW6D,EAAYmB,aAAahF,GACpCO,OAASA,EACTD,QAAUA,EACVtN,KAAOA,EAAKuS,QAKpB,kBAAC3M,EAAA,EAAD,CAAKmM,GAAK,KAKZ,kBAACpM,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKmM,GAAK,GAER,kBAAC,EAAD,CACE3L,KAAK,SACL/G,IAAM6T,EAASxS,QACfwR,OAAS,QACTD,SAAWpR,EACXmG,QAAUkM,EAASI,OAEnB,kBAAC,GAAD,CACEvU,KAAOA,EAAK8B,GAAQ0R,GACpBxH,QAAUtK,EACVyH,OAAS1I,EAAI,QACbiF,QA1CI,SAAC/E,GACfiT,EAASjT,EAAE8S,YA8CP,kBAAC5M,EAAA,EAAD,CAAKmM,GAAK,EAAI/N,UAAU,UACtB,kBAAC,IAAiB6M,EAChB,kBAAC,GAAD,KACE,kBAAC,GAAD,CACE7D,SAAW6D,EAAYmB,aAAahF,GACpC3K,OAASA,EACTrC,KAAOA,EAAKuS,OAKlB,kBAAC,EAAD,CACEnM,KAAK,QACL/G,IAAMD,EAAemT,GACrBN,SAAWpR,EACXqR,OAASM,EACTxL,QAAUkM,EAASI,MACnBvM,OAAK,GAEL,kBAAC,GAAD,CACEhI,KAAOsU,EACPvD,KAAO,CAAC,kBAAmB,gB,0FChHpByD,G,8MACnBC,SAAW,SAACC,GACV,IAAMvS,EAAOuS,EAAQC,WAAWxS,KAEhC,MAAO,CACLyS,UAFgB,EAAK7P,MAAM/E,KAAKmC,SAAwCvB,GAA/B,EAAKmE,MAAM/E,KAAKmC,GAAMjC,MAAqB,EAAK6E,MAAMvB,WAAW,EAAKuB,MAAM/E,KAAKmC,GAAMjC,OAAS,OAGzIqJ,MAAO,OACPsL,OAAQ,GACR9J,QAAS,EACTpB,YAAa,M,EAIjBmL,cAAgB,SAACJ,EAASK,GACxB,IAAM5S,EAAOuS,EAAQC,WAAWxS,KAChC4S,EACGC,GAAG,YAAa,EAAKC,eACrBD,GAAG,WAAY,EAAKE,iBACvBH,EAAMI,aAAY,kBAChB5Q,EAAYpC,EAAM,EAAK4C,MAAM/E,KAAKmC,GAAQ,EAAK4C,MAAM/E,KAAKmC,GAAMjC,MAAQ,KAAM,EAAK6E,MAAM9D,KAAKJ,OAAQ,EAAKkE,MAAMP,OACjH,CAAE4Q,UAAW,MAAOC,OAAQ,CAAC,GAAI,IAAKpQ,UAAW,gB,EAIrDgQ,cAAgB,YAAgB,EAAb7B,OACVkC,SAAS,CACd3L,YAAa,IACbkL,OAAQ,K,EAIZK,gBAAkB,YAAgB,EAAb9B,OACZkC,SAAS,CACd3L,YAAa,IACbkL,OAAQ,M,0EAKV,IfgPiBU,EehPXC,Ef2OQ,SAACC,GACjB,IAAMC,EAAIC,IAAcF,GACxB,MAAO,CAAC,CAAEC,EAAE,GAAIA,EAAE,IAAM,CAAEA,EAAE,GAAIA,EAAE,Ke7OnBE,CAAUC,KAAK9Q,MAAM+Q,OAC5BL,Gf+OWF,Ee/OOM,KAAK9Q,MAAM+Q,MfgPrCH,IAAiBJ,EAAKA,EAAIQ,QAAQC,Oe9OhC,OACE,yBAAK/Q,UAAU,oBACb,kBAACgR,GAAA,EAAD,CACEC,OAASV,EACTW,SAAW,GACXC,UAAY,GACZC,iBAAkB,GAElB,kBAACC,GAAA,EAAD,CACEC,IAAI,iFACJC,YAAY,yNACZC,WAAW,OACXC,QAAU,EACVC,QAAU,GACVC,IAAI,MACJ7L,QAAU,KAEZ,kBAAC8L,GAAA,EAAD,CACE5W,IAAM,SAACyU,GAAD,OAAaA,EAAQC,WAAWxS,MACtCnC,KAAOyV,EACP9M,MAAQkN,KAAKpB,SACbqC,aAAc,EACdC,cAAgBlB,KAAKf,cACrBpP,QAAUmQ,KAAK9Q,MAAMW,WAIzB,kBAAC,EAAD,CACEkD,MAAQiN,KAAK9Q,MAAMvB,WACnB3C,OAASgV,KAAK9Q,MAAM9D,KAAKJ,OACzBwG,KAAK,YACLsB,MAAQ,CACN6B,MAAO,EACPC,OAAQ,U,GA3EoB/F,IAAMsS,WC+F/BC,GAzFD,SAAC,GAAkC,IAAhCjX,EAA+B,EAA/BA,KAAMiB,EAAyB,EAAzBA,KAAM6U,EAAmB,EAAnBA,MACrBhE,GADwC,EAAZ/K,MACdgL,YAAQ,CAC1BC,KAAM,cAEFxD,EAASL,OAAOrL,KAAK7B,GACrBmR,EAAa,CACjBoB,MAAOhF,EAAO,GACd9M,UAAWT,EAAKuN,EAAO,IAAI,GAAG9M,WAG1BwV,EAAQ/I,OAAOrL,KAAKd,EAAWhC,EAAKoS,EAAWoB,OAAQpB,EAAW1Q,YAV1B,EAYpB4Q,mBAASF,EAAWoB,OAZA,mBAYvCA,EAZuC,KAYhCE,EAZgC,OAaZpB,mBAASF,EAAW1Q,WAbR,mBAavCA,EAbuC,KAa5BiS,EAb4B,OActBrB,mBAAS4E,EAAM,IAdO,mBAcvClB,EAduC,KAcjCmB,EAdiC,KAgCxChD,EAAW9R,EAASpB,EAAKuS,GAAQ9R,IAAc,GAC/C0V,EAAUpV,EAAWhC,EAAKwT,GAAQ9R,GAClC4S,EAAcxT,EAAWd,EAAKwT,GAAQ,OAAQwC,EAAM/U,EAAKuS,IAE/D,OACE,yBAAKvO,UAAU,SACb,kBAAC2B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKmM,GAAK,GACR,kBAAC,IAAiBlB,EAChB,kBAAC,GAAD,KACE,kBAAC,GAAD,CACE7D,SAAW6D,EAAYmB,cA3BpB,SAACjT,EAAMoO,GAAO,IAAD,EACG0D,EAAYc,YAAnCiB,EADoB,EACpBA,OAAQC,EADY,EACZA,WACVE,EAAK/S,EAAK4S,GAAQ,GAAGnS,UACL,WAAlB0M,EAAEgF,OAAOjR,MACX2P,EAAYoC,SAAS,aAAcF,GACnCL,EAAaK,IAEbL,EAAaG,GAEfJ,EAASG,MAmBGrF,OAASA,EACTa,WAAapO,EAAKuS,SAO5B,kBAAC5M,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKmM,GAAK,GACR,kBAAC,EAAD,CACE3L,KAAK,QACL/G,IAAM6T,EAASxS,QACfwR,OAAS,OACTlL,QAAUkM,EAASI,MACnBvM,OAAK,GAEL,kBAAC,GAAD,CACEhI,KAAOoX,EACPtB,MAAQA,EACRtS,WAAaG,EAAeyT,EAASlN,KAAS,GAC9CjJ,KAAO,CAAEJ,OAAQ,OACjB6E,QAtCW,SAAC,GAAe,IAAbqP,EAAY,EAAZA,MACxBoC,EAAQpC,EAAML,QAAQC,WAAWxS,WAyC7B,kBAAC0E,EAAA,EAAD,CAAKmM,GAAK,EAAI/N,UAAU,UACtB,kBAAC,EAAD,CACEoC,KAAK,QACL/G,IAAMD,EAAemT,GACrBN,SAAW8C,EACX/N,QAAUkM,EAASI,MACnBvM,OAAK,GAEL,kBAAC,GAAD,CACEhI,KAAOsU,EACPvD,KAAO,CAAE,kBAAmB,gBCM3BsG,GAtFD,SAAC,GAAkC,IAAhCrX,EAA+B,EAA/BA,KAAMiB,EAAyB,EAAzBA,KAAM6U,EAAmB,EAAnBA,MACrBhE,GADwC,EAAZ/K,MACdgL,YAAQ,CAC1BC,KAAM,cAEFzC,EAAOpB,OAAOrL,KAAK7B,GACnBmR,EAAa,CACjB1Q,UAAWT,EAAKsO,EAAK,IAAI,GAAG7N,UAC5B4V,IAAK/H,EAAK,IAGN2H,EAAQ/I,OAAOrL,KAAKd,EAAWhC,EAAKoS,EAAWkF,KAAMlF,EAAW1Q,YAVxB,EAWxB4Q,mBAASF,EAAWkF,KAXI,mBAWvCA,EAXuC,KAWlCC,EAXkC,OAYZjF,mBAASF,EAAW1Q,WAZR,mBAYvCA,EAZuC,KAY5BiS,EAZ4B,OAatBrB,mBAAS4E,EAAM,IAbO,mBAavClB,EAbuC,KAajCmB,EAbiC,KA0BxCC,EAAUpV,EAAWhC,EAAKsX,GAAM5V,GAChC4S,EjBsCc,SAACtU,EAAMe,EAAUC,EAAWC,EAAMS,GAA2B,wDAAC,IAC5E8V,EAAWpX,YAAYJ,GAAM,SAACW,GAAD,OAAOZ,EAAaY,EAAGI,EAAUC,GAAW,MAEzEyW,EAAarX,QAAQa,GACxB6C,WAAU,SAACtC,GAAD,OAAOzB,EAAayB,EAAG,YAAaE,GAAW,MACzDoC,WAAU,SAACtC,EAAG8V,GAAS,IAAD,EACfI,EAAIlW,EAAEE,UACNiW,EAAUH,EAASF,KAAT,mBAAoBvW,EAAWC,GAA/B,cAA2C0W,OAAI9W,GAA/C,GACVC,EAASW,EAAEX,QAAU,KAG3B,MAAO,CACLa,UAAW4V,EACXpX,MAJUO,EAAII,EAAJJ,CAAYkX,EAAQD,QAOjCE,UACA1X,QACH,OAAOuX,EiBxDaI,CAAc7X,EAAM,OAAQgW,EAAM/U,EAAMS,EAAW,MACjEyS,EAAW9R,EAASpB,EAAKqW,GAAM5V,IAAc,GAEnD,OACE,yBAAKuD,UAAU,SACb,kBAAC2B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKmM,GAAK,GACR,kBAAC,IAAiBlB,EAChB,kBAAC,GAAD,KACE,kBAAC,GAAD,CACE7D,SAAW6D,EAAYmB,cArBpB,SAACjT,EAAMoO,GAAO,IAAD,EACC0D,EAAYc,YAAjCkF,EADoB,EACpBA,KAAMhE,EADc,EACdA,WACdH,EAAaG,GACbyD,EAAOO,MAmBKvI,KAAOA,EACPF,WAAapO,EAAKqW,SAO5B,kBAAC1Q,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKmM,GAAK,GACR,kBAAC,EAAD,CACE3L,KAAK,SACL/G,IAAM6T,EAASxS,QAAU,uBACzBwR,OAAS,OACTD,SAAWoE,EAAI9Q,cACfyB,QAAU,4BACVD,OAAK,GAEL,kBAAC,GAAD,CACEhI,KAAOoX,EACPtB,MAAQA,EACRtS,WAAaG,EAAeyT,EAASlN,KAAS,GAC9CjJ,KAAO,CAAEJ,OAAQ,MACjB6E,QAvCW,SAAC,GAAe,IAAbqP,EAAY,EAAZA,MACxBoC,EAAQpC,EAAML,QAAQC,WAAWxS,WA0C7B,kBAAC0E,EAAA,EAAD,CAAKmM,GAAK,EAAI/N,UAAU,UACtB,kBAAC,EAAD,CACEoC,KAAK,SACL/G,IAAM6T,EAASxS,QAAU,cACzBwR,OAAS,MACTD,SAAW8C,EACX/N,QAAU,4BACVD,OAAK,GAEL,kBAAC,GAAD,CACEhI,KAAOsU,EACPrT,KAAOA,EAAKqW,GACZvG,KAAO,CAAC,YAAa,eCApBgH,GA7EE,SAAC,GAAkC,IAAhC/X,EAA+B,EAA/BA,KAAMiB,EAAyB,EAAzBA,KAAM6U,EAAmB,EAAnBA,MACxBhE,GAD2C,EAAZ/K,MACjBgL,YAAQ,CAC1BC,KAAM,cAEFI,EAAa,CACjB1Q,UAAWT,EAAK,GAAGS,WAEfwV,EAAQ/I,OAAOrL,KAAKd,EAAWhC,EAAMoS,EAAW1Q,YAPL,EAQf4Q,mBAASF,EAAW1Q,WARL,mBAQ1CA,EAR0C,KAQ/BiS,EAR+B,OASzBrB,mBAAS4E,EAAM,IATU,mBAS1ClB,EAT0C,KASpCmB,EAToC,KAoB3ChD,EAAW9R,EAASpB,EAAMS,IAAc,GACxC0V,EAAUpV,EAAWhC,EAAM0B,GAC3B4S,EAAcxT,EAAWd,EAAM,OAAQgW,EAAM/U,GAEnD,OACE,yBAAKgE,UAAU,YACb,kBAAC2B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKmM,GAAK,GACR,kBAAC,IAAiBlB,EAChB,kBAAC,GAAD,KACE,kBAAC,GAAD,CACE7D,SAAW6D,EAAYmB,cApBpB,SAACjT,EAAMoO,GAAO,IACrB0F,EAAehC,EAAYc,YAA3BkB,WACRH,EAAaG,MAmBDzE,WAAapO,QAOvB,kBAAC2F,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKmM,GAAK,GACR,kBAAC,EAAD,CACE3L,KAAK,QACL/G,IAAM6T,EAASxS,QACfwR,OAAS,OACTlL,QAAUkM,EAASI,MACnBvM,OAAK,GAEL,kBAAC,GAAD,CACEhI,KAAOoX,EACPtB,MAAQA,EACRtS,WAAaG,EAAeyT,EAASlN,KAAS,GAC9CjJ,KAAI,eAAQkT,GACZ3P,IAAM,IACNkB,QAtCW,SAAC,GAAe,IAAbqP,EAAY,EAAZA,MACxBoC,EAAQpC,EAAML,QAAQC,WAAWxS,WAyC7B,kBAAC0E,EAAA,EAAD,CAAKmM,GAAK,EAAI/N,UAAU,UACtB,kBAAC,EAAD,CACEoC,KAAK,QACL/G,IAAM,+BACN4S,SAAW8C,EACX/N,QAAUkM,EAASI,MACnBvM,OAAK,GAEL,kBAAC,GAAD,CACEhI,KAAOsU,EACPvD,KAAO,CAAE,YAAa,gB,8BC1DrBnJ,I,OAjBA,SAAC7C,GAAD,OACb,yBAAKE,UAAU,UACb,kBAAC+S,GAAA,EAAD,CAAQC,OAAO,KAAK9S,QAAQ,QAAS+S,MAAM,OACzC,kBAACF,GAAA,EAAOG,OAAR,CAAe3S,gBAAc,qBAC7B,kBAACwS,GAAA,EAAOrS,SAAR,CAAiBK,GAAG,oBAClB,kBAACoS,GAAA,EAAD,CAAKjT,QAAQ,SACTJ,EAAMsT,KAAKnW,KAAI,SAACoW,GAAD,OACf,kBAAC,iBAAD,CAAeC,GAAK,IAAMD,EAAEnR,SAAWlH,IAAG,eAAYqY,EAAEnR,WACtD,kBAACiR,GAAA,EAAII,KAAL,KAAYF,EAAEG,iB,uCCOtBJ,GAAO,CACXK,OAAQ,uBACRC,MAAO,uBACPC,OAAQ,eACRC,MAAO,sBACPC,SAAU,mBA8EGC,GAjEH,WACV,IpByGqB/Y,EAsDHgZ,EAAK/Y,EAAKC,EoB/JtBgH,EAXY,WAClB,IAAMC,EAAW8R,cAAcC,SAASrN,UAAU,GAClD,MAAO,CACL1E,SAAUA,EACVd,KAAO8S,GAAUhS,GAAYgS,GAAUhS,GAAUD,SAAW,KAC5DT,GAAI,uCACJ9E,QAAS0W,GAAKlR,IAKCiS,GADD,EAEgB9G,oBAAS,GAFzB,mBAET1N,EAFS,KAECyU,EAFD,KAQhB,OACE,yBAAKpU,UAAU,OACb,kBAAC,GAAD,CAAQoT,MpBsJMW,EoBtJYX,GpBsJPpY,EoBtJa,WpBsJRC,EoBtJoB,QpBuJzCE,QAAQ4Y,GACZlV,WAAU,SAACwV,EAAG5B,GAAJ,gCAAczX,EAAMyX,GAApB,cAAwBxX,EAAQoZ,GAAhC,KACVvV,SACA7D,WoBxJC,kBAACuE,EAAY8U,SAAb,CAAsBrZ,MAAQ,CAAE0E,WAAUC,YAT1B,WAClBwU,GAAazU,MAUT,kBAAC,EAAD,CACEmC,MAAQoS,GAAUjS,EAASC,UAAYgS,GAAUjS,EAASC,UAAUJ,MAAQ,KAC5EjB,KAAOqT,GAAS,MAAUpS,MAAMd,KAChCiB,SAAWA,GAEX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOsS,OAAK,EAACC,KAAK,IAAIC,OAAS,kBAAM,kBAAC,IAAD,CAAUnB,GAAG,eAClD,kBAAC,IAAD,CAAOiB,OAAK,EAACC,KAAK,WAChB,kBAAC,GAAD,CACEzZ,KAAOA,GAAI,eACXiB,KAAOA,GAAI,OAGf,kBAAC,IAAD,CAAOuY,OAAK,EAACC,KAAK,UAChB,kBAAC,GAAD,CACEzZ,KAAOA,GAAI,mBACXiB,MpB4EOjB,EoB5Ec2C,EAAe1B,GAAI,IAAS,UpB6E/Db,QAAQJ,GACL8D,WAAU,SAACwV,EAAG5B,GAAJ,OAAUtX,SAASkZ,GAAG,SAAC3Y,GAAD,OAAOA,EAAEgZ,aACzCC,OAAOxZ,WACPF,SoB/EW4V,MAAQ+D,MAGZ,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,WAChB,kBAAC,GAAD,CACEzZ,KAAOA,GAAI,kBACX6R,YAAc7R,GAAI,iBAClBiB,KAAOA,GAAI,SAGf,kBAAC,IAAD,CAAOuY,OAAK,EAACC,KAAK,UAChB,kBAAC,GAAD,CACEzZ,KAAOA,GAAI,WACXiB,KAAOA,GAAI,MACX6U,MAAQ+D,MAGZ,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,aAChB,kBAAC,GAAD,CACEzZ,KAAOA,GAAI,SACXiB,KAAOA,GAAI,SACX6U,MAAQ+D,WC/EJC,QACW,cAA7BC,OAAO5S,SAAS6S,UAEe,UAA7BD,OAAO5S,SAAS6S,UAEhBD,OAAO5S,SAAS6S,SAASrO,MACvB,2D,4BCFNsO,IAASP,OACP,kBAAC,gBAAD,CAAQQ,SAAWC,kBACjB,kBAAC,GAAD,OAEFC,SAASC,eAAe,SD6GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.33b75299.chunk.js","sourcesContent":["import * as _ from 'lodash';\nimport { scaleOrdinal, scaleThreshold } from 'd3-scale';\nimport wordwrap from 'wordwrapjs';\nimport { format } from 'd3-format';\nimport * as topojson from 'topojson-client';\nimport { ckmeans } from 'simple-statistics';\n\n/////////////// general utilities\nconst _filterByKey = (data, key, value, first = true) => (\n  first ? _.find(data, { [key]: value }) : _.filter(data, { [key]: value })\n);\n\n/////////////// strings\nconst cleanHdrLabels = (lbl, first = true) => {\n  const hdr = _.replace(lbl, /_/g, ' ');\n  return first ? _.upperFirst(hdr) : _.startCase(hdr);\n};\n\nconst cleanIdxLabels = (lbl) => (\n  cleanHdrLabels(lbl, false) + ' Index'\n);\n\nconst cleanKeys = (obj, first = true) => (\n  _.chain(obj)\n    .keys()\n    .map((d) => cleanHdrLabels(d, first))\n    .value()\n);\n\nconst titleLabel = (lbl, n = 2) => (\n  _.upperFirst(lbl.substring(n))\n);\n\nconst wrapTspan = (txt) => (\n  wordwrap.lines(txt, { width: 15 })\n);\n\nconst compileHeader = (type) => {\n  const headers = {\n    versus: '<%= lbls[0] %> vs. <%= lbls[1] %>',\n    colon: '<%= lbl %>: <%= dataBy %>, <%= grouping %>',\n    comma: '<%= lbl %>, <%= grouping %>',\n    lblBy: '<%= lbl %> by <%= dataBy %>',\n    lblBy2: '<%= lbl %> by <%= dataBy %>, <%= grouping %>'\n  };\n  return _.template(headers[type]);\n};\n\nconst fmt = (fmtStr) => (\n  (d) => (d === null || d === undefined ? 'N/A' : format(fmtStr)(d))\n);\n\n/////////////// data munging\n\nconst getProfile = (data, filterBy, filterVal, meta, omit = null, variable = 'indicator', compareCt = false) => {\n  let profData;\n  if (compareCt) {\n    profData = _.filter(data, (d) => d[filterBy] === filterVal || d.level === 'state');\n  } else {\n    profData = _filterByKey(data, filterBy, filterVal, true);\n  }\n  if (profData.length === 0) {\n    return [];\n  } else {\n    const wide = _.map(meta, (m) => {\n    const format = m.format || '0.0%';\n    const val = fmt(format)(profData[m[variable]]);\n    return {\n      indicator: m.display,\n      value: val\n    };\n  });\n  return wide;\n  }\n  // const profData = _filterByKey(data, filterBy, filterVal, true);\n\n};\n\nconst getGrpProfile = (data, filterBy, filterVal, meta, indicator, omit = null) => {\n  const filtered = _.mapValues(data, (d) => _filterByKey(d, filterBy, filterVal, true));\n\n  const nestedProf = _.chain(meta)\n    .mapValues((m) => _filterByKey(m, 'indicator', indicator, true))\n    .mapValues((m, age) => {\n      const k = m.indicator;\n      const ageData = filtered[age] || { [filterBy]: filterVal, [k]: undefined };\n      const format = m.format || ',d';\n      const val = fmt(format)(ageData[k]);\n\n      return {\n        indicator: age,\n        value: val\n      };\n    })\n    .toArray()\n    .value();\n  return nestedProf;\n};\n\nconst filterForScatter = (data) => (\n  _filterByKey(data, 'category', 'Total', false)\n);\n\nconst filterForBar = (data, region, variable) => {\n  let out;\n  if (variable === 'community') {\n    if (region === 'Connecticut') {\n      out = _.filter(data, (d) => _.includes(['1_state', '2_region'], d.level));\n    } else {\n      out =  _.filter(data, (d) => _.includes([region, 'Connecticut'], d.region));\n    }\n    out = _.filter(out, { 'category': 'Total' });\n  } else {\n    out = _.filter(data, { 'name': region });\n  }\n  return out;\n};\n\nconst fillMissing = (data, variable) => (\n  _.map(data, (d) => {\n    if (_.keys(d).indexOf(variable) === -1) {\n      d[variable] = null;\n    }\n    return d;\n  })\n);\n\nconst getMapData = (data, indicator) => {\n  let vals;\n  if (data[0].level) {\n    vals = _filterByKey(data, 'level', 'town', false);\n  } else {\n    vals = data;\n  }\n  return (\n    _.chain(vals)\n      .map((d) => ({\n        name: d.name,\n        value: d[indicator]\n      }))\n      .keyBy('name')\n      .value()\n  );\n}\n\nconst filterTownLvl = (data) => (\n  _.chain(data)\n    .mapValues((v, k) => _.filter(v, (d) => d.bytown))\n    .omitBy(_.isEmpty)\n    .value()\n);\n\n/////////////// metadata\nconst getVariables = (data) => (\n  _.chain(data)\n    .flatMap(_.keys)\n    .uniq()\n    .pull('name', 'category', 'group', 'level', 'region')\n    .sort()\n    .reverse()\n    .value()\n);\n\nconst getSubVariables = (variables, v1) => (\n  _.without(variables, v1)\n);\n\nconst getComparables = (variables) => (\n  _.drop(variables, 1).concat(_.take(variables, 1))\n);\n\nconst getQMeta = (meta, indicator) => (\n  _filterByKey(meta, 'indicator', indicator, true)\n);\n\nconst getRegions = (data) => (\n  _.chain(data)\n    .filter((d) => _.includes(['1_state', '2_region'], d.level))\n    .map('name')\n    .uniq()\n    // .filter((d) => d.search(/(Inner|Outer) Ring/) === -1)\n    .filter((d) => !RegExp('(Inner|Outer) Ring').test(d))\n    .value()\n);\n\nconst getNestedGrps = (data) => (\n  _.chain(data)\n    .groupBy('category')\n    .mapValues((d) => _.map(d, 'group'))\n    .value()\n);\n\nconst tblColumns = (row, omit) => (\n  _.chain(row)\n    .keys()\n    .difference(omit)\n    .value()\n);\n\nconst objToArray = (obj, key, value) => {\n  return _.chain(obj)\n    .mapValues((v, k) => ({ [key]: k, [value]: v }))\n    .values()\n    .value();\n};\n\nconst filterByString = (meta, string) => {\n  const matchKeys = _.chain(meta)\n    .keys()\n    .map((d) => d.indexOf(string) >= 0 ? d : false)\n    .compact()\n    .value();\n  return _.pick(meta, matchKeys);\n};\n\n\n\n/////////////// viz\nconst createScales = (data, pals, variable, rev) => {\n  const n = _.size(pals);\n  const groups = _.chain(data)\n    .map(variable)\n    .uniq()\n    .value();\n  let pal;\n  if (rev) {\n    pal = _.takeRight(pals[n], groups.length).reverse();\n  } else {\n    pal = _.take(pals[n], groups.length);\n  }\n  // let pal = rev ? _.takeRight(pals[n], groups.length) : _.take(pals[n], groups.length);\n  const color = scaleOrdinal(groups, pal);\n  const rad = scaleOrdinal(groups, [8, 7, 5, 3, 3, 3]);\n  return { colorscale: color, sizescale: rad };\n};\n\nconst getMaxes = (data) => {\n  // const numberCols = _.pickBy(data[0], _.isNumber);\n  const numberCols = _.chain(data[0])\n    .pickBy(_.isNumber)\n    .keys()\n    .value();\n  return _.chain(numberCols)\n    .map((c) => ({\n      q: c,\n      max: _.chain(data).map(c).max().value()\n    }))\n    .keyBy('q')\n    .mapValues('max')\n    .value();\n};\n\nconst makeChoroScale = (data, scheme, nBrks) => {\n  const vals = _.chain(data)\n    .mapValues('value')\n    .values()\n    .compact()\n    .sort()\n    .value();\n  if (!vals.length) {\n    return scaleThreshold().domain([0, 1]).range(['#ccc']);\n  } else {\n    const brks = ckmeans(vals, nBrks).map((d) => d[0]).slice(1);\n\n    return scaleThreshold()\n      .domain(brks)\n      .range(scheme[nBrks]);\n  }\n};\n\nconst makeTooltip = (name, value, format, min = null) => {\n  if (min) {\n    const display = value === 0 ? '<' + fmt(format)(min) : fmt(format)(value);\n    return `${ name }: ${ display }`;\n  } else {\n    return `${ name }: ${ fmt(format)(value) }`;\n  }\n  // `${ name }: ${ fmt(format)(value) }`\n};\n\n/////////////////// geography\nconst getBounds = (geo) => {\n  const b = topojson.bbox(geo);\n  return [[ b[1], b[0] ], [ b[3], b[2] ]];\n};\n\nconst makeGeoJson = (shp) => (\n  topojson.feature(shp, shp.objects.town)\n);\n\n\nexport{\n\tcleanIdxLabels,\n\tcompileHeader,\n\tcreateScales,\n\tfilterForScatter,\n\tgetRegions,\n\tgetVariables,\n  cleanHdrLabels,\n  cleanKeys,\n  fillMissing,\n  filterByString,\n  filterForBar,\n  filterTownLvl,\n  fmt,\n  getBounds,\n  getComparables,\n  getGrpProfile,\n  getMapData,\n  getMaxes,\n  getNestedGrps,\n  getProfile,\n  getQMeta,\n  getSubVariables,\n  makeChoroScale,\n  makeGeoJson,\n  makeTooltip,\n  objToArray,\n  tblColumns,\n  titleLabel,\n  wrapTspan\n};\n","import React from 'react';\n\nexport const NoteContext = React.createContext({\n  noteOpen: true,\n  handleClose: () => {  }\n});\n","import React from 'react';\nimport { Alert, Button, Collapse } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport { NoteContext } from '../utils/NoteContext.js';\n\nimport '../styles/Intro.css';\n\nconst Intro = (props) => (\n  <NoteContext.Consumer>\n    {\n      ({ noteOpen, handleClose }) => (\n        <div className='Intro'>\n          <Alert variant='warning' className='border border-color-warning'>\n            <Alert.Heading>\n              A note from DataHaven\n              <Button variant='link'\n                className='close text-uppercase'\n                data-dismiss='alert'\n                aria-label='Close note'\n                aria-controls='collapse-note'\n                aria-expanded={ noteOpen }\n                onClick={ handleClose }\n              >\n                { noteOpen ? 'hide' : 'show' }\n              </Button>\n            </Alert.Heading>\n            <Collapse in={ noteOpen }>\n              <ReactMarkdown source={ props.note } escapeHtml={ false } id='collapse-note' />\n            </Collapse>\n          </Alert>\n\n          <Alert variant='light' className='border border-color-dark'>\n            <ReactMarkdown source={ props.text } />\n            <p>For more information, see the other pages in the menu above, or visit DataHaven's <a href=\"http://www.ctdatahaven.org/communities\">Communities</a> page or <a href=\"http://www.ctdatahaven.org\">main website</a>.</p>\n          </Alert>\n        </div>\n      )}\n  </NoteContext.Consumer>\n);\n\nexport default Intro;\n","import React from 'react';\nimport { Row, Col, Container, Alert } from 'react-bootstrap';\nimport '../styles/Footer.css';\n\nconst Footer = (props) => {\n  let footerTxt;\n  if (props.urls === undefined) {\n    footerTxt = null;\n  } else {\n    const dl = `https://query.data.world/s/${ props.urls.slug }`;\n    footerTxt = (\n      <p>\n        {`Download ${ props.display.toLowerCase() } data`} <a href={ dl }>here</a>, filter and analyze data online on <a href={ props.dw }>data.world</a> (requires free sign-up), or download/clone from <a href={ props.urls.github }>GitHub</a> (advanced users).\n      </p>\n    );\n  }\n  return (\n    <div className='Footer'>\n      <Container>\n        <hr />\n        <Row>\n          <Col>\n            <Alert variant='light' className='border'>\n              <Alert.Heading >Download this data</Alert.Heading>\n              { footerTxt }\n\n              <p>For source and methodology information, see the <a href='https://ctdatahaven.org/reports'>2019 DataHaven Community Index reports.</a></p>\n            </Alert>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport Intro from './Intro';\nimport Footer from './Footer';\n\nimport '../styles/Dash.css';\n\nconst Dash = (props) => (\n  <div className='Dash'>\n    <Container>\n      <header>\n        <h1>Connecticut Wellbeing and Equity Data App</h1>\n        <h2>{ props.intro.headline }</h2>\n      </header>\n      <Intro note={ props.note } { ...props.intro } />\n\n      { props.children }\n\n      { props.download.location ? <Footer { ...props.download } /> : null }\n    </Container>\n  </div>\n);\n\nexport default Dash;\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport '../styles/Stage.css';\nimport { compileHeader } from '../utils/utils.js';\n\nconst Stage = (props) => {\n  const hdr = compileHeader(props.type)({ ...props });\n\n  return (\n    <div className='Stage'>\n      <Card>\n        <Card.Header as='h3'>\n          { hdr }\n          { props.hdrComponents || null }\n        </Card.Header>\n        <Card.Body className={ props.flush && 'p-0' }>\n          { props.children }\n        </Card.Body>\n        <Card.Footer className='text-right axis-title'>{ props.axisLbl || null }</Card.Footer>\n      </Card>\n    </div>\n  );\n};\n\nexport default Stage;\n","import React from 'react';\nimport { LegendThreshold, LegendOrdinal } from '@vx/legend';\nimport { fmt } from '../utils/utils.js';\n\nimport '../styles/Legend.css';\n\nconst legendTypes = {\n  threshold: LegendThreshold,\n  ordinal: LegendOrdinal\n};\n\nconst Legend = (props) => {\n  const LegendByType = legendTypes[props.type];\n  const format = props.labelFormat || ((label) => label ? fmt(props.format)(label) : '');\n  return (\n    <div className='Legend' style={ props.style }>\n      <LegendByType\n        labelFormat={ format }\n        scale={ props.scale }\n      />\n    </div>\n  );\n};\n\n\n\nexport default Legend;\n","import React from 'react';\n\nimport '../styles/Tooltip.css';\n\nconst Tip = (props) => {\n  const lbls = props.tipLblr ? props.vs.map(props.tipLblr) : props.vs;\n  const content = props.vs.map((d, i) => (\n    <div key={ `tip-div${ i }` }>\n      <p key={ `tip-p${ i }` }><span key={ `tip${ i }` }>{ lbls[i].length ? `${ lbls[i] }: ` : '' } </span>{ props.numFmt(props.data[d]) }</p>\n    </div>\n));\n\n  return (\n    <div className='Tooltip'>\n      <h5>{ props.data[props.hdr] }</h5>\n      { content }\n    </div>\n  );\n};\n\nexport default Tip;\n","import React from 'react';\nimport { ResponsiveXYFrame } from 'semiotic';\nimport { Vivid as palette } from 'cartocolor';\nimport * as _ from 'lodash';\n\nimport Legend from './Legend';\nimport Tip from './Tip';\nimport '../styles/Chart.css';\n\nimport { cleanIdxLabels, createScales, titleLabel } from '../utils/utils.js';\n\nconst Scatterplot = (props) => {\n  const [xAccess, yAccess] = props.vs;\n  const { colorscale, sizescale } = createScales(props.data, palette, 'level', false);\n\n  const xRange = [_.min(_.map(props.data, xAccess)), _.max(_.map(props.data, xAccess))];\n  const yRange = [_.min(_.map(props.data, yAccess)), _.max(_.map(props.data, yAccess))];\n  const pad = 0.05;\n  const margin = { top: 10, right: 10, bottom: 60, left: 80 };\n  const fmt = props.numFmt || ((d) => d);\n\n  return (\n    <div className='Chart Scatterplot'>\n      <ResponsiveXYFrame\n        points={ props.data }\n        margin={ margin }\n        size={ [600, 500] }\n        xAccessor={ xAccess }\n        yAccessor={ yAccess }\n        pointStyle={ (d) => ({\n          fill: colorscale(d.level),\n          stroke: colorscale(d.level),\n          r: sizescale(d.level),\n          opacity: 0.8\n        }) }\n        xExtent={ [xRange[0] * (1 - pad), xRange[1] * (1 + pad)] }\n        yExtent={ [yRange[0] * (1 - pad), yRange[1] * (1 + pad)] }\n        axes={[\n          { orient: 'left', label: cleanIdxLabels(yAccess), baseline: 'under', tickFormat: fmt },\n          { orient: 'bottom', label: cleanIdxLabels(xAccess), baseline: 'under', tickFormat: fmt }\n        ]}\n        responsiveWidth={ true }\n        // foregroundGraphics={ <Legend color={ colorscale } size={ sizescale } margin={ margin } /> }\n        hoverAnnotation={ [(d) => ({\n          type: 'frame-hover',\n          color: colorscale(d.level)\n        })] }\n        svgAnnotationRules={ ({ screenCoordinates, d }) => (d && d.type === 'frame-hover') ? hover(d, screenCoordinates[0], screenCoordinates[1], colorscale) : null }\n        tooltipContent={ (d) => (\n          <Tip data={ d.data } type='scatter'\n            vs={ props.vs }\n            hdr='name'\n            tipLblr={ (d) => cleanIdxLabels(d).match(/[A-Z]/g).join('') }\n            numFmt={ fmt }\n          />\n        ) }\n      />\n      <Legend\n        type='ordinal'\n        scale={ colorscale }\n        labelFormat={ (d) => titleLabel(d) }\n        style={{\n          right: '4px',\n          bottom: '45px'\n        }}\n      />\n    </div>\n  )\n};\n\n\nconst hover = (d, x, y, color) => (\n  <g key={ `${ hover }-tip` } className='hover-circle'>\n    <circle\n      cx={ x }\n      cy={ y }\n      r={ 12 }\n      fillOpacity={ 1.0 }\n      strokeOpacity={ 1.0 }\n      stroke={ color(d.level) }\n      fill={ color(d.level) }\n    ></circle>\n  </g>\n);\n\nexport default Scatterplot;\n","import React from 'react';\nimport { ResponsiveOrdinalFrame } from 'semiotic';\nimport { Vivid as palette } from 'cartocolor';\n\nimport '../styles/Chart.css';\n\nimport { createScales, fillMissing } from '../utils/utils.js';\n\nconst BarChart = (props) => {\n  fillMissing(props.data, props.rAccess);\n  const { colorscale } = createScales(props.data, palette, props.colorVar, props.colorVar === 'category');\n  const fmt = props.numFmt || ((d) => d);\n\n  const labels = props.data.map((d) => ({\n    label: fmt(d[props.rAccess]),\n    [props.oAccess]: d[props.oAccess],\n    [props.rAccess]: d[props.rAccess],\n    type: 'bar-label'\n  }));\n\n  return (\n    <div className='Chart'>\n      <ResponsiveOrdinalFrame\n        data={ props.data }\n        margin={ { top: 10, right: 10, bottom: 10, left: 120 } }\n        oAccessor={ props.oAccess }\n        rAccessor={ props.rAccess }\n        type='bar'\n        oPadding={ 8 }\n        oLabel={ true }\n        projection='horizontal'\n        style={ (d) => ({\n          fill: colorscale(d[props.colorVar]),\n          stroke: 'white',\n          strokeWidth: '1px',\n          opacity: 0.8\n        }) }\n        renderKey={ (d, i) => i }\n        annotations={ labels }\n        svgAnnotationRules={ (d) => lblRules(d, props.oAccess, props.rAccess, fmt) }\n        responsiveWidth={ true }\n        pieceHoverAnnotation={ [{\n          // type: 'desaturation-layer'\n        }, {\n          type: 'highlight',\n          style: (d) => ({\n            opacity: 1.0,\n            stroke: '#444'\n          })\n        }] }\n        customClickBehavior={ (d) => props.onClick(d) }\n      />\n    </div>\n  );\n};\n\n\nconst IdxBarChart = (props) => {\n  // const rAccess = props.v1;\n  const oAccess = props.rAccess === 'community' ? 'name': 'group';\n  const colorVar = props.rAccess === 'community' ? 'level' : 'category';\n\n  return (\n    <BarChart\n      data={ props.data }\n      oAccess={ oAccess }\n      rAccess={ props.rAccess }\n      colorVar={ colorVar }\n    />\n  );\n};\n\nconst QBarChart = (props) => {\n  return (\n    <BarChart\n      data={ props.data }\n      oAccess={ 'group' }\n      rAccess={ props.rAccess }\n      colorVar={ 'category' }\n      numFmt={ props.numFmt }\n      onClick={ props.onClick }\n    />\n  );\n};\n\n////////// labels\n\n////// check width of bar; if under some amount, positive dx and dark label\nconst lblRules = ({ screenCoordinates, d }, oAccess, rAccess, fmt) => {\n  if (d.type === 'bar-label') {\n    const missing = isNaN(screenCoordinates[0]);\n    const coords = missing ? [0, screenCoordinates[1]] : screenCoordinates;\n    const small = coords[0] < 30;\n    return (\n      <g\n        className={ `direct-label ${ small ? 'dark' : 'light' }` }\n        key={ `lbl-${ d[oAccess] }` }\n        transform={ `translate(${ coords })` }\n      >\n        <text x={ 0 } y={ 0 } dx={ small ? '1.4em' : '-0.3em' } dy={ 3 }>{ fmt(d[rAccess]) }</text>\n      </g>\n    )\n  } else {\n    return null;\n  }\n};\n\nexport { IdxBarChart, QBarChart };\n","import React from 'react';\nimport { Form, Col, Row } from 'react-bootstrap';\nimport { useFormContext } from 'react-hook-form';\nimport { cleanIdxLabels, cleanHdrLabels, getComparables } from '../utils/utils.js';\n\nimport '../styles/Controls.css';\n\n// controls:\n// region\n// topic\n// question\n// group\n// index\n// secondary\n// age group\n// condition\n\nconst ControlHolder = (props) => {\n  return (\n    <div className='Controls'>\n      <Form>\n        <Row>\n          <Col>\n            { props.children }\n          </Col>\n        </Row>\n      </Form>\n    </div>\n  );\n};\n\nconst Ctrl = (props) => {\n  const { register } = useFormContext();\n\n  return (\n    <Form.Group controlId={ props.name }>\n      <Form.Label>{ props.label || 'Select a ' + props.name.substring(1) }</Form.Label>\n      <Form.Control\n        as='select'\n        name={ props.name }\n        className='custom-select'\n        ref={ register }\n        onChange={ props.onChange }\n      >\n        { props.keys.map((d) => (\n          <option key={ (d.value || d) + props.name } value={ d.value || d }>\n            { d.display || cleanHdrLabels(d) }\n          </option>\n        )) }\n      </Form.Control>\n    </Form.Group>\n  );\n};\n\nconst NestedCtrl = (props) => {\n  const { register } = useFormContext();\n\n  return (\n    <Form.Group controlId={ props.name }>\n      <Form.Label>{ props.label || 'Select a ' + props.name.substring(1) }</Form.Label>\n      <Form.Control\n        as='select'\n        name={ props.name }\n        className='custom-select'\n        ref={ register }\n        onChange={ props.onChange }\n      >\n        { Object.keys(props.keys).map((d, i) => (\n          <optgroup label={ d } key={ i + 'optgrp' }>\n            { props.keys[d].map((e) => (\n              <option value={ e } key={ e + 'grp' }>{ e }</option>\n            )) }\n          </optgroup>\n        )) }\n      </Form.Control>\n    </Form.Group>\n  );\n};\n\nconst SurveyMainControls = (props) => (\n  <React.Fragment>\n    { /* region */ }\n    <Ctrl name='_region' keys={ props.regions } onChange={ props.onChange } />\n    { /* topic */ }\n    <Ctrl name='_topic' keys={ props.topics } onChange={ props.onChange } />\n    { /* question */ }\n    <Ctrl name='_indicator'\n      keys={ props.meta.map((d) => ({ value: d.indicator, display: d.display })) }\n      onChange={ props.onChange }\n      label='Select a survey question'\n    />\n  </React.Fragment>\n);\n\nconst GroupControls = (props) => (\n  <NestedCtrl name='_group' keys={ props.groups } onChange={ props.onChange } />\n);\n\nconst ScoreMainControls = (props) => (\n  <React.Fragment>\n    { /* region */ }\n    <Ctrl name='_region' keys={ props.regions } onChange={ props.onChange } />\n    { /* score */ }\n    <Ctrl name='_v1' keys={ props.variables } onChange={ props.onChange } label='Select an Index' />\n  </React.Fragment>\n);\n\nconst ScoreCompareControls = (props) => (\n  <Ctrl name='_v2'\n    keys={ getComparables(props.variables).map((d) => ({\n      value: d, display: cleanIdxLabels(d)\n    })) }\n    onChange={ props.onChange }\n    label={ `Compare ${ cleanHdrLabels(props.v1, false) } to a second index` }\n  />\n);\n\nconst SparkControls = (props) => (\n  <div className='Controls SparkControls float-right'>\n    <Form.Check\n      inline\n      custom\n      checked={ props.checked }\n      id='show-spark-bars'\n      name='sparkToggle'\n      onChange={ props.onChange }\n      label='Show data bars'\n    />\n  </div>\n);\n\nconst RiskMainControls = (props) => (\n  <React.Fragment>\n    { /* topic */ }\n    <Ctrl name='_topic' keys={ props.topics } onChange={ props.onChange } />\n    { /* question */ }\n    <Ctrl name='_indicator'\n      keys={ props.indicators.map((d) => ({ value: d.indicator, display: d.display })) }\n      onChange={ props.onChange }\n      label='Select a survey question'\n    />\n  </React.Fragment>\n);\n\nconst ChimeMainControls = (props) => (\n  <React.Fragment>\n    { /* condition */ }\n    <Ctrl name='_indicator'\n      keys={ props.indicators.map((d) => ({ value: d.indicator, display: d.display })) }\n      onChange={ props.onChange }\n      label='Select a condition'\n    />\n    { /* age */ }\n    <Ctrl name='_age' keys={ props.ages } onChange={ props.onChange } label='Select an age group' />\n  </React.Fragment>\n);\n\nconst InternetMainControls = (props) => (\n  <React.Fragment>\n    { /* indicator */ }\n    <Ctrl name='_indicator'\n      keys={ props.indicators.map((d) => ({ value: d.indicator, display: d.display })) }\n      onChange={ props.onChange }\n    />\n  </React.Fragment>\n);\n\nexport {\n  ScoreMainControls, ScoreCompareControls,\n  SurveyMainControls, GroupControls,\n  SparkControls,\n  RiskMainControls,\n  ChimeMainControls,\n  InternetMainControls,\n  ControlHolder\n};\n","import React from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\n\nimport { cleanHdrLabels, tblColumns, fmt, getMaxes } from '../utils/utils.js';\n\nimport '../styles/DataTable.css';\n\nconst DataTable = ({ data, v1, meta, spark, sort }) => {\n  const isCommunity = v1 === 'community';\n  const mightOmit = isCommunity ? ['group'] : ['name'];\n  const omit = ['level', 'category', 'region', ...mightOmit];\n\n  // colnames of what will be displayed\n  const colNames = tblColumns(data[0], omit);\n  const maxes = getMaxes(data);\n\n  const cols = colNames.map((col, i) => {\n    let formatter;\n    const isNumber = meta[col] !== undefined;\n    if (isNumber) {\n      if (spark) {\n        formatter = makeSpark(meta[col].format, col, maxes);\n      } else {\n        formatter = fmt(meta[col].format);\n      }\n    } else {\n      formatter = null;\n    }\n    return {\n      dataField: col,\n      text: cleanHdrLabels(col),\n      sort: sort,\n      type: (isNumber ? 'number' : 'string'),\n      classes: (!isNumber ? 'position-sticky' : null),\n      headerClasses: (!isNumber ? 'position-sticky' : null),\n      formatter: formatter,\n      formatExtraData: spark,\n      align: (spark || !isNumber ? 'left' : 'right')\n    };\n  });\n\n  return (\n    <div className='DataTable' id='datatable'>\n      <BootstrapTable\n        bootstrap4\n        hover\n        condensed\n        classes='table-responsive-xl'\n        headerClasses='thead-light'\n        bordered={ true }\n        keyField={ isCommunity ? 'name' : 'group' }\n        data={ data }\n        columns={ cols }\n      />\n    </div>\n  )\n};\n\n\nconst makeSpark = (format, col, maxes) => (cell, row, rowIndex, extraData) => {\n  const max = maxes[col];\n  const scaled = (cell / max) * 100;\n  const w = cell ? (scaled + '%') : 0;\n  return (\n    <div className='spark' style={{ width: w }}>\n      <span className='sparktext'>{ fmt(format)(cell) }</span>\n    </div>\n  )\n};\n\nexport default DataTable;\n","import React, { useState } from 'react';\n\nimport { Row, Col } from 'react-bootstrap';\nimport useForm, { FormContext } from 'react-hook-form';\n\nimport Stage from '../components/Stage';\nimport Scatterplot from '../components/Scatterplot';\nimport { IdxBarChart } from '../components/BarChart';\nimport { ControlHolder, ScoreMainControls, ScoreCompareControls, SparkControls } from '../components/Controls';\nimport DataTable from '../components/DataTable';\nimport { getVariables, getRegions, filterForScatter, filterForBar, cleanIdxLabels } from '../utils/utils.js';\n\nimport '../styles/Dash.css';\n\n\nconst Scores = ({ data, index_comps, meta, intro }) => {\n  const formMethods = useForm({\n    mode: 'onChange'\n  });\n  const variables = getVariables(data);\n  const initValues = {\n    v1: variables[0],\n    v2: variables[1],\n    region: 'Connecticut'\n  };\n\n// state\n  const [v1, setV1] = useState(initValues.v1);\n  const [v2, setV2] = useState(initValues.v2);\n  const [region, setRegion] = useState(initValues.region);\n  const [spark, setSpark] = useState(true);\n\n// event handling\n  const onFormChange = (data, e) => {\n    const { _v1, _v2, _region } = formMethods.getValues();\n    setV1(_v1);\n    setV2(_v2);\n    setRegion(_region);\n  };\n\n  const onToggleChange = (e) => {\n    setSpark(e.target.checked);\n  };\n\n  return (\n    <div className='Scores'>\n      <Row className='align-items-end'>\n        <Col md={ 6 }>\n          <FormContext { ...formMethods }>\n            <ControlHolder>\n              <ScoreMainControls\n                onChange={ formMethods.handleSubmit(onFormChange) }\n                variables={ variables }\n                regions={ getRegions(data) }\n                // v1={ v1 }\n              />\n            </ControlHolder>\n          </FormContext>\n\n          { /* bar chart */ }\n          <Stage\n            type='lblBy2'\n            lbl={ cleanIdxLabels(v1) }\n            grouping={ region }\n            dataBy={ v1 === 'community' ? 'location' : 'group' }\n            axisLbl={ 'Scores 0 (worse) through 1,000 (better)' }\n          >\n            <IdxBarChart\n              data={ filterForBar(data, region, v1) }\n              rAccess={ v1 }\n            />\n          </Stage>\n        </Col>\n\n        <Col md={ 6 } className='second'>\n          <FormContext { ...formMethods }>\n            <ControlHolder>\n              <ScoreCompareControls\n                onChange={ formMethods.handleSubmit(onFormChange) }\n                variables={ variables }\n                v1={ v1 }\n                v2={ v2 }\n              />\n            </ControlHolder>\n          </FormContext>\n\n          { /* scatterplot */ }\n          <Stage\n            lbls={ [v1, v2].map((d) => cleanIdxLabels(d)) }\n            type='versus'\n            axisLbl={ 'Scores 0 (worse) through 1,000 (better)' }\n          >\n            <Scatterplot\n              data={ filterForScatter(data, region) }\n              vs={ [v1, v2] }\n            />\n          </Stage>\n        </Col>\n      </Row>\n\n      <hr />\n\n      <Row>\n        <Col>\n          <h3>What are these scores made of?</h3>\n\n          <Stage\n            grouping={ region }\n            type='lblBy2'\n            lbl={ 'Components of the ' + cleanIdxLabels(v1) }\n            dataBy={ v1 === 'community' ? 'location' : 'group' }\n            axisLbl={ v1 === 'community' ? '' : 'Share of adults' }\n            flush\n            hdrComponents={ <SparkControls checked={ spark } onChange={ onToggleChange } /> }\n          >\n            <DataTable v1={ v1 }\n              meta={ meta[v1] }\n              data={ filterForBar(index_comps[v1], region, v1) }\n              spark={ spark }\n              sort={ true }\n            />\n          </Stage>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Scores;\n","import React from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\n\nimport '../styles/Profile.css';\n\nconst Profile = (props) => {\n  const cols = props.cols || ['Indicator', 'Value'];\n  const columns = [{\n    dataField: 'indicator',\n    text: cols[0],\n    sort: false,\n    headerStyle: () => ({ width: '80%' })\n  }, {\n    dataField: 'value',\n    text: cols[1],\n    sort: false,\n    align: 'right',\n    // formatter: fmt('0.0%'),\n    classes: 'text-right',\n    headerStyle: () => ({ width: '20%' })\n  }];\n\n  return (\n    <div className='Profile DataTable' id='profile'>\n      <BootstrapTable\n        bootstrap4\n        classes='table-responsive-sm'\n        headerClasses='thead-light'\n        bordered={ true }\n        keyField={ 'indicator' }\n        data={ props.data }\n        columns={ columns }\n      />\n    </div>\n  )\n};\n\nexport default Profile;\n","import React, { useState } from 'react';\n\nimport { Row, Col } from 'react-bootstrap';\nimport useForm, { FormContext } from 'react-hook-form';\n\nimport Stage from '../components/Stage';\nimport { QBarChart } from '../components/BarChart';\nimport { ControlHolder, SurveyMainControls, GroupControls } from '../components/Controls';\nimport Profile from '../components/Profile';\nimport { cleanHdrLabels, getQMeta, getProfile, getNestedGrps, fmt } from '../utils/utils.js';\n\nconst Survey = ({ data, meta, intro }) => {\n  const formMethods = useForm({\n    mode: 'onChange'\n  });\n  const topics = Object.keys(meta);\n  const regions = Object.keys(data);\n\n  const initValues = {\n    region: regions[0],\n    topic: topics[0],\n    indicator: meta[topics[0]][0].indicator,\n    group: 'Total'\n  };\n\n// state\n  const [region, setRegion] = useState(initValues.region);\n  const [topic, setTopic] = useState(initValues.topic);\n  const [indicator, setIndicator] = useState(initValues.indicator);\n  const [group, setGroup] = useState(initValues.group);\n\n// event handling\n  const onChange = (data, e) => {\n    const { _region, _topic, _indicator, _group } = formMethods.getValues();\n\n    // don't like setting state like this but oh well\n    const q0 = meta[_topic][0].indicator;\n    const g0 = initValues.group;\n    if (e.target.name === '_topic' || e.target.name === '_region') {\n      formMethods.setValue('_indicator', q0);\n      formMethods.setValue('_group', g0);\n      setIndicator(q0);\n      setGroup(g0);\n    } else {\n      setIndicator(_indicator);\n      setGroup(_group);\n    }\n    setRegion(_region);\n    setTopic(_topic);\n  };\n\n  const onClick = (d) => {\n    setGroup(d.group);\n  };\n\n  const qDisplay = getQMeta(meta[topic], indicator) || '';\n  const groups = getNestedGrps(data[region][topic]);\n  const profileData = getProfile(data[region][topic], 'group', group, meta[topic]);\n\n  return (\n    <div className='Survey'>\n      <Row>\n        <Col md={ 6 }>\n          <FormContext { ...formMethods }>\n            <ControlHolder>\n              <SurveyMainControls\n                onChange={ formMethods.handleSubmit(onChange) }\n                topics={ topics }\n                regions={ regions }\n                meta={ meta[topic] }\n              />\n            </ControlHolder>\n          </FormContext>\n        </Col>\n        <Col md={ 6 }>\n\n        </Col>\n      </Row>\n\n      <Row>\n        <Col md={ 6 }>\n          { /* bar chart */ }\n          <Stage\n            type='lblBy2'\n            lbl={ qDisplay.display }\n            dataBy={ 'group' }\n            grouping={ region }\n            axisLbl={ qDisplay.denom }\n          >\n            <QBarChart\n              data={ data[region][topic] }\n              rAccess={ indicator }\n              numFmt={ fmt('0.0%') }\n              onClick={ onClick }\n            />\n          </Stage>\n        </Col>\n\n        <Col md={ 6 } className='second'>\n          <FormContext { ...formMethods }>\n            <ControlHolder>\n              <GroupControls\n                onChange={ formMethods.handleSubmit(onChange) }\n                groups={ groups }\n                meta={ meta[topic] }\n              />\n            </ControlHolder>\n          </FormContext>\n          { /* profile */ }\n          <Stage\n            type='colon'\n            lbl={ cleanHdrLabels(topic) }\n            grouping={ region }\n            dataBy={ group }\n            axisLbl={ qDisplay.denom }\n            flush\n          >\n            <Profile\n              data={ profileData }\n              cols={ ['Survey question', 'Value'] }\n            />\n          </Stage>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Survey;\n","import React from 'react';\nimport { Map, TileLayer, GeoJSON } from 'react-leaflet';\nimport { getBounds, makeGeoJson, makeTooltip } from '../utils/utils.js';\nimport Legend from './Legend';\n\nimport '../styles/Chart.css';\n\nexport default class Choropleth extends React.Component {\n  getStyle = (feature) => {\n    const name = feature.properties.name;\n    const fillColor = this.props.data[name] && this.props.data[name].value != undefined ? this.props.colorscale(this.props.data[name].value) : '#ccc';\n    return {\n      fillColor: fillColor,\n      color: '#333',\n      weight: 0.5,\n      opacity: 1,\n      fillOpacity: 0.75\n    };\n  };\n\n  handleFeature = (feature, layer) => {\n    const name = feature.properties.name;\n    layer\n      .on('mouseover', this.featureHilite)\n      .on('mouseout', this.featureUnhilite);\n    layer.bindTooltip(() => (\n      makeTooltip(name, this.props.data[name] ? this.props.data[name].value : null, this.props.meta.format, this.props.min)),\n      { direction: 'top', offset: [0, -20], className: 'custom-tip' }\n    );\n  };\n\n  featureHilite = ({ target }) => {\n    target.setStyle({\n      fillOpacity: 0.95,\n      weight: 1\n    });\n\n  };\n  featureUnhilite = ({ target }) => {\n    target.setStyle({\n      fillOpacity: 0.75,\n      weight: 0.5\n    });\n  };\n\n  render() {\n    const bbox = getBounds(this.props.shape);\n    const geo = makeGeoJson(this.props.shape);\n\n    return (\n      <div className='Chart Choropleth'>\n        <Map\n          bounds={ bbox }\n          zoomSnap={ 0.5 }\n          zoomDelta={ 0.5 }\n          scrollWheelZoom={ false }\n        >\n          <TileLayer\n            url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-background/{z}/{x}/{y}.{ ext }\"\n            attribution='Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n            subdomains=\"abcd\"\n            minZoom={ 8 }\n            maxZoom={ 16 }\n            ext=\"png\"\n            opacity={ 0.4 }\n          />\n          <GeoJSON\n            key={ (feature) => feature.properties.name }\n            data={ geo }\n            style={ this.getStyle }\n            interactive={ true }\n            onEachFeature={ this.handleFeature }\n            onClick={ this.props.onClick }\n          />\n        </Map>\n\n        <Legend\n          scale={ this.props.colorscale }\n          format={ this.props.meta.format }\n          type='threshold'\n          style={ {\n            right: 0,\n            bottom: 0\n          } }\n        />\n      </div>\n    )\n  }\n}\n","import React, { useState } from 'react';\n\nimport { Row, Col } from 'react-bootstrap';\nimport useForm, { FormContext } from 'react-hook-form';\nimport { schemeBuPu as palette } from 'd3-scale-chromatic';\n\nimport Stage from '../components/Stage';\nimport { ControlHolder, RiskMainControls } from '../components/Controls';\nimport Choropleth from '../components/Choropleth';\nimport Profile from '../components/Profile';\n\nimport { getQMeta, getMapData, makeChoroScale, cleanHdrLabels, getProfile } from '../utils/utils.js';\n\nconst Risks = ({ data, meta, shape, intro }) => {\n  const formMethods = useForm({\n    mode: 'onChange'\n  });\n  const topics = Object.keys(meta);\n  const initValues = {\n    topic: topics[0],\n    indicator: meta[topics[0]][0].indicator\n  };\n\n  const towns = Object.keys(getMapData(data[initValues.topic], initValues.indicator));\n  // const towns = Object.keys(data[initValues.indicator][0]);\n  const [topic, setTopic] = useState(initValues.topic);\n  const [indicator, setIndicator] = useState(initValues.indicator);\n  const [town, setTown] = useState(towns[0]);\n\n  const onChange = (data, e) => {\n    const { _topic, _indicator } = formMethods.getValues();\n    const q0 = meta[_topic][0].indicator;\n    if (e.target.name === '_topic') {\n      formMethods.setValue('_indicator', q0);\n      setIndicator(q0);\n    } else {\n      setIndicator(_indicator);\n    }\n    setTopic(_topic);\n  };\n\n  const onFeatureClick = ({ layer }) => {\n    setTown(layer.feature.properties.name);\n  };\n\n  const qDisplay = getQMeta(meta[topic], indicator) || '';\n  const mapData = getMapData(data[topic], indicator);\n  const profileData = getProfile(data[topic], 'name', town, meta[topic]);\n\n  return (\n    <div className='Risks'>\n      <Row>\n        <Col md={ 6 }>\n          <FormContext { ...formMethods }>\n            <ControlHolder>\n              <RiskMainControls\n                onChange={ formMethods.handleSubmit(onChange) }\n                topics={ topics }\n                indicators={ meta[topic] }\n              />\n            </ControlHolder>\n          </FormContext>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col md={ 6 }>\n          <Stage\n            type='lblBy'\n            lbl={ qDisplay.display }\n            dataBy={ 'town' }\n            axisLbl={ qDisplay.denom }\n            flush\n          >\n            <Choropleth\n              data={ mapData }\n              shape={ shape }\n              colorscale={ makeChoroScale(mapData, palette, 5) }\n              meta={ { format: '.0%' } }\n              onClick={ onFeatureClick }\n            />\n          </Stage>\n        </Col>\n        <Col md={ 6 } className='second'>\n          <Stage\n            type='comma'\n            lbl={ cleanHdrLabels(topic) }\n            grouping={ town }\n            axisLbl={ qDisplay.denom }\n            flush\n          >\n            <Profile\n              data={ profileData }\n              cols={ [ 'Survey question', 'Value' ] }\n            />\n          </Stage>\n        </Col>\n      </Row>\n    </div>\n  )\n};\n\nexport default Risks;\n","import React, { useState } from 'react';\n\nimport { Row, Col } from 'react-bootstrap';\nimport useForm, { FormContext } from 'react-hook-form';\nimport { schemeBuPu as palette } from 'd3-scale-chromatic';\n\nimport Stage from '../components/Stage';\nimport { ControlHolder, ChimeMainControls } from '../components/Controls';\nimport Choropleth from '../components/Choropleth';\nimport Profile from '../components/Profile';\n\nimport { getQMeta, getMapData, makeChoroScale, getGrpProfile } from '../utils/utils.js';\n\nconst Chime = ({ data, meta, shape, intro }) => {\n  const formMethods = useForm({\n    mode: 'onChange'\n  });\n  const ages = Object.keys(meta);\n  const initValues = {\n    indicator: meta[ages[0]][0].indicator,\n    age: ages[0]\n  };\n\n  const towns = Object.keys(getMapData(data[initValues.age], initValues.indicator));\n  const [age, setAge] = useState(initValues.age);\n  const [indicator, setIndicator] = useState(initValues.indicator);\n  const [town, setTown] = useState(towns[0]);\n  // const [view, setView] = useState(initValues.view);\n\n  const onChange = (data, e) => {\n    const { _age, _indicator } = formMethods.getValues();\n    setIndicator(_indicator);\n    setAge(_age);\n  };\n\n  const onFeatureClick = ({ layer }) => {\n    setTown(layer.feature.properties.name);\n  };\n\n  const mapData = getMapData(data[age], indicator);\n  const profileData = getGrpProfile(data, 'name', town, meta, indicator, null);\n  const qDisplay = getQMeta(meta[age], indicator) || '';\n\n  return (\n    <div className='Chime'>\n      <Row>\n        <Col md={ 6 }>\n          <FormContext { ...formMethods }>\n            <ControlHolder>\n              <ChimeMainControls\n                onChange={ formMethods.handleSubmit(onChange) }\n                ages={ ages }\n                indicators={ meta[age] }\n              />\n            </ControlHolder>\n          </FormContext>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col md={ 6 }>\n          <Stage\n            type='lblBy2'\n            lbl={ qDisplay.display + ' hospital encounters' }\n            dataBy={ 'town' }\n            grouping={ age.toLowerCase() }\n            axisLbl={ 'Rate per 10,000 residents' }\n            flush\n          >\n            <Choropleth\n              data={ mapData }\n              shape={ shape }\n              colorscale={ makeChoroScale(mapData, palette, 5) }\n              meta={ { format: ',d' } }\n              onClick={ onFeatureClick }\n            />\n          </Stage>\n        </Col>\n        <Col md={ 6 } className='second'>\n          <Stage\n            type='lblBy2'\n            lbl={ qDisplay.display + ' encounters' }\n            dataBy={ 'age' }\n            grouping={ town }\n            axisLbl={ 'Rate per 10,000 residents' }\n            flush\n          >\n            <Profile\n              data={ profileData }\n              meta={ meta[age] }\n              cols={ ['Condition', 'Rate'] }\n            />\n          </Stage>\n        </Col>\n      </Row>\n    </div>\n  )\n};\n\nexport default Chime;\n","import React, { useState } from 'react';\n\nimport { Row, Col } from 'react-bootstrap';\nimport useForm, { FormContext } from 'react-hook-form';\nimport { schemeBuPu as palette } from 'd3-scale-chromatic';\n\nimport Stage from '../components/Stage';\nimport { ControlHolder, InternetMainControls } from '../components/Controls';\nimport Choropleth from '../components/Choropleth';\nimport Profile from '../components/Profile';\n\nimport { getQMeta, getMapData, makeChoroScale, cleanHdrLabels, getProfile } from '../utils/utils.js';\n\nconst Internet = ({ data, meta, shape, intro }) => {\n  const formMethods = useForm({\n    mode: 'onChange'\n  });\n  const initValues = {\n    indicator: meta[0].indicator\n  };\n  const towns = Object.keys(getMapData(data, initValues.indicator));\n  const [indicator, setIndicator] = useState(initValues.indicator);\n  const [town, setTown] = useState(towns[0]);\n\n  const onChange = (data, e) => {\n    const { _indicator } = formMethods.getValues();\n    setIndicator(_indicator);\n  };\n\n  const onFeatureClick = ({ layer }) => {\n    setTown(layer.feature.properties.name);\n  };\n\n  const qDisplay = getQMeta(meta, indicator) || '';\n  const mapData = getMapData(data, indicator);\n  const profileData = getProfile(data, 'name', town, meta);\n\n  return (\n    <div className='Internet'>\n      <Row>\n        <Col md={ 6 }>\n          <FormContext { ...formMethods }>\n            <ControlHolder>\n              <InternetMainControls\n                onChange={ formMethods.handleSubmit(onChange) }\n                indicators={ meta }\n              />\n            </ControlHolder>\n          </FormContext>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col md={ 6 }>\n          <Stage\n            type='lblBy'\n            lbl={ qDisplay.display }\n            dataBy={ 'town' }\n            axisLbl={ qDisplay.denom }\n            flush\n          >\n            <Choropleth\n              data={ mapData }\n              shape={ shape }\n              colorscale={ makeChoroScale(mapData, palette, 5) }\n              meta={ { ...qDisplay } }\n              min={ 0.01 }\n              onClick={ onFeatureClick }\n            />\n          </Stage>\n        </Col>\n        <Col md={ 6 } className='second'>\n          <Stage\n            type='comma'\n            lbl={ 'Internet and computer access' }\n            grouping={ town }\n            axisLbl={ qDisplay.denom }\n            flush\n          >\n            <Profile\n              data={ profileData }\n              cols={ [ 'Indicator', 'Value' ] }\n            />\n          </Stage>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Internet;\n","import React from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nimport '../styles/Header.css';\n\nconst Header = (props) => (\n  <div className='Header'>\n    <Navbar expand='md' variant='light'  fixed='top'>\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\n      <Navbar.Collapse id='basic-navbar-nav'>\n        <Nav variant='pills'>\n          { props.hdrs.map((h) => (\n            <LinkContainer to={ '/' + h.location } key={ `page-${ h.location }` }>\n              <Nav.Link>{ h.title }</Nav.Link>\n            </LinkContainer>\n          )) }\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  </div>\n);\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Switch, Route, Redirect, useLocation } from 'react-router-dom';\nimport { objToArray, filterByString, filterTownLvl } from './utils/utils.js';\nimport Dash from './components/Dash';\n\nimport './App.css';\n\nimport Scores from './pages/Scores';\nimport Survey from './pages/Survey';\nimport Risks from './pages/Risks';\nimport Chime from './pages/Chime';\nimport Internet from './pages/Internet';\n\nimport Header from './components/Header';\nimport { NoteContext } from './utils/NoteContext.js';\n\nimport data from './data/dash_data.json';\nimport meta from './data/meta.json';\nimport page_meta from './data/page_meta.json';\nimport town_topo from './data/town_topo.json';\n\nconst hdrs = {\n  survey: 'Wellbeing indicators',\n  risks: 'Health risks by town',\n  scores: 'Index scores',\n  chime: 'Hospital encounters',\n  internet: 'Internet access'\n};\n\nconst useDownload = () => {\n  const location = useLocation().pathname.substring(1);\n  return {\n    location: location,\n    urls: (page_meta[location] ? page_meta[location].download : null),\n    dw: 'https://data.world/camille86/cws2018',\n    display: hdrs[location]\n  };\n};\n\nconst App = () => {\n  const download = useDownload();\n  const [noteOpen, setNoteOpen] = useState(true);\n  const handleClose = () => {\n    setNoteOpen(!noteOpen);\n  };\n// [1] \"chime_data\"         \"cws_health_by_town\" \"cws_indicators\"     \"index_components\"\n// [5] \"index_scatterplot\"  \"sbass\"\n  return (\n    <div className=\"App\">\n      <Header hdrs={ objToArray(hdrs, 'location', 'title') } />\n\n      <NoteContext.Provider value={ { noteOpen, handleClose } }>\n\n        <Dash\n          intro={ page_meta[download.location] ? page_meta[download.location].intro : null }\n          note={ page_meta['covid'].intro.text }\n          download={ download }\n        >\n          <Switch>\n            <Route exact path='/' render={ () => <Redirect to='/survey' /> } />\n            <Route exact path='/survey'>\n              <Survey\n                data={ data['cws_indicators'] }\n                meta={ meta['cws'] }\n              />\n            </Route>\n            <Route exact path='/risks'>\n              <Risks\n                data={ data['cws_health_by_town'] }\n                meta={ filterTownLvl(filterByString(meta['cws'], 'health')) }\n                shape={ town_topo }\n              />\n            </Route>\n            <Route exact path='/scores'>\n              <Scores\n                data={ data['index_scatterplot'] }\n                index_comps={ data['index_components'] }\n                meta={ meta['score'] }\n              />\n            </Route>\n            <Route exact path='/chime'>\n              <Chime\n                data={ data['chime_data'] }\n                meta={ meta['chime'] }\n                shape={ town_topo }\n              />\n            </Route>\n            <Route exact path='/internet'>\n              <Internet\n                data={ data['internet'] }\n                meta={ meta['internet'] }\n                shape={ town_topo }\n              />\n            </Route>\n          </Switch>\n        </Dash>\n      </NoteContext.Provider>\n    </div>\n  );\n};\n\n//////////////////\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'leaflet/dist/leaflet.css';\n// import './styles/bootstrap.min.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport './index.css';\n\nReactDOM.render(\n  <Router basename={ process.env.PUBLIC_URL + '/' }>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}