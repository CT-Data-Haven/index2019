{"version":3,"sources":["components/Header.jsx","components/utils.js","components/Stage.jsx","components/DataContext.js","components/Legend.jsx","components/Tip.jsx","components/Scatterplot.jsx","components/BarChart.jsx","components/Controls.jsx","components/Intro.jsx","components/DataTable.jsx","components/Scores.jsx","components/Profile.jsx","components/Survey.jsx","components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","Navbar","expand","Toggle","aria-controls","Collapse","id","Nav","variant","to","Link","hdrs","scores","survey","cleanHdrLabels","lbl","first","hdr","_","cleanIdxLabels","getQMeta","meta","question","q","getRegions","data","filter","d","level","map","uniq","RegExp","test","value","filterForScatter","region","filterForBar","variable","out","createScales","pals","rev","pal","n","groups","length","reverse","colorscale","scaleOrdinal","sizescale","fmt","fmtStr","undefined","format","Stage","type","scatter","bar","table","profile","Card","as","hdrComponents","Body","children","Footer","axisLbl","ChartStage","lbls","TableStage","style","DataContext","React","createContext","Legend","color","size","margin","transform","left","top","domain","i","key","fill","cx","cy","r","dx","dy","substring","titleLabel","Tip","tipLblr","vs","content","numFmt","hover","x","y","fillOpacity","strokeOpacity","stroke","Scatterplot","useContext","xAccess","yAccess","Vivid","xRange","yRange","right","bottom","points","xAccessor","yAccessor","pointStyle","opacity","xExtent","yExtent","axes","orient","label","baseline","tickFormat","responsiveWidth","foregroundGraphics","hoverAnnotation","svgAnnotationRules","screenCoordinates","tooltipContent","match","join","BarChart","colorVar","labels","rAccess","oAccess","oAccessor","rAccessor","oPadding","oLabel","projection","strokeWidth","annotations","lblRules","pieceHoverAnnotation","IdxBarChart","QBarChart","coords","isNaN","small","ScoreMainControls","register","useFormContext","Form","Row","Col","Group","controlId","Label","Control","name","ref","onChange","variables","regions","ScoreCompareControls","yvariables","concat","v1","SparkControls","Check","inline","custom","checked","SurveyMainControls","topics","topicMeta","display","SurveyProfileControls","categories","Object","keys","e","j","Intro","Alert","makeSpark","col","maxes","cell","row","rowIndex","extraData","max","w","width","DataTable","spark","sort","isCommunity","omit","colNames","difference","tblColumns","numberCols","pickBy","c","keyBy","mapValues","getMaxes","cols","formatter","isNumber","dataField","text","classes","headerClasses","formatExtraData","align","bootstrap4","condensed","bordered","keyField","columns","Scores","index_data","index_comps","formMethods","useForm","mode","flatMap","pull","initValues","v2","useState","setV1","setV2","setRegion","setSpark","onFormChange","getValues","v1Select","v2Select","regSelect","Container","page","md","handleSubmit","Provider","dataBy","target","Profile","headerStyle","Survey","cws_data","topic","group","setTopic","setQuestion","setGroup","topicSelect","qSelect","grpSelect","q0","g0","setValue","qDisplay","groupBy","profileData","find","toPairs","orderBy","getProfile","dl","urls","slug","Heading","toLowerCase","href","dw","github","App","download","location","useLocation","pathname","dl_meta","useDownload","exact","path","render","score_meta","cws_meta","Boolean","window","hostname","ReactDOM","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.39b26dfb.chunk.js","sourcesContent":["import React from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nimport '../styles/Header.css';\n\nconst Header = (props) => (\n  <div className='Header'>\n    <Navbar expand='md' >\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\n      <Navbar.Collapse id='basic-navbar-nav'>\n        <Nav variant='pills'>\n          <LinkContainer to='/scores'>\n            <Nav.Link>{ props.hdrs.scores }</Nav.Link>\n          </LinkContainer>\n          <LinkContainer to='/survey'>\n            <Nav.Link>{ props.hdrs.survey }</Nav.Link>\n          </LinkContainer>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  </div>\n);\n\nexport default Header;\n","import * as _ from 'lodash';\nimport { scaleOrdinal } from 'd3-scale';\nimport wordwrap from 'wordwrapjs';\nimport { format } from 'd3-format';\n\nconst cleanHdrLabels = (lbl, first = true) => {\n  const hdr = _.replace(lbl, /_/g, ' ');\n  return first ? _.upperFirst(hdr) : _.startCase(hdr);\n};\n\nconst cleanIdxLabels = (lbl) => (\n  cleanHdrLabels(lbl, false) + ' Index'\n);\n\nconst cleanKeys = (obj, first = true) => (\n  _.chain(obj)\n    .keys()\n    .map((d) => cleanHdrLabels(d, first = first))\n    .value()\n);\n\nconst titleLabel = (lbl, n = 2) => (\n  _.upperFirst(lbl.substring(n))\n);\n\nconst wrapTspan = (txt) => (\n  wordwrap.lines(txt, { width: 15 })\n);\n\nconst getVariables = (data) => (\n  _.chain(data)\n    .flatMap(_.keys)\n    .uniq()\n    .pull('name', 'category', 'group', 'level', 'region')\n    .sort()\n    .reverse()\n    .value()\n);\n\nconst getSubVariables = (variables, v1) => (\n  _.without(variables, v1)\n);\n\nconst getQMeta = (meta, question) => (\n  _.find(meta, (q) => q.question === question)\n);\n\nconst getProfile = (data, group, meta) => (\n  _.chain(data)\n    .find((d) => d.group === group)\n    .omit(['category', 'group'])\n    .toPairs()\n    .map((d) => ({ question: d[0], display: getQMeta(meta, d[0]).display, value: d[1] }) )\n    .orderBy('display')\n    .value()\n);\n\nconst getRegions = (data) => (\n  _.chain(data)\n    .filter((d) => _.includes(['1_state', '2_region'], d.level))\n    .map('name')\n    .uniq()\n    // .filter((d) => d.search(/(Inner|Outer) Ring/) === -1)\n    .filter((d) => !RegExp('(Inner|Outer) Ring').test(d))\n    .value()\n);\n\n\n\nconst getNestedGrps = (data) => (\n  _.chain(data)\n    .groupBy('category')\n    .mapValues((d) => _.map(d, 'group'))\n    .value()\n);\n\n\nconst filterForScatter = (data, region) => (\n  _.filter(data, { 'category': 'Total' })\n);\n\nconst filterForBar = (data, region, variable) => {\n  let out;\n  if (variable === 'community') {\n    if (region === 'Connecticut') {\n      out = _.filter(data, (d) => _.includes(['1_state', '2_region'], d.level));\n    } else {\n      out =  _.filter(data, (d) => _.includes([region, 'Connecticut'], d.region));\n    }\n    out = _.filter(out, { 'category': 'Total' });\n  } else {\n    out = _.filter(data, { 'name': region });\n  }\n  return out;\n};\n\n\nconst createScales = (data, pals, variable, rev) => {\n  const n = _.size(pals);\n  const groups = _.chain(data)\n    .map(variable)\n    .uniq()\n    .value();\n  let pal;\n  if (rev) {\n    pal = _.takeRight(pals[n], groups.length).reverse();\n  } else {\n    pal = _.take(pals[n], groups.length);\n  }\n  // let pal = rev ? _.takeRight(pals[n], groups.length) : _.take(pals[n], groups.length);\n  const color = scaleOrdinal(groups, pal);\n  const rad = scaleOrdinal(groups, [8, 7, 5, 3, 3, 3]);\n  return { colorscale: color, sizescale: rad };\n};\n\n\n\nconst compileHeader = (type) => {\n  const headers = {\n    scatter: '<%= lbls[0] %> vs. <%= lbls[1] %>',\n    bar: '<%= lbls[0] %> by <%= dataBy %>, <%= region %>',\n    table: 'Components of <%= lbls[0] %> by <%= dataBy %>, <%= region %>',\n    profile: '<%= lbls[0] %>, <%= group %>'\n  };\n  return _.template(headers[type]);\n};\n\nconst fmt = (fmtStr) => (\n  (d) => (d === null || d === undefined ? 'N/A' : format(fmtStr)(d))\n);\n\nconst tblColumns = (row, omit) => (\n  _.chain(row)\n    .keys()\n    .difference(omit)\n    .value()\n);\n\nconst getMaxes = (data) => {\n  // const numberCols = _.pickBy(data[0], _.isNumber);\n  const numberCols = _.chain(data[0])\n    .pickBy(_.isNumber)\n    .keys()\n    .value();\n  return _.chain(numberCols)\n    .map((c) => ({\n      q: c,\n      max: _.chain(data).map(c).max().value()\n    }))\n    .keyBy('q')\n    .mapValues('max')\n    .value();\n};\n\n// const maxes = _.chain(colNames)\n//   .map((c) => ({\n//     q: c,\n//     max: _.chain(data).map(c).max().value()\n//   }))\n//   .keyBy('q')\n//   .mapValues('max')\n//   .value();\n\nexport{\n  cleanHdrLabels,\n\tcleanIdxLabels,\n  cleanKeys,\n  titleLabel,\n  wrapTspan,\n  getQMeta,\n  getNestedGrps,\n  getProfile,\n  getMaxes,\n  // getQuestions,\n\tgetRegions,\n  getSubVariables,\n\tgetVariables,\n\tfilterForScatter,\n  filterForBar,\n\tcreateScales,\n\tcompileHeader,\n  tblColumns,\n  fmt\n};\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport '../styles/Stage.css';\nimport { cleanIdxLabels, cleanHdrLabels, compileHeader } from './utils.js';\n\n\n\nconst Stage = (props) => {\n  const hdr = compileHeader(props.type)({ ...props });\n\n  return (\n    <Card>\n      <Card.Header as='h3'>\n        { hdr }\n        { props.hdrComponents || null }\n      </Card.Header>\n      <Card.Body>\n        { props.children }\n      </Card.Body>\n      <Card.Footer className='text-right axis-title'>{ props.axisLbl || null }</Card.Footer>\n    </Card>\n  );\n};\n\nconst ChartStage = (props) => (\n  <div className='Stage ChartStage'>\n    <Stage\n      lbls={ props.lbls.map((d) => d || cleanHdrLabels(d)) }\n      { ...props }\n    />\n  </div>\n);\n\n\nconst TableStage = (props) => (\n  <div className={ props.style ? 'Stage TableStage ' + props.style : 'Stage TableStage' }>\n    <Stage\n      type={ props.type || 'table' }\n      { ...props }\n    />\n  </div>\n);\n\n\nexport { ChartStage, TableStage };\n","import React from 'react';\n\nconst DataContext = React.createContext(null);\n\nexport default DataContext;\n","import React from 'react';\nimport { titleLabel } from './utils.js';\n\nimport '../styles/Legend.css';\n\nconst Legend = ({ color, size, margin }) => {\n  return (\n    <g className='Legend' id='legend' transform={ `translate(${ margin.left + 10 },${ margin.top + 10 })` }>\n      { color.domain().map((d, i) => (\n        <g key={ `legendline-${ i }` } transform={ `translate(0,${ i * 15 })` }>\n          <circle fill={ color(d) } cx='0' cy='0' r={ size(d) - 1 } />\n          <text key={ `legendtxt-${ i }` } dx='0.6em' dy='0.28em'>\n            { titleLabel(d) }\n          </text>\n        </g>\n      )) }\n    </g>\n  );\n};\n\nexport default Legend;\n","import React from 'react';\nimport { cleanIdxLabels } from './utils.js';\n\nimport '../styles/Tooltip.css';\n\nconst Tip = (props) => {\n  const lbls = props.tipLblr ? props.vs.map(props.tipLblr) : props.vs;\n  const content = props.vs.map((d, i) => (\n    <div key={ `tip-div${ i }` }>\n      <p key={ `tip-p${ i }` }><span key={ `tip${ i }` }>{ lbls[i].length ? `${ lbls[i] }: ` : '' } </span>{ props.numFmt(props.data[d]) }</p>\n    </div>\n));\n\n  return (\n    <div className='Tooltip'>\n      <h5>{ props.data[props.hdr] }</h5>\n      { content }\n    </div>\n  );\n};\n\nexport default Tip;\n","import React from 'react';\nimport { ResponsiveXYFrame, FacetController } from 'semiotic';\nimport { AnnotationBadge, AnnotationCallout, AnnotationCalloutCircle } from 'react-annotation';\nimport { Vivid } from 'cartocolor';\nimport * as _ from 'lodash';\n\nimport DataContext from './DataContext';\nimport Legend from './Legend';\nimport Tip from './Tip';\nimport '../styles/Chart.css';\n\nimport { cleanIdxLabels, createScales } from './utils.js';\n\nconst Scatterplot = (props) => {\n  const data = React.useContext(DataContext);\n\n  // const { v1, v2 } = props;\n  const [xAccess, yAccess] = props.vs;\n  const { colorscale, sizescale } = createScales(data, Vivid, 'level', false);\n\n  const xRange = [_.min(_.map(data, xAccess)), _.max(_.map(data, xAccess))];\n  const yRange = [_.min(_.map(data, yAccess)), _.max(_.map(data, yAccess))];\n  const pad = 0.05;\n  const margin = { top: 10, right: 10, bottom: 60, left: 80 };\n  const fmt = props.numFmt || ((d) => d);\n\n  return (\n    <div className='Chart'>\n      <ResponsiveXYFrame\n        points={ data }\n        margin={ margin }\n        size={ [600, 500] }\n        xAccessor={ xAccess }\n        yAccessor={ yAccess }\n        pointStyle={ (d) => ({\n          fill: colorscale(d.level),\n          stroke: colorscale(d.level),\n          r: sizescale(d.level),\n          opacity: 0.8\n        }) }\n        xExtent={ [xRange[0] * (1 - pad), xRange[1] * (1 + pad)] }\n        yExtent={ [yRange[0] * (1 - pad), yRange[1] * (1 + pad)] }\n        axes={[\n          { orient: 'left', label: cleanIdxLabels(yAccess), baseline: 'under', tickFormat: fmt },\n          { orient: 'bottom', label: cleanIdxLabels(xAccess), baseline: 'under', tickFormat: fmt }\n        ]}\n        responsiveWidth={ true }\n        foregroundGraphics={ <Legend color={ colorscale } size={ sizescale } margin={ margin } /> }\n        hoverAnnotation={ [(d) => ({\n          type: 'frame-hover',\n          color: colorscale(d.level)\n        })] }\n        svgAnnotationRules={ ({ screenCoordinates, d }) => (d && d.type === 'frame-hover') ? hover(d, screenCoordinates[0], screenCoordinates[1], colorscale) : null }\n        tooltipContent={ (d) => (\n          <Tip data={ d.data } type='scatter'\n            vs={ props.vs }\n            hdr='name'\n            tipLblr={ (d) => cleanIdxLabels(d).match(/[A-Z]/g).join('') }\n            numFmt={ fmt }\n          />\n        ) }\n      />\n    </div>\n  )\n};\n\n\nconst hover = (d, x, y, color) => (\n  <g key={ `${ hover }-tip` } className='hover-circle'>\n    <circle\n      cx={ x }\n      cy={ y }\n      r={ 12 }\n      fillOpacity={ 1.0 }\n      strokeOpacity={ 1.0 }\n      stroke={ color(d.level) }\n      fill={ color(d.level) }\n    ></circle>\n  </g>\n);\n\nexport default Scatterplot;\n","import React from 'react';\nimport { ResponsiveOrdinalFrame } from 'semiotic';\nimport { Vivid } from 'cartocolor';\nimport * as _ from 'lodash';\n\nimport DataContext from './DataContext';\nimport Tip from './Tip';\nimport '../styles/Chart.css';\n\nimport { cleanIdxLabels, cleanHdrLabels, createScales, wrapTspan } from './utils.js';\n\nconst BarChart = (props) => {\n  const data = React.useContext(DataContext);\n  const { colorscale, sizescale } = createScales(data, Vivid, props.colorVar, props.colorVar === 'category');\n  const fmt = props.numFmt || ((d) => d);\n\n  const labels = data.map((d) => ({\n    label: fmt(d[props.rAccess]),\n    [props.oAccess]: d[props.oAccess],\n    [props.rAccess]: d[props.rAccess],\n    type: 'bar-label'\n  }));\n\n\n\n  return (\n    <div className='Chart'>\n      <ResponsiveOrdinalFrame\n        data={ data }\n        margin={ { top: 10, right: 10, bottom: 10, left: 120 } }\n        oAccessor={ props.oAccess }\n        rAccessor={ props.rAccess }\n        type='bar'\n        oPadding={ 8 }\n        oLabel={ true }\n        projection='horizontal'\n        style={ (d) => ({\n          fill: colorscale(d[props.colorVar]),\n          stroke: 'white',\n          strokeWidth: '1px',\n          opacity: 0.8\n        }) }\n\n        annotations={ labels }\n        svgAnnotationRules={ (d) => lblRules(d, props.oAccess, props.rAccess, fmt) }\n        responsiveWidth={ true }\n        pieceHoverAnnotation={ [{\n          // type: 'desaturation-layer'\n        }, {\n          type: 'highlight',\n          style: (d) => ({\n            opacity: 1.0,\n            stroke: '#444'\n          })\n        }] }\n\n      />\n    </div>\n  );\n};\n\n\nconst IdxBarChart = (props) => {\n  const rAccess = props.vs[0];\n  const oAccess = rAccess === 'community' ? 'name': 'group';\n  const colorVar = rAccess === 'community' ? 'level' : 'category';\n\n  return (\n    <BarChart\n      oAccess={ oAccess }\n      rAccess={ rAccess }\n      colorVar={ colorVar }\n    />\n  );\n};\n\nconst QBarChart = (props) => {\n  return (\n    <BarChart\n      oAccess={ 'group' }\n      rAccess={ props.vs[0] }\n      colorVar={ 'category' }\n      numFmt={ props.numFmt }\n    />\n  );\n};\n\n////////// labels\n\n////// check width of bar; if under some amount, positive dx and dark label\nconst lblRules = ({ screenCoordinates, d }, oAccess, rAccess, fmt) => {\n  if (d.type === 'bar-label') {\n    const missing = isNaN(screenCoordinates[0]);\n    const coords = missing ? [0, screenCoordinates[1]] : screenCoordinates;\n    const small = coords[0] < 30;\n    return (\n      <g\n        className={ `direct-label ${ small ? 'dark' : 'light' }` }\n        key={ `lbl-${ d[oAccess] }` }\n        transform={ `translate(${ coords })` }\n      >\n        <text x={ 0 } y={ 0 } dx={ small ? '1.4em' : '-0.3em' } dy={ 3 }>{ fmt(d[rAccess]) }</text>\n      </g>\n    )\n  } else {\n    return null;\n  }\n};\n\nexport { IdxBarChart, QBarChart };\n","import React from 'react';\nimport { Form, Col, Row } from 'react-bootstrap';\nimport * as _ from 'lodash';\nimport { FormContext, useFormContext } from 'react-hook-form';\nimport { cleanIdxLabels, cleanHdrLabels } from './utils.js';\n\nimport '../styles/Controls.css';\n\nconst ScoreMainControls = (props) => {\n  const { register } = useFormContext();\n\n  return (\n    <div className='Controls'>\n      <Form>\n        <Row>\n          <Col>\n            <Form.Group controlId='v1Select'>\n              <Form.Label>Index values by group</Form.Label>\n              <Form.Control as='select' name='v1Select' className='custom-select' ref={ register } onChange={ props.onChange }>\n                { props.variables.map((d, i) => (\n                  <option key={ d + 'v1opt' } value={ d }>{ cleanIdxLabels(d) }</option>\n                )) }\n              </Form.Control>\n            </Form.Group>\n            <Form.Group controlId='regSelect'>\n              <Form.Label>Filter region</Form.Label>\n              <Form.Control as='select' name='regSelect' className='custom-select' ref={ register } onChange={ props.onChange }>\n                { props.regions.map((d, i) => (\n                  <option key={ d + 'regopt' } value={ d }>{ d }</option>\n                )) }\n              </Form.Control>\n            </Form.Group>\n          </Col>\n        </Row>\n      </Form>\n    </div>\n  );\n};\n\nconst ScoreCompareControls = (props) => {\n  const { register } = useFormContext();\n  const yvariables = _.drop(props.variables, 1).concat(_.take(props.variables, 1));\n\n  return (\n    <div className='Controls'>\n      <Form>\n        <Row>\n          <Col>\n            <Form.Group controlId='v2Select'>\n              <Form.Label>Compare { cleanHdrLabels(props.v1, false) } to a second index</Form.Label>\n              <Form.Control as='select' name='v2Select' className='custom-select' ref={ register }  onChange={ props.onChange }>\n                { yvariables.map((d, i) => (\n                  <option key={ d + 'v2opt' } value={ d }>{ cleanIdxLabels(d) }</option>\n                )) }\n              </Form.Control>\n            </Form.Group>\n          </Col>\n        </Row>\n      </Form>\n    </div>\n  );\n};\n\nconst SparkControls = (props) => (\n  <div className='Controls SparkControls float-right'>\n    <Form.Check\n      inline\n      custom\n      // default\n      checked={ props.checked }\n      id='show-spark-bars'\n      name='sparkToggle'\n      onChange={ props.onChange }\n      label='Show data bars'\n    />\n  </div>\n  );\n\nconst SurveyMainControls = (props) => {\n  const { register } = useFormContext();\n\n  return (\n    <div className='Controls'>\n      <Form>\n        <Row>\n          <Col>\n            <Form.Group controlId='regSelect'>\n              <Form.Label>Filter region</Form.Label>\n              <Form.Control as='select' name='regSelect' className='custom-select' ref={ register } onChange={ props.onChange }>\n                { props.regions.map((d, i) => (\n                  <option key={ d + 'regopt' } value={ d }>{ d }</option>\n                )) }\n              </Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='topicSelect'>\n              <Form.Label>Select a topic</Form.Label>\n              <Form.Control as='select' name='topicSelect' className='custom-select' ref={ register } onChange={ props.onChange }>\n                { props.topics.map((d, i) => (\n                  <option key={ d + 'topicopt' } value={ d }>{ cleanHdrLabels(d) }</option>\n                )) }\n              </Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='qSelect'>\n              <Form.Label>Select survey question</Form.Label>\n              <Form.Control as='select' name='qSelect' className='custom-select' ref={ register } onChange={ props.onChange }>\n                { props.topicMeta.map((d, i) => (\n                  <option key={ d.question + 'qopt' } value={ d.question }>{ d.display }</option>\n                )) }\n              </Form.Control>\n            </Form.Group>\n          </Col>\n        </Row>\n      </Form>\n    </div>\n  );\n};\n\nconst SurveyProfileControls = (props) => {\n  const { register } = useFormContext();\n  const categories = Object.keys(props.groups);\n\n  return (\n    <div className='Controls'>\n      <Form>\n        <Row>\n          <Col>\n            <Form.Group controlId='grpSelect'>\n              <Form.Label>Select a group</Form.Label>\n              <Form.Control as='select' name='grpSelect' className='custom-select' ref={ register } onChange={ props.onChange }>\n                {\n                  categories.map((d, i) => (\n                    <optgroup label={ d } key={ d + 'optgrp' }>\n                      { props.groups[d].map((e, j) => (\n                        <option value={ e } key={ j + 'grp' }>{ e }</option>\n                      )) }\n                    </optgroup>\n                  ))\n                }\n            </Form.Control>\n            </Form.Group>\n          </Col>\n        </Row>\n      </Form>\n    </div>\n  )\n};\n\n\n\n// export default Controls;\nexport { ScoreMainControls, ScoreCompareControls, SurveyMainControls, SurveyProfileControls, SparkControls };\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst Intro = (props) => (\n  <div className='Intro'>\n    <Alert variant='light' className='border border-color-info'>\n      Deserunt excepteur quis nulla aliquip fugiat amet velit irure proident aliqua aute. Irure elit laboris duis minim nostrud quis eiusmod. Consequat cillum occaecat do laborum enim cupidatat aute. Ex cillum nulla aute amet culpa minim et. Proident do dolor ullamco et pariatur excepteur laborum. Veniam nisi voluptate aliquip nulla excepteur commodo cupidatat consectetur nostrud officia. Non minim magna adipisicing officia exercitation tempor incididunt.\n    </Alert>\n  </div>\n);\n\nexport default Intro;\n","import React from 'react';\nimport { Table } from 'react-bootstrap';\nimport BootstrapTable from 'react-bootstrap-table-next';\n\nimport DataContext from './DataContext';\nimport { cleanHdrLabels, tblColumns, fmt, getMaxes } from './utils.js';\n\nimport '../styles/DataTable.css';\n\nconst DataTable = ({ v1, meta, spark, sort }) => {\n  const data = React.useContext(DataContext);\n  const isCommunity = v1 === 'community';\n  const mightOmit = isCommunity ? ['group'] : ['name'];\n  const omit = ['level', 'category', 'region', ...mightOmit];\n\n  // colnames of what will be displayed\n  const colNames = tblColumns(data[0], omit);\n  const maxes = getMaxes(data);\n\n  const cols = colNames.map((col, i) => {\n    let formatter;\n    const isNumber = meta[col] !== undefined;\n    if (isNumber) {\n      if (spark) {\n        formatter = makeSpark(meta[col], col, maxes);\n      } else {\n        formatter = fmt(meta[col]);\n      }\n    } else {\n      formatter = null;\n    }\n    return {\n      dataField: col,\n      text: cleanHdrLabels(col),\n      sort: sort,\n      type: (isNumber ? 'number' : 'string'),\n      classes: (!isNumber ? 'position-sticky' : null),\n      headerClasses: (!isNumber ? 'position-sticky' : null),\n      formatter: formatter,\n      formatExtraData: spark,\n      align: (spark || !isNumber ? 'left' : 'right')\n    };\n  });\n\n  return (\n    <div className='DataTable' id='datatable'>\n      <BootstrapTable\n        bootstrap4\n        hover\n        condensed\n        classes='table-responsive-xl'\n        headerClasses='thead-light'\n        bordered={ true }\n        keyField={ isCommunity ? 'name' : 'group' }\n        data={ data }\n        columns={ cols }\n      />\n    </div>\n  )\n};\n\n\nconst makeSpark = (format, col, maxes) => (cell, row, rowIndex, extraData) => {\n  const max = maxes[col];\n  const scaled = (cell / max) * 100;\n  const w = cell ? (scaled + '%') : 0;\n  return (\n    <div className='spark' style={{ width: w }}>\n      <span className='sparktext'>{ fmt(format)(cell) }</span>\n    </div>\n  )\n};\n\nexport default DataTable;\n","import React, { useState } from 'react';\n\nimport { Container, Row, Col, Form } from 'react-bootstrap';\nimport useForm, { FormContext, useFormContext } from 'react-hook-form';\n\nimport { ChartStage, TableStage } from './Stage';\nimport Scatterplot from './Scatterplot';\nimport { IdxBarChart } from './BarChart';\nimport { ScoreMainControls, ScoreCompareControls, SparkControls } from './Controls';\nimport Intro from './Intro';\nimport DataTable from './DataTable';\nimport DataContext from './DataContext';\nimport { getVariables, getSubVariables, getRegions, filterForScatter, filterForBar, cleanIdxLabels } from '../components/utils.js';\n\nimport '../styles/Dash.css';\n\n\nconst Scores = ({ index_data, index_comps, meta }) => {\n  const formMethods = useForm({\n    mode: 'onChange'\n  });\n  const variables = getVariables(index_data);\n  const initValues = {\n    v1: variables[0],\n    v2: variables[1],\n    region: 'Connecticut'\n  };\n\n// state\n  const [v1, setV1] = useState(initValues.v1);\n  const [v2, setV2] = useState(initValues.v2);\n  const [region, setRegion] = useState(initValues.region);\n  const [spark, setSpark] = useState(true);\n\n  // const [formValues, setFormValues] = useState(initValues);\n\n// event handling\n  const onFormChange = (data, e) => {\n    const { v1Select, v2Select, regSelect } = formMethods.getValues();\n    setV1(v1Select);\n    setV2(v2Select);\n    setRegion(regSelect);\n  };\n  const onToggleChange = (e) => {\n    setSpark(e.target.checked);\n  };\n\n  return (\n    <div className='Dash Scores'>\n      <Container>\n        <header className=\"App-header\">\n          <h1>DataHaven Index scores</h1>\n        </header>\n\n        <Row><Intro page='scores' /></Row>\n\n        <header className='App-header'>\n          <h2>How do groups and towns compare?</h2>\n        </header>\n        <Row className='align-items-end'>\n          <Col md={ 6 }>\n            <FormContext { ...formMethods }>\n              <ScoreMainControls\n                onChange={ formMethods.handleSubmit(onFormChange) }\n                variables={ variables }\n                regions={ getRegions(index_data) }\n                v1={ v1 }\n              />\n            </FormContext>\n\n            { /* bar chart */ }\n            <DataContext.Provider value={ filterForBar(index_data, region, v1) }>\n              <ChartStage\n                vs={ [v1, v2] }\n                region={ region }\n                lbls={ [cleanIdxLabels(v1)] }\n                type='bar'\n                dataBy={ v1 === 'community' ? 'location' : 'group' }\n                axisLbl={ 'Scores 0 (worse) through 1,000 (better)' }\n              >\n                <IdxBarChart vs={ [v1] } />\n              </ChartStage>\n            </DataContext.Provider>\n          </Col>\n\n          <Col md={ 6 } className='second'>\n            <FormContext { ...formMethods }>\n              <ScoreCompareControls\n                onChange={ formMethods.handleSubmit(onFormChange) }\n                variables={ variables }\n                v1={ v1 }\n                v2={ v2 }\n              />\n            </FormContext>\n\n            { /* scatterplot */ }\n            <DataContext.Provider value={ filterForScatter(index_data, region) }>\n              <ChartStage\n                vs={ [v1, v2] }\n                region={ region }\n                lbls={ [v1, v2].map((d) => cleanIdxLabels(d)) }\n                type='scatter'\n                axisLbl={ 'Scores 0 (worse) through 1,000 (better)' }\n              >\n                <Scatterplot vs={ [v1, v2] } />\n              </ChartStage>\n            </DataContext.Provider>\n          </Col>\n        </Row>\n\n        <hr />\n\n        <header className='App-header'>\n          <h2>What are these scores made of?</h2>\n        </header>\n        <Row>\n          <Col>\n            <DataContext.Provider value={ filterForBar(index_comps[v1], region, v1) }>\n              <TableStage\n                v1={ v1 }\n                region={ region }\n                type='table'\n                lbls={ [cleanIdxLabels(v1)] }\n                dataBy={ v1 === 'community' ? 'location' : 'group' }\n                hdrComponents={ <SparkControls checked={ spark } onChange={ onToggleChange } /> }\n              >\n                <DataTable v1={ v1 } meta={ meta[v1] }\n                  spark={ spark }\n                  sort={ true }\n                />\n              </TableStage>\n            </DataContext.Provider>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default Scores;\n","import React from 'react';\nimport { Table, Card, ListGroup } from 'react-bootstrap';\nimport BootstrapTable from 'react-bootstrap-table-next';\n\nimport DataContext from './DataContext';\nimport { cleanHdrLabels, fmt } from './utils.js';\n\nimport '../styles/Profile.css';\n\nconst Profile = (props) => {\n  const data = React.useContext(DataContext);\n\n  const columns = [{\n    dataField: 'display',\n    text: 'Survey question',\n    sort: false,\n    headerStyle: () => ({ width: '80%' })\n  }, {\n    dataField: 'value',\n    text: 'Value',\n    sort: false,\n    align: 'right',\n    formatter: fmt('0.0%'),\n    classes: 'text-right',\n    headerStyle: () => ({ width: '20%' })\n  }];\n\n  // console.log(data);\n\n  return (\n    <div className='Profile DataTable' id='profile'>\n      <BootstrapTable\n        bootstrap4\n        classes='table-responsive-sm'\n        headerClasses='thead-light'\n        bordered={ true }\n        keyField={ 'display' }\n        data={ data }\n        columns={ columns }\n      />\n    </div>\n  )\n};\n\nexport default Profile;\n","import React, { useState } from 'react';\n\nimport { Container, Row, Col } from 'react-bootstrap';\nimport useForm, { FormContext, useFormContext } from 'react-hook-form';\n\nimport { ChartStage, TableStage } from './Stage';\nimport Scatterplot from './Scatterplot';\nimport { QBarChart } from './BarChart';\nimport { SurveyMainControls, SurveyProfileControls } from './Controls';\nimport Intro from './Intro';\nimport Profile from './Profile';\nimport DataContext from './DataContext';\nimport { cleanKeys, cleanHdrLabels, getQMeta, getProfile, getNestedGrps, fmt } from '../components/utils.js';\n\nconst Survey = ({ cws_data, meta }) => {\n  const formMethods = useForm({\n    mode: 'onChange'\n  });\n  const topics = Object.keys(meta);\n  const regions = Object.keys(cws_data);\n\n  const initValues = {\n    region: regions[0],\n    topic: topics[0],\n    question: meta[topics[0]][0].question,\n    group: 'Total'\n  };\n\n// state\n  const [region, setRegion] = useState(initValues.region);\n  const [topic, setTopic] = useState(initValues.topic);\n  const [question, setQuestion] = useState(initValues.question);\n  const [group, setGroup] = useState(initValues.group);\n\n// event handling\n  const onChange = (data, e) => {\n    const { regSelect, topicSelect, qSelect, grpSelect } = formMethods.getValues();\n\n    // don't like setting state like this but oh well\n    const q0 = meta[topicSelect][0].question;\n    const g0 = initValues.group;\n    if (e.target.name === 'topicSelect' || e.target.name === 'regSelect') {\n      formMethods.setValue('qSelect', q0);\n      formMethods.setValue('grpSelect', g0);\n      setQuestion(q0);\n      setGroup(g0);\n    } else {\n      setQuestion(qSelect);\n      setGroup(grpSelect);\n    }\n    setRegion(regSelect);\n    setTopic(topicSelect);\n\n  };\n\n  const qDisplay = getQMeta(meta[topic], question) || '';\n  const groups = getNestedGrps(cws_data[region][topic]);\n  const profileData = getProfile(cws_data[region][topic], group, meta[topic]);\n\n  return (\n    <div className='Dash Survey'>\n      <Container>\n        <header className=\"App-header\">\n          <h1>2018 Community Wellbeing Survey</h1>\n        </header>\n\n\n        <Row><Intro page='survey' /></Row>\n\n        <header className='App-header'>\n          {/* <h2>How do groups and towns compare?</h2> */}\n        </header>\n        <Row className=''>\n          <Col md={ 6 }>\n            <FormContext { ...formMethods }>\n              <SurveyMainControls\n                onChange={ formMethods.handleSubmit(onChange) }\n                topics={ topics }\n                regions={ regions }\n                topicMeta={ meta[topic] }\n              />\n            </FormContext>\n          </Col>\n          <Col md={ 6 }>\n\n          </Col>\n        </Row>\n\n        <Row>\n          <Col md={ 6 }>\n            { /* bar chart */ }\n            <DataContext.Provider value={ cws_data[region][topic] }>\n              <ChartStage\n                vs={ [question] }\n                region={ region }\n                type='bar'\n                lbls={ [qDisplay.display] }\n                dataBy={ 'group' }\n                axisLbl={ 'Share of adults' }\n              >\n                <QBarChart vs={ [question] } numFmt={ fmt('0.0%') } />\n              </ChartStage>\n            </DataContext.Provider>\n          </Col>\n\n          <Col md={ 6 } className='second'>\n            <FormContext { ...formMethods }>\n              <SurveyProfileControls\n                onChange={ formMethods.handleSubmit(onChange) }\n                groups={ groups }\n                topicMeta={ meta[topic] }\n              />\n            </FormContext>\n            { /* profile */ }\n            <DataContext.Provider value={ profileData }>\n              <TableStage\n                style='ProfileStage'\n                group={ group }\n                type='profile'\n                lbls={ [cleanHdrLabels(topic)] }\n                axisLbl={ 'Share of adults' }\n              >\n                <Profile topic={ topic } meta={ meta[topic] } />\n              </TableStage>\n            </DataContext.Provider>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default Survey;\n","import React from 'react';\nimport { Row, Col, Container, Alert } from 'react-bootstrap';\nimport '../styles/Footer.css';\n\nconst Footer = (props) => {\n  const dl = `https://query.data.world/s/${ props.urls.slug }`;\n  return (\n    <div className='Footer'>\n      <Container>\n        <hr />\n        <Row>\n          <Col>\n            <Alert variant='light' className='border'>\n              <Alert.Heading className='text-primary'>Download this data</Alert.Heading>\n              <p>\n                {`Download ${ props.display.toLowerCase() } data`} <a href={ dl }>here</a>, filter and analyze data online on <a href={ props.dw }>data.world</a> (requires free sign-up), or download/clone from <a href={ props.urls.github }>GitHub</a> (advanced users).\n              </p>\n              \n              <p>For source and methodology information, see the <a href='https://ctdatahaven.org/reports'>2019 DataHaven Community Index reports.</a></p>\n            </Alert>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useContext, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect, useLocation } from 'react-router-dom';\n\nimport './App.css';\n\nimport Header from './components/Header';\nimport Scores from './components/Scores';\nimport Survey from './components/Survey';\nimport Footer from './components/Footer';\n\n// to scores\nimport index_data from './data/index_scatterplot.json';\nimport index_comps from './data/index_components.json';\nimport score_meta from './data/score_meta.json';\n// to survey\nimport cws_data from './data/cws_indicators.json';\nimport cws_meta from './data/cws_meta.json';\nimport dl_meta from './data/downloads.json';\n\n// const downloads = {\n//   scores: 'index_scores_2019',\n//   survey: 'cws_survey_2018'\n// };\nconst hdrs = {\n  scores: 'Index scores',\n  survey: 'Wellbeing indicators'\n};\n\nconst useDownload = () => {\n  const location = useLocation().pathname.substring(1);\n  return {\n    location: location,\n    urls: dl_meta[location],\n    dw: 'https://data.world/camille86/cws2018',\n    display: hdrs[location]\n  };\n};\n\nconst App = () => {\n  const download = useDownload();\n  return (\n    <div className=\"App\">\n      <Header hdrs={ hdrs } />\n\n      <Switch>\n        <Route exact path='/' render={ () => <Redirect to='/scores' /> } />\n        <Route exact path='/scores'>\n          <Scores\n            index_data={ index_data }\n            index_comps={ index_comps }\n            meta={ score_meta }\n          />\n        </Route>\n        <Route exact path='/survey'>\n          <Survey\n            cws_data={ cws_data }\n            meta={ cws_meta }\n          />\n        </Route>\n\n      </Switch>\n      { download.location.length ? <Footer { ...download } /> : null }\n\n    </div>\n  );\n};\n\n//////////////////\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Switch, Route, useLocation } from 'react-router-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/bootstrap.min.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport './index.css';\n\nReactDOM.render(\n  <Router basename='/indexviz2019'>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}