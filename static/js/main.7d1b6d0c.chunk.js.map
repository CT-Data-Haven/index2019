{"version":3,"sources":["components/utils.js","components/Stage.jsx","components/Legend.jsx","components/Tip.jsx","components/Scatterplot.jsx","components/BarChart.jsx","components/Controls.jsx","components/NoteContext.js","components/Intro.jsx","components/DataTable.jsx","components/Scores.jsx","components/Profile.jsx","components/Survey.jsx","components/Choropleth.jsx","components/Risks.jsx","components/Chime.jsx","components/Header.jsx","components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["_filterByKey","data","key","value","first","_","cleanHdrLabels","lbl","hdr","cleanIdxLabels","fmt","fmtStr","d","undefined","format","getProfile","filterBy","filterVal","meta","profData","variable","compareCt","level","length","wide","m","val","indicator","display","filterForScatter","filterForBar","region","out","getMapData","vals","map","name","keyBy","getQMeta","getRegions","filter","uniq","RegExp","test","filterByString","string","matchKeys","keys","indexOf","compact","createScales","pals","rev","pal","n","groups","reverse","colorscale","scaleOrdinal","sizescale","makeChoroScale","scheme","nBrks","mapValues","values","sort","brks","ckmeans","slice","scaleThreshold","domain","range","makeTooltip","Stage","props","type","versus","colon","comma","lblBy","lblBy2","className","Card","Header","as","hdrComponents","Body","flush","children","Footer","axisLbl","legendTypes","threshold","LegendThreshold","ordinal","LegendOrdinal","Legend","LegendByType","labelFormat","label","style","scale","Tip","lbls","tipLblr","vs","content","i","numFmt","hover","x","y","color","cx","cy","r","fillOpacity","strokeOpacity","stroke","fill","Scatterplot","xAccess","yAccess","Vivid","xRange","yRange","points","margin","top","right","bottom","left","size","xAccessor","yAccessor","pointStyle","opacity","xExtent","yExtent","axes","orient","baseline","tickFormat","responsiveWidth","hoverAnnotation","svgAnnotationRules","screenCoordinates","tooltipContent","match","join","substring","titleLabel","BarChart","colorVar","labels","rAccess","oAccess","oAccessor","rAccessor","oPadding","oLabel","projection","strokeWidth","annotations","lblRules","pieceHoverAnnotation","IdxBarChart","QBarChart","coords","isNaN","small","transform","dx","dy","ControlHolder","Form","Row","Col","Ctrl","register","useFormContext","Group","controlId","Label","Control","ref","onChange","NestedCtrl","Object","e","SurveyMainControls","Fragment","regions","topics","GroupControls","ScoreMainControls","variables","ScoreCompareControls","concat","v1","SparkControls","Check","inline","custom","checked","id","RiskMainControls","indicators","ChimeMainControls","ages","NoteContext","React","createContext","noteOpen","handleClose","Intro","Consumer","Alert","variant","dismissible","onClose","Heading","source","intro","escapeHtml","page","href","makeSpark","col","maxes","cell","row","rowIndex","extraData","max","w","width","DataTable","spark","isCommunity","omit","colNames","difference","tblColumns","numberCols","pickBy","c","q","getMaxes","cols","formatter","isNumber","dataField","text","classes","headerClasses","formatExtraData","align","bootstrap4","condensed","bordered","keyField","columns","Scores","index_comps","formMethods","useForm","mode","flatMap","pull","getVariables","initValues","v2","useState","setV1","setV2","setRegion","setSpark","onFormChange","getValues","_v1","_v2","_region","Container","md","handleSubmit","grouping","dataBy","target","Profile","headerStyle","Survey","topic","group","setTopic","setIndicator","setGroup","_topic","_indicator","_group","q0","g0","setValue","qDisplay","groupBy","getNestedGrps","profileData","denom","Choropleth","getStyle","feature","properties","fillColor","weight","handleFeature","layer","on","featureHilite","featureUnhilite","bindTooltip","direction","offset","setStyle","shp","bbox","geo","b","topojson","getBounds","this","shape","objects","town","Map","bounds","zoomSnap","zoomDelta","scrollWheelZoom","TileLayer","url","attribution","subdomains","minZoom","maxZoom","ext","GeoJSON","interactive","onEachFeature","onClick","Component","Risks","towns","setTown","mapData","palette","Chime","age","setAge","filtered","nestedProf","k","ageData","toArray","getGrpProfile","_age","toLowerCase","Navbar","expand","bg","Toggle","aria-controls","Collapse","Nav","hdrs","h","to","location","Link","title","dl","urls","slug","dw","github","survey","risks","scores","chime","App","obj","download","useLocation","pathname","dl_meta","useDownload","setNoteOpen","v","exact","path","render","Provider","cws_data","cws_meta","intro_txt","town_data","bytown","omitBy","town_topo","index_data","score_meta","chime_data","chime_meta","Boolean","window","hostname","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7d1b6d0c.chunk.js","sourcesContent":["import * as _ from 'lodash';\nimport { scaleOrdinal, scaleThreshold } from 'd3-scale';\nimport wordwrap from 'wordwrapjs';\nimport { format } from 'd3-format';\nimport * as topojson from 'topojson-client';\nimport { ckmeans } from 'simple-statistics';\n\n/////////////// general utilities\nconst _filterByKey = (data, key, value, first = true) => (\n  first ? _.find(data, { [key]: value }) : _.filter(data, { [key]: value })\n);\n\n/////////////// strings\nconst cleanHdrLabels = (lbl, first = true) => {\n  const hdr = _.replace(lbl, /_/g, ' ');\n  return first ? _.upperFirst(hdr) : _.startCase(hdr);\n};\n\nconst cleanIdxLabels = (lbl) => (\n  cleanHdrLabels(lbl, false) + ' Index'\n);\n\nconst cleanKeys = (obj, first = true) => (\n  _.chain(obj)\n    .keys()\n    .map((d) => cleanHdrLabels(d, first))\n    .value()\n);\n\nconst titleLabel = (lbl, n = 2) => (\n  _.upperFirst(lbl.substring(n))\n);\n\nconst wrapTspan = (txt) => (\n  wordwrap.lines(txt, { width: 15 })\n);\n\nconst compileHeader = (type) => {\n  const headers = {\n    versus: '<%= lbls[0] %> vs. <%= lbls[1] %>',\n    colon: '<%= lbl %>: <%= dataBy %>, <%= grouping %>',\n    comma: '<%= lbl %>, <%= grouping %>',\n    lblBy: '<%= lbl %> by <%= dataBy %>',\n    lblBy2: '<%= lbl %> by <%= dataBy %>, <%= grouping %>'\n  };\n  return _.template(headers[type]);\n};\n\nconst fmt = (fmtStr) => (\n  (d) => (d === null || d === undefined ? 'N/A' : format(fmtStr)(d))\n);\n\n/////////////// data munging\n\nconst getProfile = (data, filterBy, filterVal, meta, omit = null, variable = 'indicator', compareCt = false) => {\n  let profData;\n  if (compareCt) {\n    profData = _.filter(data, (d) => d[filterBy] === filterVal || d.level === 'state');\n  } else {\n    profData = _filterByKey(data, filterBy, filterVal, true);\n  }\n  if (profData.length === 0) {\n    return [];\n  } else {\n    const wide = _.map(meta, (m) => {\n    const format = m.format || '0.0%';\n    const val = fmt(format)(profData[m[variable]]);\n    return {\n      indicator: m.display,\n      value: val\n    };\n  });\n  return wide;\n  }\n  // const profData = _filterByKey(data, filterBy, filterVal, true);\n\n};\n\nconst getGrpProfile = (data, filterBy, filterVal, meta, indicator, omit = null) => {\n  const filtered = _.mapValues(data, (d) => _filterByKey(d, filterBy, filterVal, true));\n\n  const nestedProf = _.chain(meta)\n    .mapValues((m) => _filterByKey(m, 'indicator', indicator, true))\n    .mapValues((m, age) => {\n      const k = m.indicator;\n      const ageData = filtered[age] || { [filterBy]: filterVal, [k]: undefined };\n      const format = m.format || ',d';\n      const val = fmt(format)(ageData[k]);\n\n      return {\n        indicator: age,\n        value: val\n      };\n    })\n    .toArray()\n    .value();\n  return nestedProf;\n};\n\nconst filterForScatter = (data) => (\n  _filterByKey(data, 'category', 'Total', false)\n);\n\nconst filterForBar = (data, region, variable) => {\n  let out;\n  if (variable === 'community') {\n    if (region === 'Connecticut') {\n      out = _.filter(data, (d) => _.includes(['1_state', '2_region'], d.level));\n    } else {\n      out =  _.filter(data, (d) => _.includes([region, 'Connecticut'], d.region));\n    }\n    out = _.filter(out, { 'category': 'Total' });\n  } else {\n    out = _.filter(data, { 'name': region });\n  }\n  return out;\n};\n\nconst getMapData = (data, indicator) => {\n  let vals;\n  if (data[0].level) {\n    vals = _filterByKey(data, 'level', 'town', false);\n  } else {\n    vals = data;\n  }\n  return (\n    _.chain(vals)\n      .map((d) => ({\n        name: d.name,\n        value: d[indicator]\n      }))\n      .keyBy('name')\n      .value()\n  );\n}\n\nconst filterTownLvl = (data) => (\n  _.chain(data)\n    .mapValues((v, k) => _.filter(v, (d) => d.bytown))\n    .omitBy(_.isEmpty)\n    .value()\n);\n\n/////////////// metadata\nconst getVariables = (data) => (\n  _.chain(data)\n    .flatMap(_.keys)\n    .uniq()\n    .pull('name', 'category', 'group', 'level', 'region')\n    .sort()\n    .reverse()\n    .value()\n);\n\nconst getSubVariables = (variables, v1) => (\n  _.without(variables, v1)\n);\n\nconst getComparables = (variables) => (\n  _.drop(variables, 1).concat(_.take(variables, 1))\n);\n\nconst getQMeta = (meta, indicator) => (\n  _filterByKey(meta, 'indicator', indicator, true)\n);\n\nconst getRegions = (data) => (\n  _.chain(data)\n    .filter((d) => _.includes(['1_state', '2_region'], d.level))\n    .map('name')\n    .uniq()\n    // .filter((d) => d.search(/(Inner|Outer) Ring/) === -1)\n    .filter((d) => !RegExp('(Inner|Outer) Ring').test(d))\n    .value()\n);\n\nconst getNestedGrps = (data) => (\n  _.chain(data)\n    .groupBy('category')\n    .mapValues((d) => _.map(d, 'group'))\n    .value()\n);\n\nconst tblColumns = (row, omit) => (\n  _.chain(row)\n    .keys()\n    .difference(omit)\n    .value()\n);\n\nconst objToArray = (obj, key, value) => {\n  return _.chain(obj)\n    .mapValues((v, k) => ({ [key]: k, [value]: v }))\n    .values()\n    .value();\n};\n\nconst filterByString = (meta, string) => {\n  const matchKeys = _.chain(meta)\n    .keys()\n    .map((d) => d.indexOf(string) >= 0 ? d : false)\n    .compact()\n    .value();\n  return _.pick(meta, matchKeys);\n};\n\n\n\n/////////////// viz\nconst createScales = (data, pals, variable, rev) => {\n  const n = _.size(pals);\n  const groups = _.chain(data)\n    .map(variable)\n    .uniq()\n    .value();\n  let pal;\n  if (rev) {\n    pal = _.takeRight(pals[n], groups.length).reverse();\n  } else {\n    pal = _.take(pals[n], groups.length);\n  }\n  // let pal = rev ? _.takeRight(pals[n], groups.length) : _.take(pals[n], groups.length);\n  const color = scaleOrdinal(groups, pal);\n  const rad = scaleOrdinal(groups, [8, 7, 5, 3, 3, 3]);\n  return { colorscale: color, sizescale: rad };\n};\n\nconst getMaxes = (data) => {\n  // const numberCols = _.pickBy(data[0], _.isNumber);\n  const numberCols = _.chain(data[0])\n    .pickBy(_.isNumber)\n    .keys()\n    .value();\n  return _.chain(numberCols)\n    .map((c) => ({\n      q: c,\n      max: _.chain(data).map(c).max().value()\n    }))\n    .keyBy('q')\n    .mapValues('max')\n    .value();\n};\n\nconst makeChoroScale = (data, scheme, nBrks) => {\n  const vals = _.chain(data)\n    .mapValues('value')\n    .values()\n    .compact()\n    .sort()\n    .value();\n  if (!vals.length) {\n    return scaleThreshold().domain([0, 1]).range(['#ccc']);\n  } else {\n    const brks = ckmeans(vals, nBrks).map((d) => d[0]).slice(1);\n\n    return scaleThreshold()\n      .domain(brks)\n      .range(scheme[nBrks]);\n  }\n};\n\nconst makeTooltip = (name, value, format) => (\n  `${ name }: ${ fmt(format)(value) }`\n);\n\n/////////////////// geography\nconst getBounds = (geo) => {\n  const b = topojson.bbox(geo);\n  return [[ b[1], b[0] ], [ b[3], b[2] ]];\n};\n\nconst makeGeoJson = (shp) => (\n  topojson.feature(shp, shp.objects.town)\n);\n\n\nexport{\n\tcleanIdxLabels,\n\tcompileHeader,\n\tcreateScales,\n\tfilterForScatter,\n\tgetRegions,\n\tgetVariables,\n  cleanHdrLabels,\n  cleanKeys,\n  filterByString,\n  filterForBar,\n  filterTownLvl,\n  fmt,\n  getBounds,\n  getComparables,\n  getGrpProfile,\n  getMapData,\n  getMaxes,\n  getNestedGrps,\n  getProfile,\n  getQMeta,\n  getSubVariables,\n  makeChoroScale,\n  makeGeoJson,\n  makeTooltip,\n  objToArray,\n  tblColumns,\n  titleLabel,\n  wrapTspan\n};\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport '../styles/Stage.css';\nimport { cleanHdrLabels, compileHeader } from './utils.js';\n\nconst Stage = (props) => {\n  const hdr = compileHeader(props.type)({ ...props });\n\n  return (\n    <div className='Stage'>\n      <Card>\n        <Card.Header as='h3'>\n          { hdr }\n          { props.hdrComponents || null }\n        </Card.Header>\n        <Card.Body className={ props.flush && 'p-0' }>\n          { props.children }\n        </Card.Body>\n        <Card.Footer className='text-right axis-title'>{ props.axisLbl || null }</Card.Footer>\n      </Card>\n    </div>\n  );\n};\n\nexport default Stage;\n","import React from 'react';\nimport { LegendThreshold, LegendOrdinal } from '@vx/legend';\nimport { fmt } from './utils.js';\n\nimport '../styles/Legend.css';\n\nconst legendTypes = {\n  threshold: LegendThreshold,\n  ordinal: LegendOrdinal\n};\n\nconst Legend = (props) => {\n  const LegendByType = legendTypes[props.type];\n  const format = props.labelFormat || ((label) => label ? fmt(props.format)(label) : '');\n  return (\n    <div className='Legend' style={ props.style }>\n      <LegendByType\n        labelFormat={ format }\n        scale={ props.scale }\n      />\n    </div>\n  );\n};\n\n\n\nexport default Legend;\n","import React from 'react';\n\nimport '../styles/Tooltip.css';\n\nconst Tip = (props) => {\n  const lbls = props.tipLblr ? props.vs.map(props.tipLblr) : props.vs;\n  const content = props.vs.map((d, i) => (\n    <div key={ `tip-div${ i }` }>\n      <p key={ `tip-p${ i }` }><span key={ `tip${ i }` }>{ lbls[i].length ? `${ lbls[i] }: ` : '' } </span>{ props.numFmt(props.data[d]) }</p>\n    </div>\n));\n\n  return (\n    <div className='Tooltip'>\n      <h5>{ props.data[props.hdr] }</h5>\n      { content }\n    </div>\n  );\n};\n\nexport default Tip;\n","import React from 'react';\nimport { ResponsiveXYFrame } from 'semiotic';\nimport { Vivid } from 'cartocolor';\nimport * as _ from 'lodash';\n\nimport Legend from './Legend';\nimport Tip from './Tip';\nimport '../styles/Chart.css';\n\nimport { cleanIdxLabels, createScales, titleLabel } from './utils.js';\n\nconst Scatterplot = (props) => {\n  const [xAccess, yAccess] = props.vs;\n  const { colorscale, sizescale } = createScales(props.data, Vivid, 'level', false);\n\n  const xRange = [_.min(_.map(props.data, xAccess)), _.max(_.map(props.data, xAccess))];\n  const yRange = [_.min(_.map(props.data, yAccess)), _.max(_.map(props.data, yAccess))];\n  const pad = 0.05;\n  const margin = { top: 10, right: 10, bottom: 60, left: 80 };\n  const fmt = props.numFmt || ((d) => d);\n\n  return (\n    <div className='Chart Scatterplot'>\n      <ResponsiveXYFrame\n        points={ props.data }\n        margin={ margin }\n        size={ [600, 500] }\n        xAccessor={ xAccess }\n        yAccessor={ yAccess }\n        pointStyle={ (d) => ({\n          fill: colorscale(d.level),\n          stroke: colorscale(d.level),\n          r: sizescale(d.level),\n          opacity: 0.8\n        }) }\n        xExtent={ [xRange[0] * (1 - pad), xRange[1] * (1 + pad)] }\n        yExtent={ [yRange[0] * (1 - pad), yRange[1] * (1 + pad)] }\n        axes={[\n          { orient: 'left', label: cleanIdxLabels(yAccess), baseline: 'under', tickFormat: fmt },\n          { orient: 'bottom', label: cleanIdxLabels(xAccess), baseline: 'under', tickFormat: fmt }\n        ]}\n        responsiveWidth={ true }\n        // foregroundGraphics={ <Legend color={ colorscale } size={ sizescale } margin={ margin } /> }\n        hoverAnnotation={ [(d) => ({\n          type: 'frame-hover',\n          color: colorscale(d.level)\n        })] }\n        svgAnnotationRules={ ({ screenCoordinates, d }) => (d && d.type === 'frame-hover') ? hover(d, screenCoordinates[0], screenCoordinates[1], colorscale) : null }\n        tooltipContent={ (d) => (\n          <Tip data={ d.data } type='scatter'\n            vs={ props.vs }\n            hdr='name'\n            tipLblr={ (d) => cleanIdxLabels(d).match(/[A-Z]/g).join('') }\n            numFmt={ fmt }\n          />\n        ) }\n      />\n      <Legend\n        type='ordinal'\n        scale={ colorscale }\n        labelFormat={ (d) => titleLabel(d) }\n        style={{\n          right: '4px',\n          bottom: '45px'\n        }}\n      />\n    </div>\n  )\n};\n\n\nconst hover = (d, x, y, color) => (\n  <g key={ `${ hover }-tip` } className='hover-circle'>\n    <circle\n      cx={ x }\n      cy={ y }\n      r={ 12 }\n      fillOpacity={ 1.0 }\n      strokeOpacity={ 1.0 }\n      stroke={ color(d.level) }\n      fill={ color(d.level) }\n    ></circle>\n  </g>\n);\n\nexport default Scatterplot;\n","import React from 'react';\nimport { ResponsiveOrdinalFrame } from 'semiotic';\nimport { Vivid } from 'cartocolor';\n\nimport '../styles/Chart.css';\n\nimport { createScales } from './utils.js';\n\nconst BarChart = (props) => {\n  const { colorscale } = createScales(props.data, Vivid, props.colorVar, props.colorVar === 'category');\n  const fmt = props.numFmt || ((d) => d);\n\n  const labels = props.data.map((d) => ({\n    label: fmt(d[props.rAccess]),\n    [props.oAccess]: d[props.oAccess],\n    [props.rAccess]: d[props.rAccess],\n    type: 'bar-label'\n  }));\n\n  return (\n    <div className='Chart'>\n      <ResponsiveOrdinalFrame\n        data={ props.data }\n        margin={ { top: 10, right: 10, bottom: 10, left: 120 } }\n        oAccessor={ props.oAccess }\n        rAccessor={ props.rAccess }\n        type='bar'\n        oPadding={ 8 }\n        oLabel={ true }\n        projection='horizontal'\n        style={ (d) => ({\n          fill: colorscale(d[props.colorVar]),\n          stroke: 'white',\n          strokeWidth: '1px',\n          opacity: 0.8\n        }) }\n\n        annotations={ labels }\n        svgAnnotationRules={ (d) => lblRules(d, props.oAccess, props.rAccess, fmt) }\n        responsiveWidth={ true }\n        pieceHoverAnnotation={ [{\n          // type: 'desaturation-layer'\n        }, {\n          type: 'highlight',\n          style: (d) => ({\n            opacity: 1.0,\n            stroke: '#444'\n          })\n        }] }\n\n      />\n    </div>\n  );\n};\n\n\nconst IdxBarChart = (props) => {\n  // const rAccess = props.v1;\n  const oAccess = props.rAccess === 'community' ? 'name': 'group';\n  const colorVar = props.rAccess === 'community' ? 'level' : 'category';\n\n  return (\n    <BarChart\n      data={ props.data }\n      oAccess={ oAccess }\n      rAccess={ props.rAccess }\n      colorVar={ colorVar }\n    />\n  );\n};\n\nconst QBarChart = (props) => {\n  return (\n    <BarChart\n      data={ props.data }\n      oAccess={ 'group' }\n      rAccess={ props.rAccess }\n      colorVar={ 'category' }\n      numFmt={ props.numFmt }\n    />\n  );\n};\n\n////////// labels\n\n////// check width of bar; if under some amount, positive dx and dark label\nconst lblRules = ({ screenCoordinates, d }, oAccess, rAccess, fmt) => {\n  if (d.type === 'bar-label') {\n    const missing = isNaN(screenCoordinates[0]);\n    const coords = missing ? [0, screenCoordinates[1]] : screenCoordinates;\n    const small = coords[0] < 30;\n    return (\n      <g\n        className={ `direct-label ${ small ? 'dark' : 'light' }` }\n        key={ `lbl-${ d[oAccess] }` }\n        transform={ `translate(${ coords })` }\n      >\n        <text x={ 0 } y={ 0 } dx={ small ? '1.4em' : '-0.3em' } dy={ 3 }>{ fmt(d[rAccess]) }</text>\n      </g>\n    )\n  } else {\n    return null;\n  }\n};\n\nexport { IdxBarChart, QBarChart };\n","import React, { useContext } from 'react';\nimport { Form, Col, Row } from 'react-bootstrap';\nimport { useFormContext } from 'react-hook-form';\nimport { cleanIdxLabels, cleanHdrLabels, getComparables } from './utils.js';\n\nimport '../styles/Controls.css';\n\n// controls:\n// region\n// topic\n// question\n// group\n// index\n// secondary\n// age group\n// condition\n\nconst ControlHolder = (props) => {\n  return (\n    <div className='Controls'>\n      <Form>\n        <Row>\n          <Col>\n            { props.children }\n          </Col>\n        </Row>\n      </Form>\n    </div>\n  );\n};\n\nconst Ctrl = (props) => {\n  const { register } = useFormContext();\n\n  return (\n    <Form.Group controlId={ props.name }>\n      <Form.Label>{ props.label || 'Select a ' + props.name.substring(1) }</Form.Label>\n      <Form.Control\n        as='select'\n        name={ props.name }\n        className='custom-select'\n        ref={ register }\n        onChange={ props.onChange }\n      >\n        { props.keys.map((d) => (\n          <option key={ (d.value || d) + props.name } value={ d.value || d }>\n            { d.display || cleanHdrLabels(d) }\n          </option>\n        )) }\n      </Form.Control>\n    </Form.Group>\n  );\n};\n\nconst NestedCtrl = (props) => {\n  const { register } = useFormContext();\n\n  return (\n    <Form.Group controlId={ props.name }>\n      <Form.Label>{ props.label || 'Select a ' + props.name.substring(1) }</Form.Label>\n      <Form.Control\n        as='select'\n        name={ props.name }\n        className='custom-select'\n        ref={ register }\n        onChange={ props.onChange }\n      >\n        { Object.keys(props.keys).map((d, i) => (\n          <optgroup label={ d } key={ i + 'optgrp' }>\n            { props.keys[d].map((e) => (\n              <option value={ e } key={ e + 'grp' }>{ e }</option>\n            )) }\n          </optgroup>\n        )) }\n      </Form.Control>\n    </Form.Group>\n  );\n};\n\nconst SurveyMainControls = (props) => (\n  <React.Fragment>\n    { /* region */ }\n    <Ctrl name='_region' keys={ props.regions } onChange={ props.onChange } />\n    { /* topic */ }\n    <Ctrl name='_topic' keys={ props.topics } onChange={ props.onChange } />\n    { /* question */ }\n    <Ctrl name='_indicator'\n      keys={ props.meta.map((d) => ({ value: d.indicator, display: d.display })) }\n      onChange={ props.onChange }\n      label='Select a survey question'\n    />\n  </React.Fragment>\n);\n\nconst GroupControls = (props) => (\n  <NestedCtrl name='_group' keys={ props.groups } onChange={ props.onChange } />\n);\n\nconst ScoreMainControls = (props) => (\n  <React.Fragment>\n    { /* region */ }\n    <Ctrl name='_region' keys={ props.regions } onChange={ props.onChange } />\n    { /* score */ }\n    <Ctrl name='_v1' keys={ props.variables } onChange={ props.onChange } label='Select an Index' />\n  </React.Fragment>\n);\n\nconst ScoreCompareControls = (props) => (\n  <Ctrl name='_v2'\n    keys={ getComparables(props.variables).map((d) => ({\n      value: d, display: cleanIdxLabels(d)\n    })) }\n    onChange={ props.onChange }\n    label={ `Compare ${ cleanHdrLabels(props.v1, false) } to a second index` }\n  />\n);\n\nconst SparkControls = (props) => (\n  <div className='Controls SparkControls float-right'>\n    <Form.Check\n      inline\n      custom\n      checked={ props.checked }\n      id='show-spark-bars'\n      name='sparkToggle'\n      onChange={ props.onChange }\n      label='Show data bars'\n    />\n  </div>\n);\n\nconst RiskMainControls = (props) => (\n  <React.Fragment>\n    { /* topic */ }\n    <Ctrl name='_topic' keys={ props.topics } onChange={ props.onChange } />\n    { /* question */ }\n    <Ctrl name='_indicator'\n      keys={ props.indicators.map((d) => ({ value: d.indicator, display: d.display })) }\n      onChange={ props.onChange }\n      label='Select a survey question'\n    />\n  </React.Fragment>\n);\n\nconst ChimeMainControls = (props) => (\n  <React.Fragment>\n    { /* condition */ }\n    <Ctrl name='_indicator'\n      keys={ props.indicators.map((d) => ({ value: d.indicator, display: d.display })) }\n      onChange={ props.onChange }\n      label='Select a condition'\n    />\n    { /* age */ }\n    <Ctrl name='_age' keys={ props.ages } onChange={ props.onChange } label='Select an age group' />\n  </React.Fragment>\n);\n\nexport { ScoreMainControls, ScoreCompareControls, SurveyMainControls, GroupControls, SparkControls, RiskMainControls, ChimeMainControls, ControlHolder };\n","import React from 'react';\n\nexport const NoteContext = React.createContext({\n  noteOpen: true,\n  handleClose: () => {  }\n});\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport { NoteContext } from './NoteContext.js';\n\nimport '../styles/Intro.css';\n\nconst Intro = (props) => (\n  <NoteContext.Consumer>\n    {\n      ({ noteOpen, handleClose }) => (\n        <div className='Intro'>\n          {noteOpen && <Alert variant='info' dismissible onClose={ handleClose } className='border border-color-info'>\n            <Alert.Heading>A note from DataHaven</Alert.Heading>\n            <ReactMarkdown source={ props.intro['covid'] } escapeHtml={ false } />\n          </Alert>}\n\n          <Alert variant='light' className='border border-color-dark'>\n            <ReactMarkdown source={ props.intro[props.page] } />\n            <p>For more information, visit DataHaven's <a href=\"http://www.ctdatahaven.org/communities\">Communities</a> page or <a href=\"http://www.ctdatahaven.org\">main website</a>.</p>\n          </Alert>\n        </div>\n      )}\n  </NoteContext.Consumer>\n);\n\nexport default Intro;\n","import React from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\n\nimport { cleanHdrLabels, tblColumns, fmt, getMaxes } from './utils.js';\n\nimport '../styles/DataTable.css';\n\nconst DataTable = ({ data, v1, meta, spark, sort }) => {\n  const isCommunity = v1 === 'community';\n  const mightOmit = isCommunity ? ['group'] : ['name'];\n  const omit = ['level', 'category', 'region', ...mightOmit];\n\n  // colnames of what will be displayed\n  const colNames = tblColumns(data[0], omit);\n  const maxes = getMaxes(data);\n\n  const cols = colNames.map((col, i) => {\n    let formatter;\n    const isNumber = meta[col] !== undefined;\n    if (isNumber) {\n      if (spark) {\n        formatter = makeSpark(meta[col], col, maxes);\n      } else {\n        formatter = fmt(meta[col]);\n      }\n    } else {\n      formatter = null;\n    }\n    return {\n      dataField: col,\n      text: cleanHdrLabels(col),\n      sort: sort,\n      type: (isNumber ? 'number' : 'string'),\n      classes: (!isNumber ? 'position-sticky' : null),\n      headerClasses: (!isNumber ? 'position-sticky' : null),\n      formatter: formatter,\n      formatExtraData: spark,\n      align: (spark || !isNumber ? 'left' : 'right')\n    };\n  });\n\n  return (\n    <div className='DataTable' id='datatable'>\n      <BootstrapTable\n        bootstrap4\n        hover\n        condensed\n        classes='table-responsive-xl'\n        headerClasses='thead-light'\n        bordered={ true }\n        keyField={ isCommunity ? 'name' : 'group' }\n        data={ data }\n        columns={ cols }\n      />\n    </div>\n  )\n};\n\n\nconst makeSpark = (format, col, maxes) => (cell, row, rowIndex, extraData) => {\n  const max = maxes[col];\n  const scaled = (cell / max) * 100;\n  const w = cell ? (scaled + '%') : 0;\n  return (\n    <div className='spark' style={{ width: w }}>\n      <span className='sparktext'>{ fmt(format)(cell) }</span>\n    </div>\n  )\n};\n\nexport default DataTable;\n","import React, { useState } from 'react';\n\nimport { Container, Row, Col } from 'react-bootstrap';\nimport useForm, { FormContext } from 'react-hook-form';\n\nimport Stage from './Stage';\nimport Scatterplot from './Scatterplot';\nimport { IdxBarChart } from './BarChart';\nimport { ControlHolder, ScoreMainControls, ScoreCompareControls, SparkControls } from './Controls';\nimport Intro from './Intro';\nimport DataTable from './DataTable';\nimport { getVariables, getRegions, filterForScatter, filterForBar, cleanIdxLabels } from '../components/utils.js';\n\nimport '../styles/Dash.css';\n\n\nconst Scores = ({ data, index_comps, meta, intro }) => {\n  const formMethods = useForm({\n    mode: 'onChange'\n  });\n  const variables = getVariables(data);\n  const initValues = {\n    v1: variables[0],\n    v2: variables[1],\n    region: 'Connecticut'\n  };\n\n// state\n  const [v1, setV1] = useState(initValues.v1);\n  const [v2, setV2] = useState(initValues.v2);\n  const [region, setRegion] = useState(initValues.region);\n  const [spark, setSpark] = useState(true);\n\n// event handling\n  const onFormChange = (data, e) => {\n    const { _v1, _v2, _region } = formMethods.getValues();\n    setV1(_v1);\n    setV2(_v2);\n    setRegion(_region);\n  };\n\n  const onToggleChange = (e) => {\n    setSpark(e.target.checked);\n  };\n\n  return (\n    <div className='Dash Scores'>\n      <Container>\n        <header className=\"App-header\">\n          <h1>DataHaven Index scores</h1>\n        </header>\n\n        <Row><Intro page='scores' intro={ intro } /></Row>\n\n        <header className='App-header'>\n          <h2>How do groups and towns compare?</h2>\n        </header>\n        <Row className='align-items-end'>\n          <Col md={ 6 }>\n            <FormContext { ...formMethods }>\n              <ControlHolder>\n                <ScoreMainControls\n                  onChange={ formMethods.handleSubmit(onFormChange) }\n                  variables={ variables }\n                  regions={ getRegions(data) }\n                  // v1={ v1 }\n                />\n              </ControlHolder>\n            </FormContext>\n\n            { /* bar chart */ }\n            <Stage\n              type='lblBy2'\n              lbl={ cleanIdxLabels(v1) }\n              grouping={ region }\n              dataBy={ v1 === 'community' ? 'location' : 'group' }\n              axisLbl={ 'Scores 0 (worse) through 1,000 (better)' }\n            >\n              <IdxBarChart\n                data={ filterForBar(data, region, v1) }\n                rAccess={ v1 }\n              />\n            </Stage>\n          </Col>\n\n          <Col md={ 6 } className='second'>\n            <FormContext { ...formMethods }>\n              <ControlHolder>\n                <ScoreCompareControls\n                  onChange={ formMethods.handleSubmit(onFormChange) }\n                  variables={ variables }\n                  v1={ v1 }\n                  v2={ v2 }\n                />\n              </ControlHolder>\n            </FormContext>\n\n            { /* scatterplot */ }\n            <Stage\n              lbls={ [v1, v2].map((d) => cleanIdxLabels(d)) }\n              type='versus'\n              axisLbl={ 'Scores 0 (worse) through 1,000 (better)' }\n            >\n              <Scatterplot\n                data={ filterForScatter(data, region) }\n                vs={ [v1, v2] }\n              />\n            </Stage>\n          </Col>\n        </Row>\n\n        <hr />\n\n        <Row>\n          <Col>\n            <h2>What are these scores made of?</h2>\n\n            <Stage\n              grouping={ region }\n              type='lblBy2'\n              lbl={ 'Components of the ' + cleanIdxLabels(v1) }\n              dataBy={ v1 === 'community' ? 'location' : 'group' }\n              axisLbl={ v1 === 'community' ? '' : 'Share of adults' }\n              flush\n              hdrComponents={ <SparkControls checked={ spark } onChange={ onToggleChange } /> }\n            >\n              <DataTable v1={ v1 } meta={ meta[v1] }\n                data={ filterForBar(index_comps[v1], region, v1) }\n                spark={ spark }\n                sort={ true }\n              />\n            </Stage>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default Scores;\n","import React from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\n\nimport '../styles/Profile.css';\n\nconst Profile = (props) => {\n  const cols = props.cols || ['Indicator', 'Value'];\n  const columns = [{\n    dataField: 'indicator',\n    text: cols[0],\n    sort: false,\n    headerStyle: () => ({ width: '80%' })\n  }, {\n    dataField: 'value',\n    text: cols[1],\n    sort: false,\n    align: 'right',\n    // formatter: fmt('0.0%'),\n    classes: 'text-right',\n    headerStyle: () => ({ width: '20%' })\n  }];\n\n  return (\n    <div className='Profile DataTable' id='profile'>\n      <BootstrapTable\n        bootstrap4\n        classes='table-responsive-sm'\n        headerClasses='thead-light'\n        bordered={ true }\n        keyField={ 'indicator' }\n        data={ props.data }\n        columns={ columns }\n      />\n    </div>\n  )\n};\n\nexport default Profile;\n","import React, { useState } from 'react';\n\nimport { Container, Row, Col } from 'react-bootstrap';\nimport useForm, { FormContext } from 'react-hook-form';\n\nimport Stage from './Stage';\nimport { QBarChart } from './BarChart';\nimport { ControlHolder, SurveyMainControls, GroupControls } from './Controls';\nimport Intro from './Intro';\nimport Profile from './Profile';\nimport { cleanHdrLabels, getQMeta, getProfile, getNestedGrps, fmt } from '../components/utils.js';\n\nconst Survey = ({ data, meta, intro }) => {\n  const formMethods = useForm({\n    mode: 'onChange'\n  });\n  const topics = Object.keys(meta);\n  const regions = Object.keys(data);\n\n  const initValues = {\n    region: regions[0],\n    topic: topics[0],\n    indicator: meta[topics[0]][0].indicator,\n    group: 'Total'\n  };\n\n// state\n  const [region, setRegion] = useState(initValues.region);\n  const [topic, setTopic] = useState(initValues.topic);\n  const [indicator, setIndicator] = useState(initValues.indicator);\n  const [group, setGroup] = useState(initValues.group);\n\n// event handling\n  const onChange = (data, e) => {\n    const { _region, _topic, _indicator, _group } = formMethods.getValues();\n\n    // don't like setting state like this but oh well\n    const q0 = meta[_topic][0].indicator;\n    const g0 = initValues.group;\n    if (e.target.name === '_topic' || e.target.name === '_region') {\n      formMethods.setValue('_indicator', q0);\n      formMethods.setValue('_group', g0);\n      setIndicator(q0);\n      setGroup(g0);\n    } else {\n      setIndicator(_indicator);\n      setGroup(_group);\n    }\n    setRegion(_region);\n    setTopic(_topic);\n  };\n\n  const qDisplay = getQMeta(meta[topic], indicator) || '';\n  const groups = getNestedGrps(data[region][topic]);\n  const profileData = getProfile(data[region][topic], 'group', group, meta[topic]);\n\n  return (\n    <div className='Dash Survey'>\n      <Container>\n        <header className=\"App-header\">\n          <h1>2018 Community Wellbeing Survey</h1>\n        </header>\n\n\n        <Row><Intro page='survey' intro={ intro } /></Row>\n\n        <Row className=''>\n          <Col md={ 6 }>\n            <FormContext { ...formMethods }>\n              <ControlHolder>\n                <SurveyMainControls\n                  onChange={ formMethods.handleSubmit(onChange) }\n                  topics={ topics }\n                  regions={ regions }\n                  meta={ meta[topic] }\n                />\n              </ControlHolder>\n            </FormContext>\n          </Col>\n          <Col md={ 6 }>\n\n          </Col>\n        </Row>\n\n        <Row>\n          <Col md={ 6 }>\n            { /* bar chart */ }\n            <Stage\n              type='lblBy2'\n              lbl={ qDisplay.display }\n              dataBy={ 'group' }\n              grouping={ region }\n              axisLbl={ qDisplay.denom }\n            >\n              <QBarChart\n                data={ data[region][topic] }\n                rAccess={ indicator }\n                numFmt={ fmt('0.0%') }\n              />\n            </Stage>\n          </Col>\n\n          <Col md={ 6 } className='second'>\n            <FormContext { ...formMethods }>\n              <ControlHolder>\n                <GroupControls\n                  onChange={ formMethods.handleSubmit(onChange) }\n                  groups={ groups }\n                  meta={ meta[topic] }\n                />\n              </ControlHolder>\n            </FormContext>\n            { /* profile */ }\n            <Stage\n              type='colon'\n              lbl={ cleanHdrLabels(topic) }\n              grouping={ region }\n              dataBy={ group }\n              axisLbl={ qDisplay.denom }\n              flush\n            >\n              <Profile\n                data={ profileData }\n                cols={ ['Survey question', 'Value'] }\n              />\n            </Stage>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default Survey;\n","import React from 'react';\nimport { Map, TileLayer, GeoJSON } from 'react-leaflet';\nimport { getBounds, makeGeoJson, makeTooltip } from './utils.js';\nimport Legend from './Legend';\n\nimport '../styles/Chart.css';\n\nexport default class Choropleth extends React.Component {\n  getStyle = (feature) => {\n    const name = feature.properties.name;\n    const fillColor = this.props.data[name] && this.props.data[name].value ? this.props.colorscale(this.props.data[name].value) : '#ccc';\n    return {\n      fillColor: fillColor,\n      color: '#333',\n      weight: 0.5,\n      opacity: 1,\n      fillOpacity: 0.75\n    };\n  };\n\n  handleFeature = (feature, layer) => {\n    const name = feature.properties.name;\n    layer\n      .on('mouseover', this.featureHilite)\n      .on('mouseout', this.featureUnhilite);\n    layer.bindTooltip(() => (\n      makeTooltip(name, this.props.data[name] ? this.props.data[name].value : null, this.props.meta.format)),\n      { direction: 'top', offset: [0, -20], className: 'custom-tip' }\n    );\n  };\n\n  featureHilite = ({ target }) => {\n    target.setStyle({\n      fillOpacity: 0.95,\n      weight: 1\n    });\n\n  };\n  featureUnhilite = ({ target }) => {\n    target.setStyle({\n      fillOpacity: 0.75,\n      weight: 0.5\n    });\n  };\n\n  render() {\n    const bbox = getBounds(this.props.shape);\n    const geo = makeGeoJson(this.props.shape);\n\n    return (\n      <div className='Chart Choropleth'>\n        <Map\n          bounds={ bbox }\n          zoomSnap={ 0.5 }\n          zoomDelta={ 0.5 }\n          scrollWheelZoom={ false }\n        >\n          <TileLayer\n            url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-background/{z}/{x}/{y}.{ ext }\"\n            attribution='Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n            subdomains=\"abcd\"\n            minZoom={ 8 }\n            maxZoom={ 16 }\n            ext=\"png\"\n            opacity={ 0.4 }\n          />\n          <GeoJSON\n            key={ (feature) => feature.properties.name }\n            data={ geo }\n            style={ this.getStyle }\n            interactive={ true }\n            onEachFeature={ this.handleFeature }\n            onClick={ this.props.onClick }\n          />\n        </Map>\n\n        <Legend\n          scale={ this.props.colorscale }\n          format={ this.props.meta.format }\n          type='threshold'\n          style={ {\n            right: 0,\n            bottom: 0\n          } }\n        />\n      </div>\n    )\n  }\n}\n","import React, { useState } from 'react';\n\nimport { Container, Row, Col } from 'react-bootstrap';\nimport useForm, { FormContext } from 'react-hook-form';\nimport { schemeBuPu as palette } from 'd3-scale-chromatic';\n\nimport Stage from './Stage';\nimport { ControlHolder, RiskMainControls } from './Controls';\nimport Intro from './Intro';\nimport Choropleth from './Choropleth';\nimport Profile from './Profile';\n\nimport { getQMeta, getMapData, makeChoroScale, cleanHdrLabels, getProfile } from './utils.js';\n\nconst Risks = ({ data, meta, shape, intro }) => {\n  const formMethods = useForm({\n    mode: 'onChange'\n  });\n  const topics = Object.keys(meta);\n  const initValues = {\n    topic: topics[0],\n    indicator: meta[topics[0]][0].indicator\n  };\n\n  const towns = Object.keys(getMapData(data[initValues.topic], initValues.indicator));\n  // const towns = Object.keys(data[initValues.indicator][0]);\n  const [topic, setTopic] = useState(initValues.topic);\n  const [indicator, setIndicator] = useState(initValues.indicator);\n  const [town, setTown] = useState(towns[0]);\n\n  const onChange = (data, e) => {\n    const { _topic, _indicator } = formMethods.getValues();\n    const q0 = meta[_topic][0].indicator;\n    if (e.target.name === '_topic') {\n      formMethods.setValue('_indicator', q0);\n      setIndicator(q0);\n    } else {\n      setIndicator(_indicator);\n    }\n    setTopic(_topic);\n  };\n\n  const onFeatureClick = ({ layer }) => {\n    setTown(layer.feature.properties.name);\n  };\n\n  const qDisplay = getQMeta(meta[topic], indicator) || '';\n  const mapData = getMapData(data[topic], indicator);\n  const profileData = getProfile(data[topic], 'name', town, meta[topic]);\n\n  return (\n    <div className='Dash Risks'>\n      <Container>\n        <header className='App-header'>\n          <h1>2018 Community Wellbeing Survey</h1>\n        </header>\n\n        <Row>\n          <Intro page='risks' intro={ intro } />\n        </Row>\n\n        <Row>\n          <Col md={ 6 }>\n            <FormContext { ...formMethods }>\n              <ControlHolder>\n                <RiskMainControls\n                  onChange={ formMethods.handleSubmit(onChange) }\n                  topics={ topics }\n                  indicators={ meta[topic] }\n                />\n              </ControlHolder>\n            </FormContext>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col md={ 6 }>\n            <Stage\n              type='lblBy'\n              lbl={ qDisplay.display }\n              dataBy={ 'town' }\n              axisLbl={ qDisplay.denom }\n              flush\n            >\n              <Choropleth\n                data={ mapData }\n                shape={ shape }\n                colorscale={ makeChoroScale(mapData, palette, 5) }\n                meta={ { format: '.0%' } }\n                onClick={ onFeatureClick }\n              />\n            </Stage>\n          </Col>\n          <Col md={ 6 } className='second'>\n            <Stage\n              type='comma'\n              lbl={ cleanHdrLabels(topic) }\n              grouping={ town }\n              axisLbl={ qDisplay.denom }\n              flush\n            >\n              <Profile\n                data={ profileData }\n                cols={ [ 'Survey question', 'Value' ] }\n              />\n            </Stage>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  )\n};\n\nexport default Risks;\n","import React, { useState } from 'react';\n\nimport { Container, Row, Col } from 'react-bootstrap';\nimport useForm, { FormContext } from 'react-hook-form';\nimport { schemeBuPu as palette } from 'd3-scale-chromatic';\n\nimport Stage from './Stage';\nimport { ControlHolder, ChimeMainControls } from './Controls';\nimport Intro from './Intro';\nimport Choropleth from './Choropleth';\nimport Profile from './Profile';\n\nimport { getQMeta, getMapData, makeChoroScale, cleanHdrLabels, getGrpProfile } from './utils.js';\n\nconst Chime = ({ data, meta, shape, intro }) => {\n  const formMethods = useForm({\n    mode: 'onChange'\n  });\n  const ages = Object.keys(meta);\n  const initValues = {\n    indicator: meta[ages[0]][0].indicator,\n    age: ages[0]\n  };\n\n  const towns = Object.keys(getMapData(data[initValues.age], initValues.indicator));\n  const [age, setAge] = useState(initValues.age);\n  const [indicator, setIndicator] = useState(initValues.indicator);\n  const [town, setTown] = useState(towns[0]);\n  // const [view, setView] = useState(initValues.view);\n\n  const onChange = (data, e) => {\n    const { _age, _indicator } = formMethods.getValues();\n    setIndicator(_indicator);\n    setAge(_age);\n  };\n\n  const onFeatureClick = ({ layer }) => {\n    setTown(layer.feature.properties.name);\n  };\n\n  const mapData = getMapData(data[age], indicator);\n  const profileData = getGrpProfile(data, 'name', town, meta, indicator, null);\n  const qDisplay = getQMeta(meta[age], indicator) || '';\n\n  return (\n    <div className='Dash Chime'>\n      <Container>\n        <header className='App-header'>\n          <h1>CHIME hospital data</h1>\n        </header>\n\n        <Row>\n          <Intro page='chime' intro={ intro } />\n        </Row>\n\n        <Row>\n          <Col md={ 6 }>\n            <FormContext { ...formMethods }>\n              <ControlHolder>\n                <ChimeMainControls\n                  onChange={ formMethods.handleSubmit(onChange) }\n                  ages={ ages }\n                  indicators={ meta[age] }\n                />\n              </ControlHolder>\n            </FormContext>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col md={ 6 }>\n            <Stage\n              type='lblBy2'\n              lbl={ qDisplay.display + ' hospital encounters' }\n              dataBy={ 'town' }\n              grouping={ age.toLowerCase() }\n              axisLbl={ 'Rate per 10,000 residents' }\n              flush\n            >\n              <Choropleth\n                data={ mapData }\n                shape={ shape }\n                colorscale={ makeChoroScale(mapData, palette, 5) }\n                meta={ { format: ',d' } }\n                onClick={ onFeatureClick }\n              />\n            </Stage>\n          </Col>\n          <Col md={ 6 } className='second'>\n            <Stage\n              type='lblBy2'\n              lbl={ qDisplay.display + ' encounters' }\n              dataBy={ 'age' }\n              grouping={ town }\n              axisLbl={ 'Rate per 10,000 residents' }\n              flush\n            >\n              <Profile\n                data={ profileData }\n                meta={ meta[age] }\n                cols={ ['Condition', 'Rate'] }\n              />\n            </Stage>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  )\n};\n\nexport default Chime;\n","import React from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nimport '../styles/Header.css';\n\nconst Header = (props) => (\n  <div className='Header'>\n    <Navbar expand='md' variant='light' bg='light'>\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\n      <Navbar.Collapse id='basic-navbar-nav'>\n        <Nav variant='pills'>\n          { props.hdrs.map((h) => (\n            <LinkContainer to={ '/' + h.location } key={ `page-${ h.location }` }>\n              <Nav.Link>{ h.title }</Nav.Link>\n            </LinkContainer>\n          )) }\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  </div>\n);\n\nexport default Header;\n","import React from 'react';\nimport { Row, Col, Container, Alert } from 'react-bootstrap';\nimport '../styles/Footer.css';\n\nconst Footer = (props) => {\n  const dl = `https://query.data.world/s/${ props.urls.slug }`;\n  return (\n    <div className='Footer'>\n      <Container>\n        <hr />\n        <Row>\n          <Col>\n            <Alert variant='light' className='border'>\n              <Alert.Heading >Download this data</Alert.Heading>\n              <p>\n                {`Download ${ props.display.toLowerCase() } data`} <a href={ dl }>here</a>, filter and analyze data online on <a href={ props.dw }>data.world</a> (requires free sign-up), or download/clone from <a href={ props.urls.github }>GitHub</a> (advanced users).\n              </p>\n\n              <p>For source and methodology information, see the <a href='https://ctdatahaven.org/reports'>2019 DataHaven Community Index reports.</a></p>\n            </Alert>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport { Switch, Route, Redirect, useLocation } from 'react-router-dom';\nimport { objToArray, filterByString, filterTownLvl } from './components/utils.js';\n\nimport './App.css';\n\nimport Scores from './components/Scores';\nimport Survey from './components/Survey';\nimport Risks from './components/Risks';\nimport Chime from './components/Chime';\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport { NoteContext } from './components/NoteContext.js';\n\n// to scores\nimport index_data from './data/index_scatterplot.json';\nimport index_comps from './data/index_components.json';\nimport score_meta from './data/score_meta.json';\n// to survey\nimport cws_data from './data/cws_indicators.json';\nimport cws_meta from './data/cws_meta.json';\n// to risk by town\nimport town_data from './data/cws_health_by_town.json';\nimport town_topo from './data/town_topo.json';\n// to chime\nimport chime_data from './data/chime_data.json';\nimport chime_meta from './data/chime_meta.json';\n// intros\nimport intro_txt from './data/intro_text.json';\nimport dl_meta from './data/downloads.json';\n\nconst hdrs = {\n  survey: 'Wellbeing indicators',\n  risks: 'Health risks by town',\n  scores: 'Index scores',\n  chime: 'Hospital encounters'\n};\n\nconst useDownload = () => {\n  const location = useLocation().pathname.substring(1);\n  return {\n    location: location,\n    urls: dl_meta[location],\n    dw: 'https://data.world/camille86/cws2018',\n    display: hdrs[location]\n  };\n};\n\nconst App = () => {\n  const download = useDownload();\n  const [noteOpen, setNoteOpen] = useState(true);\n  const handleClose = () => {\n    setNoteOpen(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header hdrs={ objToArray(hdrs, 'location', 'title') } />\n\n      <Switch>\n        <Route exact path='/' render={ () => <Redirect to='/survey' /> } />\n        <Route exact path='/survey'>\n          <NoteContext.Provider value={ { noteOpen, handleClose } }>\n            <Survey\n              data={ cws_data }\n              meta={ cws_meta }\n              intro={ intro_txt }\n            />\n          </NoteContext.Provider>\n        </Route>\n        <Route exact path='/risks'>\n          <NoteContext.Provider value={ { noteOpen, handleClose } }>\n            <Risks\n              data={ town_data }\n              meta={ filterTownLvl(filterByString(cws_meta, 'health')) }\n              shape={ town_topo }\n              intro={ intro_txt }\n            />\n          </NoteContext.Provider>\n        </Route>\n        <Route exact path='/scores'>\n          <NoteContext.Provider value={ { noteOpen, handleClose } }>\n            <Scores\n              data={ index_data }\n              index_comps={ index_comps }\n              meta={ score_meta }\n              intro={ intro_txt }\n            />\n          </NoteContext.Provider>\n        </Route>\n        <Route exact path='/chime'>\n          <NoteContext.Provider value={ { noteOpen, handleClose } }>\n            <Chime\n              data={ chime_data }\n              meta={ chime_meta }\n              shape={ town_topo }\n              intro={ intro_txt }\n            />\n          </NoteContext.Provider>\n        </Route>\n      </Switch>\n      { download.location ? <Footer { ...download } /> : null }\n\n    </div>\n  );\n};\n\n//////////////////\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'leaflet/dist/leaflet.css';\n// import './styles/bootstrap.min.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport './index.css';\n\nReactDOM.render(\n  <Router basename={ process.env.PUBLIC_URL + '/' }>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}